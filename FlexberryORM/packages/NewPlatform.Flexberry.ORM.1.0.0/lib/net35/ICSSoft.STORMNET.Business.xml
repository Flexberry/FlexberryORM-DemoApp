<?xml version="1.0"?>
<doc>
    <assembly>
        <name>ICSSoft.STORMNET.Business</name>
    </assembly>
    <members>
        <member name="T:ICSSoft.STORMNET.Business.AdvansedColumn">
            <summary>
            Дополнительная колоночка
            </summary>
        </member>
        <member name="F:ICSSoft.STORMNET.Business.AdvansedColumn.expression">
            <summary>
            The expression.
            </summary>
        </member>
        <member name="F:ICSSoft.STORMNET.Business.AdvansedColumn.name">
            <summary>
            The name.
            </summary>
        </member>
        <member name="F:ICSSoft.STORMNET.Business.AdvansedColumn.storageSourceModification">
            <summary>
            The storage source modification.
            </summary>
        </member>
        <member name="M:ICSSoft.STORMNET.Business.AdvansedColumn.#ctor(System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ICSSoft.STORMNET.Business.AdvansedColumn"/> struct.
            </summary>
            <param name="Name">
            The name.
            </param>
            <param name="Expression">
            The expression.
            </param>
            <param name="StorageSourceModification">
            The storage source modification.
            </param>
        </member>
        <member name="M:ICSSoft.STORMNET.Business.AdvansedColumn.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:ICSSoft.STORMNET.Business.AdvansedColumn"/> struct.
            </summary>
            <param name="info">
            The info.
            </param>
            <param name="context">
            The context.
            </param>
        </member>
        <member name="M:ICSSoft.STORMNET.Business.AdvansedColumn.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            The get object data.
            </summary>
            <param name="info">
            The info.
            </param>
            <param name="context">
            The context.
            </param>
        </member>
        <member name="P:ICSSoft.STORMNET.Business.AdvansedColumn.Expression">
            <summary>
            Выражение
            </summary>
        </member>
        <member name="P:ICSSoft.STORMNET.Business.AdvansedColumn.Name">
            <summary>
            Наименование колонки
            </summary>
        </member>
        <member name="P:ICSSoft.STORMNET.Business.AdvansedColumn.StorageSourceModification">
            <summary>
            ????????????????????????????
            </summary>
        </member>
        <member name="T:ICSSoft.STORMNET.Business.Audit.EmptyAudit">
            <summary>
            Класс-заглушка для сервиса аудита, через который никакой аудит не пишется.
            </summary>
        </member>
        <member name="T:ICSSoft.STORMNET.Business.Audit.IAudit">
            <summary>
            Интерфейс для аудита (основная логика).
            </summary>
        </member>
        <member name="M:ICSSoft.STORMNET.Business.Audit.IAudit.WriteCommonAuditOperation(ICSSoft.STORMNET.Business.Audit.CommonAuditParameters)">
            <summary>
            Создание записи аудита об операции удаления, создания и изменения объекта.
            </summary>
            <param name="commonAuditParameters">
            Объект, содержащий данные для аудита.
            </param>
            <returns>
            Id сформированной записи аудита.
            </returns>
        </member>
        <member name="M:ICSSoft.STORMNET.Business.Audit.IAudit.RatifyAuditOperation(ICSSoft.STORMNET.Business.Audit.RatificationAuditParameters)">
            <summary>
            Подверждение созданных ранее операций аудита.
            </summary>
            <param name="ratificationAuditParameters">
            Параметры для утверждения внесённых ранее записей аудита.
            </param>
        </member>
        <member name="M:ICSSoft.STORMNET.Business.Audit.IAudit.WriteCustomAuditOperation(ICSSoft.STORMNET.Business.Audit.CheckedCustomAuditParameters)">
            <summary>
            Создание записи аудита о собственной операции или действии над собственным объектом.
            </summary>
            <param name="checkedCustomAuditParameters">
            Параметры аудита.
            </param>
            <returns>
            Id сформированной записи аудита.
            </returns>
        </member>
        <member name="M:ICSSoft.STORMNET.Business.Audit.EmptyAudit.WriteCommonAuditOperation(ICSSoft.STORMNET.Business.Audit.CommonAuditParameters)">
            <summary>
            Метод ничего не делает, возвращается случайный идентификатор.
            </summary>
            <param name="commonAuditParameters"> Объект, содержащий данные для аудита. </param>
            <returns> Случайный идентификатор. </returns>
        </member>
        <member name="M:ICSSoft.STORMNET.Business.Audit.EmptyAudit.RatifyAuditOperation(ICSSoft.STORMNET.Business.Audit.RatificationAuditParameters)">
            <summary>
            Метод ничего не делает.
            </summary>
            <param name="ratificationAuditParameters"> Объект, содержащий данные для аудита. </param>
        </member>
        <member name="M:ICSSoft.STORMNET.Business.Audit.EmptyAudit.WriteCustomAuditOperation(ICSSoft.STORMNET.Business.Audit.CheckedCustomAuditParameters)">
            <summary>
            Метод ничего не делает, возвращается случайный идентификатор.
            </summary>
            <param name="checkedCustomAuditParameters"> Объект, содержащий данные для аудита. </param>
            <returns> Случайный идентификатор. </returns>
        </member>
        <member name="T:ICSSoft.STORMNET.Business.Audit.AsyncAuditController">
            <summary>
            Контроллер, отвечающий за асинхронность при работе аудита.
            </summary>
        </member>
        <member name="F:ICSSoft.STORMNET.Business.Audit.AsyncAuditController._audit">
            <summary>
            Непосредственно аудит, которому будут передаваться запросы
            </summary>
        </member>
        <member name="F:ICSSoft.STORMNET.Business.Audit.AsyncAuditController.threadNeedToStop">
            <summary>
            Потоку пора остановиться
            </summary>
        </member>
        <member name="F:ICSSoft.STORMNET.Business.Audit.AsyncAuditController.auditThread">
            <summary>
            Поток по отправке данных для аудита
            </summary>
        </member>
        <member name="F:ICSSoft.STORMNET.Business.Audit.AsyncAuditController.threadQueue">
            <summary>
            Список заявок для потока отправки сообщений аудиту
            </summary>
        </member>
        <member name="F:ICSSoft.STORMNET.Business.Audit.AsyncAuditController.sleepTime">
            <summary>
            Как долго спит поток, если нет заявок
            </summary>
        </member>
        <member name="M:ICSSoft.STORMNET.Business.Audit.AsyncAuditController.WriteAuditOperationAsync(ICSSoft.STORMNET.Business.Audit.AuditParametersBase)">
            <summary>
            Записываем операции в очередь на аудит
            </summary>
            <param name="auditParametersBase">Параметры для их записи на аудит</param>
        </member>
        <member name="M:ICSSoft.STORMNET.Business.Audit.AsyncAuditController.StartAuditThread">
            <summary>
            Если поток аудита не работает, то его запускают
            </summary>
        </member>
        <member name="M:ICSSoft.STORMNET.Business.Audit.AsyncAuditController.SendToAuditAsync">
            <summary>
            На базе этого метода работает поток, который отправляет сообщения аудиту
            </summary>
        </member>
        <member name="P:ICSSoft.STORMNET.Business.Audit.AsyncAuditController.Audit">
            <summary>
            Непосредственно аудит, которому будут передаваться запросы
            </summary>
        </member>
        <member name="P:ICSSoft.STORMNET.Business.Audit.AsyncAuditController.SleepTime">
            <summary>
            Как долго спит поток, если нет заявок
            </summary>
        </member>
        <member name="P:ICSSoft.STORMNET.Business.Audit.AsyncAuditController.ThreadQueue">
            <summary>
            Список заявок для потока отправки сообщений аудиту
            </summary>
        </member>
        <member name="T:ICSSoft.STORMNET.Business.DataServiceObjectEvents">
            <summary>
            Типы событий на которые могу быть навешены обработчики 
            </summary>
        </member>
        <member name="F:ICSSoft.STORMNET.Business.DataServiceObjectEvents.OnAnyEvent">
            <summary>
            ???
            </summary>
        </member>
        <member name="F:ICSSoft.STORMNET.Business.DataServiceObjectEvents.OnInsertToStorage">
            <summary>
            На добавление
            </summary>
        </member>
        <member name="F:ICSSoft.STORMNET.Business.DataServiceObjectEvents.OnUpdateInStorage">
            <summary>
            На изменение
            </summary>
        </member>
        <member name="F:ICSSoft.STORMNET.Business.DataServiceObjectEvents.OnDeleteFromStorage">
            <summary>
            На удаление
            </summary>
        </member>
        <member name="F:ICSSoft.STORMNET.Business.DataServiceObjectEvents.OnAllEvents">
            <summary>
            На все
            </summary>
        </member>
        <member name="T:ICSSoft.STORMNET.Business.CantApplyBusinessServerAttributeWithNotBusinessServiceTypeException">
            <summary>
            невозможно применить атрибут к этому типу
            </summary>
        </member>
        <member name="F:ICSSoft.STORMNET.Business.CantApplyBusinessServerAttributeWithNotBusinessServiceTypeException.CheckingType">
            <summary>
            проверяемый тип
            </summary>
        </member>
        <member name="M:ICSSoft.STORMNET.Business.CantApplyBusinessServerAttributeWithNotBusinessServiceTypeException.#ctor(System.Type)">
            <summary>
            
            </summary>
            <param name="ct"></param>
        </member>
        <member name="T:ICSSoft.STORMNET.Business.BusinessServerAttribute">
            <summary>
            Атрибут лоя установки бизнессервера обработки событий
            </summary>
        </member>
        <member name="F:ICSSoft.STORMNET.Business.BusinessServerAttribute.BusinessServerType">
            <summary>
            Тип бизнессервера
            </summary>
        </member>
        <member name="F:ICSSoft.STORMNET.Business.BusinessServerAttribute.ServerEvents">
            <summary>
            События 
            По умолчаню OnAllEvents
            </summary>
        </member>
        <member name="F:ICSSoft.STORMNET.Business.BusinessServerAttribute.Order">
            <summary>
            Упорядочение бизнес-серверов. 0 - выполнится раньше остальных, int.MaxValue - выполнится последним. По-умолчанию: 0
            </summary>
        </member>
        <member name="M:ICSSoft.STORMNET.Business.BusinessServerAttribute.#ctor(System.Type,System.Int32)">
            <summary>
            Бизнессервер
            </summary>
            <param name="businessServerType">Тип бизнессервера</param>
            <param name="order">Упорядочение бизнес-серверов. 0 - выполнится раньше остальных, int.MaxValue - выполнится последним</param>
        </member>
        <member name="M:ICSSoft.STORMNET.Business.BusinessServerAttribute.#ctor(System.Type)">
            <summary>
            Бизнессервер
            </summary>
            <param name="businessServerType">Тип бизнессервера</param>
        </member>
        <member name="M:ICSSoft.STORMNET.Business.BusinessServerAttribute.#ctor(System.String)">
            <summary>
            Бизнессервер
            </summary>
            <param name="businessServerType">Тип бизнессервера</param>
        </member>
        <member name="M:ICSSoft.STORMNET.Business.BusinessServerAttribute.#ctor(System.Type,ICSSoft.STORMNET.Business.DataServiceObjectEvents)">
            <summary>
            Бизнессервер
            </summary>
            <param name="businessServerType">Тип бизнессервера</param>
            <param name="serverEvents">События</param>
        </member>
        <member name="M:ICSSoft.STORMNET.Business.BusinessServerAttribute.#ctor(System.Type,ICSSoft.STORMNET.Business.DataServiceObjectEvents,System.Int32)">
            <summary>
            Бизнессервер
            </summary>
            <param name="businessServerType">Тип бизнессервера</param>
            <param name="serverEvents">События</param>
            <param name="order">Упорядочение бизнес-серверов. 0 - выполнится раньше остальных, int.MaxValue - выполнится последним</param>
        </member>
        <member name="M:ICSSoft.STORMNET.Business.BusinessServerAttribute.#ctor(System.String,ICSSoft.STORMNET.Business.DataServiceObjectEvents)">
            <summary>
            Бизнессервер
            </summary>
            <param name="businessServerType">Тип бизнессервера</param>
            <param name="serverEvents">События</param>
        </member>
        <member name="M:ICSSoft.STORMNET.Business.BusinessServerAttribute.#ctor(System.String,ICSSoft.STORMNET.Business.DataServiceObjectEvents,System.Int32)">
            <summary>
            Бизнессервер
            </summary>
            <param name="businessServerType">Тип бизнессервера</param>
            <param name="serverEvents">События</param>
            <param name="order">Упорядочение бизнес-серверов. 0 - выполнится раньше остальных, int.MaxValue - выполнится последним</param>
        </member>
        <member name="T:ICSSoft.STORMNET.Business.BusinessServerProvider">
            <summary>
            Провайдер бизнессервисов
            </summary>
        </member>
        <member name="F:ICSSoft.STORMNET.Business.BusinessServerProvider.cache">
            <summary>
            Кеш бизнессерверов
            </summary>
        </member>
        <member name="M:ICSSoft.STORMNET.Business.BusinessServerProvider.GetBusinessServer(System.Type,ICSSoft.STORMNET.ObjectStatus,ICSSoft.STORMNET.Business.IDataService)">
            <summary>
            Получить бизнессервер
            </summary>
            <param name="dataObjectType">для объекта типа</param>
            <param name="objectStatus">Статус объекта</param>
            <returns>бизнессервер</returns>
        </member>
        <member name="M:ICSSoft.STORMNET.Business.BusinessServerProvider.GetBusinessServer(System.Type,ICSSoft.STORMNET.Business.DataServiceObjectEvents,ICSSoft.STORMNET.Business.IDataService)">
            <summary>
            Получить бизнессерве
            </summary>
            <param name="dataObjectType">для объекта типа</param>
            <param name="dsevent">событие</param>
            <returns></returns>
        </member>
        <member name="T:ICSSoft.STORMNET.Business.Audit.HelpStructures.AuditAdditionalInfo">
            <summary>
            Структура для сохранения сведений об автогенерируемых полях (тех, что имеют атрибут DisableInsertPropertyAttribute).
            Она будет доотправляться в аудит после того, как объект будет сохранён.
            </summary>
        </member>
        <member name="M:ICSSoft.STORMNET.Business.Audit.HelpStructures.AuditAdditionalInfo.SetNewFieldValuesForList(System.Data.IDbTransaction,ICSSoft.STORMNET.Business.SQLDataService,System.Collections.Generic.List{ICSSoft.STORMNET.Business.Audit.HelpStructures.AuditAdditionalInfo})">
            <summary>
            Обновление значений сохранённых полей, которые нужно дообновить в объекте.
            </summary>
            <param name="transaction">Транзакция, в рамках которой можно выполнить дочитку.</param>
            <param name="sqlDataService">Сервис данных, с помощью которого можно выполнить дочитку.</param>
            <param name="auditAdditionalInfoList">Текущий список для обновления.</param>
            <returns>Обновлённый список.</returns>
        </member>
        <member name="M:ICSSoft.STORMNET.Business.Audit.HelpStructures.AuditAdditionalInfo.CreateRecord(System.Nullable{System.Guid},ICSSoft.STORMNET.DataObject,ICSSoft.STORMNET.ObjectStatus,System.String)">
            <summary>
            Создание записи типа AuditAdditionalInfo о дополнительных полях, которые стоило бы передавть в аудит.
            Если auditRecordPrimaryKey = null или auditRecordPrimaryKey.Value == Guid.Empty, то запись сформирована не будет, поскольку неизвестно будет, куда именно дописывать данные аудита.
            </summary>
            <param name="auditRecordPrimaryKey">Первичный ключ записи аудита, в который нужно дописать данные.</param>
            <param name="operatedObject">Объект, поля которого нужно дописать в аудит.</param>
            <param name="operatedObjectStatus">Статус объекта (только при изменении нужно писать старое и новое значения поля).</param>
            <param name="viewName">Имя представления, по которому проводится аудит.</param>
            <returns>Сформированная запись.</returns>
        </member>
        <member name="M:ICSSoft.STORMNET.Business.Audit.HelpStructures.AuditAdditionalInfo.GenerateRecords(System.Collections.Generic.List{System.Guid})">
            <summary>
            На основе списка идентификаторов записей аудита получаем список с информацией, которую необходимо передать в аудит.
            </summary>
            <param name="auditRecordPrimaryKeys">Список идентификаторов записей аудита.</param>
            <returns>Список с дополнительной информацией для аудита.</returns>
        </member>
        <member name="M:ICSSoft.STORMNET.Business.Audit.HelpStructures.AuditAdditionalInfo.HasPropertyDisableInsertPropertyAttribute(System.String,System.Type)">
            <summary>
            Проверка, имеет ли свойство атрибут DisableInsertPropertyAttribute.
            </summary>
            <param name="propertyName">Имя свойства.</param>
            <param name="objectType">Тип объекта, в котором будет проверяться свойство.</param>
            <returns>Ответ о том, содержит ли свойство атрибут.</returns>
        </member>
        <member name="M:ICSSoft.STORMNET.Business.Audit.HelpStructures.AuditAdditionalInfo.#ctor(System.Guid)">
            <summary>
            Конструктор объекта типа AuditAdditionalInfo, содержащий информацию о дополнительных полях, которые стоило бы передать в аудит.
            В данном конструкторе никаких полей не передаётся (сделано для удобства перехода с первой версии подтверждения аудита).
            </summary>
            <param name="auditRecordPriKey">Первичный ключ записи аудита, в который нужно дописать данные.</param>
            <returns>Сформированная запись.</returns>
        </member>
        <member name="M:ICSSoft.STORMNET.Business.Audit.HelpStructures.AuditAdditionalInfo.#ctor(System.Guid,ICSSoft.STORMNET.DataObject,ICSSoft.STORMNET.ObjectStatus,System.String)">
            <summary>
            Конструктор объекта типа AuditAdditionalInfo, содержащий информацию о дополнительных полях, которые стоило бы передавть в аудит.
            </summary>
            <param name="auditRecordPriKey">Первичный ключ записи аудита, в который нужно дописать данные.</param>
            <param name="operatedObject">Объект, поля которого нужно дописать в аудит.</param>
            <param name="operatedObjectStatus">Статус объекта (только при изменении нужно писать старое и новое значения поля).</param>
            <param name="viewName">Имя представления, по которому проводится аудит.</param>
            <returns>Сформированная запись.</returns>
        </member>
        <member name="M:ICSSoft.STORMNET.Business.Audit.HelpStructures.AuditAdditionalInfo.ConstructViewForKeptFields">
            <summary>
            Конструирование объекта для зачитывания исключительно свойств, которые имеют атрибут DisableInsertPropertyAttribute.
            </summary>
            <returns>Сформированное представление.</returns>
        </member>
        <member name="M:ICSSoft.STORMNET.Business.Audit.HelpStructures.AuditAdditionalInfo.SetNewFieldValues(System.Data.IDbTransaction,ICSSoft.STORMNET.Business.SQLDataService)">
            <summary>
            Из БД вычитывается объект и определяются, какие значения после сохранения в БД приняли поля с атрибутом DisableInsertPropertyAttribute.
            Зачитка объекта идёт в той же транзакции, что и были обновлены объекты.
            </summary>
            <param name="transaction">Транзакция, в рамках которой нужно производить зачитку.</param>
            <param name="sqlDataService">Сервис данных, с помощью которого нужно проводить зачитку.</param>
        </member>
        <member name="F:ICSSoft.STORMNET.Business.Audit.HelpStructures.AuditAdditionalInfo._keptFieldsValues">
            <summary>
            Список с сохранёнными данными полей, имеющих атрибут DisableInsertPropertyAttribute.
            </summary>
        </member>
        <member name="F:ICSSoft.STORMNET.Business.Audit.HelpStructures.AuditAdditionalInfo._auditRecordPrimaryKey">
            <summary>
            Идентификатор записи аудита.
            </summary>
        </member>
        <member name="F:ICSSoft.STORMNET.Business.Audit.HelpStructures.AuditAdditionalInfo._assemblyQualifiedObjectType">
            <summary>
            Полное имя типа объекта.
            Используется, чтобы перепроверить, что указанные поля объекта действительно имеют атрибут DisableInsertPropertyAttribute.
            </summary>
        </member>
        <member name="F:ICSSoft.STORMNET.Business.Audit.HelpStructures.AuditAdditionalInfo._objectPrimaryKey">
            <summary>
            Идентификатор самого объекта.
            </summary>
        </member>
        <member name="P:ICSSoft.STORMNET.Business.Audit.HelpStructures.AuditAdditionalInfo.ObjectPrimaryKey">
            <summary>
            Идентификатор самого объекта.
            </summary>
        </member>
        <member name="P:ICSSoft.STORMNET.Business.Audit.HelpStructures.AuditAdditionalInfo.AuditRecordPrimaryKey">
            <summary>
            Идентификатор записи аудита.
            </summary>
        </member>
        <member name="P:ICSSoft.STORMNET.Business.Audit.HelpStructures.AuditAdditionalInfo.AssemblyQualifiedObjectType">
            <summary>
            Полное имя типа объекта.
            Используется, чтобы перепроверить, что указанные поля объекта действительно имеют атрибут DisableInsertPropertyAttribute.
            </summary>
        </member>
        <member name="P:ICSSoft.STORMNET.Business.Audit.HelpStructures.AuditAdditionalInfo.KeptFieldsValues">
            <summary>
            Список с сохранёнными данными полей, имеющих атрибут DisableInsertPropertyAttribute.
            (Возвращается копия сохранённого списка).
            </summary>
        </member>
        <member name="T:ICSSoft.STORMNET.Business.Audit.HelpStructures.AuditAdditionalInfo.FieldValues">
            <summary>
            Класс для хранения старого и нового значения поля.
            </summary>
        </member>
        <member name="F:ICSSoft.STORMNET.Business.Audit.HelpStructures.AuditAdditionalInfo.FieldValues.OldValue">
            <summary>
            Старое значение поля.
            </summary>
        </member>
        <member name="F:ICSSoft.STORMNET.Business.Audit.HelpStructures.AuditAdditionalInfo.FieldValues.NewValue">
            <summary>
            Новое значение поля.
            </summary>
        </member>
        <member name="M:ICSSoft.STORMNET.Business.Audit.HelpStructures.AuditAdditionalInfo.FieldValues.#ctor(System.String)">
            <summary>
            Конструктор, где определяется только старое значение поля.
            </summary>
            <param name="oldValue">Старое значение поля.</param>
        </member>
        <member name="M:ICSSoft.STORMNET.Business.Audit.HelpStructures.AuditAdditionalInfo.FieldValues.#ctor(System.String,System.String)">
            <summary>
            Конструктор, где определяются сразу старое и новое значения поля.
            </summary>
            <param name="oldValue">Старое значение поля.</param>
            <param name="newValue">Новое значение поля.</param>
        </member>
        <member name="M:ICSSoft.STORMNET.Business.Audit.HelpStructures.AuditAdditionalInfo.FieldValues.Clone">
            <summary>
            Создать копию текущего объекта.
            </summary>
            <returns>Копия объекта.</returns>
        </member>
        <member name="T:ICSSoft.STORMNET.Business.Audit.CommonAuditParameters">
            <summary>
            Класс для записи общих данных аудита
            (которые скорее всего были сгенерированы сервисом данных)
            </summary>
        </member>
        <member name="T:ICSSoft.STORMNET.Business.Audit.AuditParameters">
            <summary>
            Базовый класс для установки в очередь сообщений при асинхронной записи аудита
            </summary>
        </member>
        <member name="T:ICSSoft.STORMNET.Business.Audit.DatabaseAuditParameters">
            <summary>
            Базовый класс, содержащий настройки БД, куда будет писаться аудит
            </summary>
        </member>
        <member name="T:ICSSoft.STORMNET.Business.Audit.AuditParametersBase">
            <summary>
            Базовый класс для установки в очередь сообщений при асинхронной записи аудита
            </summary>
        </member>
        <member name="F:ICSSoft.STORMNET.Business.Audit.DatabaseAuditParameters.ApplicationMode">
            <summary>
            Режим работы приложения: win или web
            </summary>
        </member>
        <member name="F:ICSSoft.STORMNET.Business.Audit.DatabaseAuditParameters.AuditConnectionStringName">
            <summary>
            Имя строки подключения к БД аудита
            </summary>
        </member>
        <member name="M:ICSSoft.STORMNET.Business.Audit.AuditParameters.GetDataObjectFromXml(System.String,System.String,System.String)">
            <summary>
            Конструирование объекта данных из xml
            </summary>
            <param name="typeOfObject"> Имя типа объекта данных </param>
            <param name="assemblyOfObject"> Имя сборки объекта данных </param>
            <param name="xmlValue"> Сериализованное представление в виде xml </param>
            <returns>  Сконструированный объект данных </returns>
        </member>
        <member name="F:ICSSoft.STORMNET.Business.Audit.CommonAuditParameters._operationedObject">
            <summary>
            Объект, над которым провели аудируемую операцию (если это обновление, то здесь хранится новая версия объекта).
            </summary>
        </member>
        <member name="F:ICSSoft.STORMNET.Business.Audit.CommonAuditParameters._serializedOperatedObject">
            <summary>
            Сериализованное представление объекта, над которым выполнили аудируемую операцию.
            </summary>
        </member>
        <member name="F:ICSSoft.STORMNET.Business.Audit.CommonAuditParameters._typeOfOperatedObject">
            <summary>
            Тип объекта, над которым выполнили аудируемую операцию.
            </summary>
        </member>
        <member name="F:ICSSoft.STORMNET.Business.Audit.CommonAuditParameters._assemblyOfOperatedObject">
            <summary>
            Сборка, в которой можно найти тип объекта, над которым выполнили аудируемую операцию.
            </summary>
        </member>
        <member name="F:ICSSoft.STORMNET.Business.Audit.CommonAuditParameters._serializedOldOperatedObject">
            <summary>
            Сериализованное представление старой версии объекта, над которым выполнили аудируемую операцию.
            </summary>
        </member>
        <member name="F:ICSSoft.STORMNET.Business.Audit.CommonAuditParameters._oldVersionOperatedObject">
            <summary>
            Старая версия объекта, над которым провели аудируемую операцию.
            </summary>
        </member>
        <member name="P:ICSSoft.STORMNET.Business.Audit.CommonAuditParameters.OperatedObject">
            <summary>
            Объект, над которым провели аудируемую операцию (если это обновление, то здесь хранится новая версия объекта).
            </summary>
        </member>
        <member name="P:ICSSoft.STORMNET.Business.Audit.CommonAuditParameters.OldVersionOperatedObject">
            <summary>
            Старая версия объекта, над которым провели аудируемую операцию.
            </summary>
        </member>
        <member name="T:ICSSoft.STORMNET.Business.Audit.CheckedCustomAuditParameters">
            <summary>
            Параметры аудита, используемые для записи в БД аудита
            сведений о произвольных операциях над произвольными объектами.
            </summary>
        </member>
        <member name="F:ICSSoft.STORMNET.Business.Audit.CheckedCustomAuditParameters._auditObjectPrimaryKey">
            <summary>
            Первичный ключ объекта (может быть как типа GUID, так и int), о котором нужно внести запись в аудит.
            </summary>
        </member>
        <member name="F:ICSSoft.STORMNET.Business.Audit.CheckedCustomAuditParameters._typeOfAuditObjectPrimaryKey">
            <summary>
            Тип идентификатора объекта.
            </summary>
        </member>
        <member name="F:ICSSoft.STORMNET.Business.Audit.CheckedCustomAuditParameters._auditObjectPrimaryKeyAsString">
            <summary>
            Строковое представление идентификатора объекта.
            </summary>
        </member>
        <member name="P:ICSSoft.STORMNET.Business.Audit.CheckedCustomAuditParameters.AuditObjectPrimaryKey">
            <summary>
            Первичный ключ объекта (может быть как типа GUID, так и int), о котором нужно внести запись в аудит.
            </summary>
        </member>
        <member name="T:ICSSoft.STORMNET.Business.Audit.HelpStructures.ErrorProcesser">
            <summary>
            Класс для обработки возникших исключений
            </summary>
        </member>
        <member name="F:ICSSoft.STORMNET.Business.Audit.HelpStructures.ErrorProcesser.WinServiceErrorMessageStart">
            <summary>
            Сообщание для передачи из wcf-сервиса.
            </summary>
        </member>
        <member name="M:ICSSoft.STORMNET.Business.Audit.HelpStructures.ErrorProcesser.ProcessAuditError(System.Exception,System.String,System.Boolean)">
            <summary>
            Обработка исключения c клиентской стороны.
            </summary>
            <param name="exception"> Исключение, которое будет записано в лог + проброшено, если задана настройка. </param>
            <param name="errorHeader"> Заголовок для ошибки. </param>
            <param name="throwExceptions"> Следует ли пробрасывать исключение далее. </param>
        </member>
        <member name="M:ICSSoft.STORMNET.Business.Audit.HelpStructures.ErrorProcesser.ProcessWinServiceError(System.Exception)">
            <summary>
            Обработка ошибок, произошедших при работе wcf-сервиса (напрямую данная технология передавать не позволяет).
            </summary>
            <param name="exception">Исключение, информация о котором будет записана в лог + проброшена далее так, как требует wcf.</param>
        </member>
        <member name="T:ICSSoft.STORMNET.Business.Audit.Exceptions.DataNotFoundAuditException">
            <summary>
            Исключение, сообщающее, что требуемые аудитом данные не удалось получить
            </summary>
        </member>
        <member name="T:ICSSoft.STORMNET.Business.Audit.Exceptions.AuditException">
            <summary>
            Общий базовый класс для исключений подсистемы аудита
            </summary>
        </member>
        <member name="M:ICSSoft.STORMNET.Business.Audit.Exceptions.AuditException.#ctor(System.Exception)">
            <summary>
            Формирование сообщения об ошибке "При работе подсистемы аудита произошло исключение" с соответствующим внутренним исключением.
            </summary>
            <param name="innerException"> Внутреннее исключение. </param>
        </member>
        <member name="M:ICSSoft.STORMNET.Business.Audit.Exceptions.AuditException.#ctor(System.String)">
            <summary>
            Формирование сообщения об ошибке с указанным текстом.
            </summary>
            <param name="message"> Текст сообщения об ошибке. </param>
        </member>
        <member name="M:ICSSoft.STORMNET.Business.Audit.Exceptions.AuditException.#ctor(System.String,System.Exception)">
            <summary>
             Формирование сообщения об ошибке с указанным текстом с соответствующим внутренним исключением.
            </summary>
            <param name="message"> Текст сообщения об ошибке. </param>
            <param name="innerException"> Внутреннее исключение. </param>
        </member>
        <member name="M:ICSSoft.STORMNET.Business.Audit.Exceptions.DataNotFoundAuditException.#ctor(System.String)">
            <summary>
            Конструктор для инициализации сообщения исключениия
            </summary>
            <param name="message">Тест исключения</param>
        </member>
        <member name="T:ICSSoft.STORMNET.Business.Audit.Exceptions.DisabledAuditException">
            <summary>
            Исключение, сообщающее, что аудит выключен, хотя пытается произвестись запись
            </summary>
        </member>
        <member name="M:ICSSoft.STORMNET.Business.Audit.Exceptions.DisabledAuditException.#ctor">
            <summary>
            Конструктор для инициализации сообщения исключениия
            </summary>
        </member>
        <member name="T:ICSSoft.STORMNET.Business.Audit.Exceptions.ExecutionFailedAuditException">
            <summary>
            Исключение, сообщающее, что запрашиваемое действие на настоящий момент не поддерживается аудитом
            </summary>
        </member>
        <member name="M:ICSSoft.STORMNET.Business.Audit.Exceptions.ExecutionFailedAuditException.#ctor(System.Exception)">
            <summary>
            Конструктор для инициализации сообщения исключениия
            </summary>
            <param name="innerException"> Внутреннее исключение </param>
        </member>
        <member name="M:ICSSoft.STORMNET.Business.Audit.Exceptions.ExecutionFailedAuditException.#ctor(System.String)">
            <summary>
            Конструктор для инициализации сообщения исключениия
            </summary>
            <param name="message"> Текст сообщения об ошибке </param>
        </member>
        <member name="T:ICSSoft.STORMNET.Business.Audit.Exceptions.RatifyExecutionFailedAuditException">
            <summary>
            Исключение, сообщающее об ошибке, произошедшей при подтверждении записей аудита (когда сразу нескольким записям определяется другой статус).
            </summary>
        </member>
        <member name="F:ICSSoft.STORMNET.Business.Audit.Exceptions.RatifyExecutionFailedAuditException.FailedAuditIdList">
            <summary>
            Список первичных ключей записей, в ходе изменения которых происходили ошибки.
            </summary>
        </member>
        <member name="M:ICSSoft.STORMNET.Business.Audit.Exceptions.RatifyExecutionFailedAuditException.#ctor(System.Collections.Generic.List{System.Guid})">
            <summary>
            Инициализация исключения с сообщением "Не удалось изменить статус записей аудита" и указанием записей, в ходе изменения которых происходили ошибки.
            </summary>
            <param name="failedAuditIdList"> Список первичных ключей записей, в ходе изменения которых происходили ошибки. </param>
        </member>
        <member name="T:ICSSoft.STORMNET.Business.Audit.Exceptions.WrongAdditionalInfoAuditException">
            <summary>
            Исключение, сообщающее, что переданные на дозапись в аудит данные некорректны.
            </summary>
        </member>
        <member name="M:ICSSoft.STORMNET.Business.Audit.Exceptions.WrongAdditionalInfoAuditException.#ctor">
            <summary>
            Конструктор для инициализации исключения с сообщением 
            "Попытка дописать значения аудита для поля, который не имеет атрибута DisableInsertPropertyAttribute".
            </summary>
        </member>
        <member name="T:ICSSoft.STORMNET.Business.Audit.RatificationAuditParameters">
            <summary>
            Вспомогательный класс для установки в очередь сообщений при асинхронной записи аудита о подтверждении записи аудита.
            </summary>
        </member>
        <member name="F:ICSSoft.STORMNET.Business.Audit.RatificationAuditParameters.AuditOperationInfoList">
            <summary>
            Информация, которую необходимо дописать в аудит (с указанием идентификаторов записей аудита).
            </summary>
        </member>
        <member name="M:ICSSoft.STORMNET.Business.Audit.RatificationAuditParameters.#ctor(ICSSoft.STORMNET.Business.Audit.Objects.tExecutionVariant,System.DateTime,System.Collections.Generic.List{ICSSoft.STORMNET.Business.Audit.HelpStructures.AuditAdditionalInfo},ICSSoft.STORMNET.Business.Audit.Objects.tWriteMode,ICSSoft.STORMNET.Business.Audit.AppMode,System.String,System.Boolean)">
            <summary>
            Конструктор класса, который позволяет дописывать определённую информацию в аудит.
            </summary>
            <param name="executionVariant">Вариант завершения работы аудита.</param>
            <param name="currentTime">Текущее время.</param>
            <param name="auditOperationInfoList">Информация, которую необходимо дописать в аудит (с указанием идентификаторов записей аудита).</param>
            <param name="writeMode">Режим записи: синхронный или асинхронный.</param>
            <param name="applicationMode">Режим работы аудита: под win или web.</param>
            <param name="auditConnectionStringName">Имя строки соединения с БД, куда идут записи аудита.</param>
            <param name="needSerialization">Нужна ли сериализация (на случай передачи по wcf).</param>
        </member>
        <member name="M:ICSSoft.STORMNET.Business.Audit.RatificationAuditParameters.CloneWithoutAuditOperationInfoList">
            <summary>
            Создаём копию структуры, за исключением <see cref="F:ICSSoft.STORMNET.Business.Audit.RatificationAuditParameters.AuditOperationInfoList"/>, он не копируется.
            </summary>
            <returns>Сформированная копия.</returns>
        </member>
        <member name="T:ICSSoft.STORMNET.Business.Audit.HelpStructures.CheckHelper">
            <summary>
            Класс, содержащий обшие полезные методы проверки данных
            </summary>
        </member>
        <member name="M:ICSSoft.STORMNET.Business.Audit.HelpStructures.CheckHelper.IsStringValid(System.String)">
            <summary>
            Проверка, является ли строка валидной (не пустая и не пробелы)
            </summary>
            <param name="checkingString"> Имя строки соединения </param>
            <returns> Ответ, является ли имя строки соединения валидным </returns>
        </member>
        <member name="M:ICSSoft.STORMNET.Business.Audit.HelpStructures.CheckHelper.IsStoredOperationCommon(System.String)">
            <summary>
            Проверка, является ли записанная в запись об аудите операция стандартной.
            (Например, в поле операции прописано "Создание".
            Определяется, что такая запись может соответствовать операции tTypeOfAuditOperation.INSERT,
            после чего функция возвращает название поля из настроек аудита, соответствующее данной операции).
            </summary>
            <param name="operationTypeFromRecord">
            Название операции, которое хранится в записи об аудите
            </param>
            <returns>
            Название поля из настроек аудита, соответствующее операции, которая была определена как стандартная
            (в противном случае будет брошено исключение)
            </returns>
        </member>
        <member name="M:ICSSoft.STORMNET.Business.Audit.HelpStructures.CheckHelper.IsStoredTypeCommon(System.String)">
            <summary>
            Проверка, является ли адекватным тип объекта, сохранённый в записи об аудите.
            Если экземпляр типа создать не удалось, то будет брошено исключение. Иначе будет возвращён соответствующий тип.
            </summary>
            <param name="objectTypeFromRecord">Имя типа из записи об аудите</param>
            <returns>Тип, созданный по имени</returns>
        </member>
        <member name="M:ICSSoft.STORMNET.Business.Audit.HelpStructures.CheckHelper.GetExecutionVariantsPropNames">
            <summary>
            Получение структуры вида:
            (название элемента из tTypeOfAuditOperation; его Caption)
            </summary>
            <returns>
            Сформированный или закэшированный словарь соответствующей структуры
            </returns>
        </member>
        <member name="M:ICSSoft.STORMNET.Business.Audit.HelpStructures.CheckHelper.GetExecutionVariants">
            <summary>
            Получение структуры вида:
            (название элемента из tTypeOfAuditOperation; соответствующее ему поле в настройках аудита)
            </summary>
            <returns>
            Сформированный или закэшированный словарь соответствующей структуры
            </returns>
        </member>
        <member name="T:ICSSoft.STORMNET.Business.Audit.HelpStructures.ConfigHelper">
            <summary>
            Класс для получения данных из конфига.
            </summary>
        </member>
        <member name="M:ICSSoft.STORMNET.Business.Audit.HelpStructures.ConfigHelper.GetConnectionString(ICSSoft.STORMNET.Business.Audit.AppMode,System.String)">
            <summary>
            Получение строки соединения из конфига.
            </summary>
            <param name="currentAppMode"> Текущий режим работы приложения (win или web). </param>
            <param name="connStringName"> Имя строки соединения. </param>
            <returns> Строка соединения. </returns>
        </member>
        <member name="M:ICSSoft.STORMNET.Business.Audit.HelpStructures.ConfigHelper.GetAppSetting(ICSSoft.STORMNET.Business.Audit.AppMode,System.String)">
            <summary>
            Получение настройки из конфига.
            </summary>
            <param name="currentAppMode"> Текущий режим работы приложения (win или web). </param>
            <param name="appSettingName"> Имя настройки. </param>
            <returns> Значение настройки. </returns>
        </member>
        <member name="M:ICSSoft.STORMNET.Business.Audit.HelpStructures.ConfigHelper.ConstructProperAuditDataService(ICSSoft.STORMNET.Business.Audit.AppMode,System.String)">
            <summary>
            На базе конфига пытаемся сконструировать сервис данных, который будет использоваться аудитом.
            При возможности формируется сервис данных, который не использует полномочий.
            </summary>
            <param name="currentAppMode"> Текущий режим работы приложения (win или web). </param>
            <param name="connStringName"> Имя строки соединения с БД аудита. </param>
            <returns> Сконструированный сервис аудита. </returns>
        </member>
        <member name="T:ICSSoft.STORMNET.Business.Audit.CustomAuditParameters">
            <summary>
            Параметры для ведения аудита через API
            </summary>
        </member>
        <member name="F:ICSSoft.STORMNET.Business.Audit.CustomAuditParameters._operationTime">
            <summary>
            Время выполнения операции
            </summary>
        </member>
        <member name="F:ICSSoft.STORMNET.Business.Audit.CustomAuditParameters._executionResult">
            <summary>
            Вариант выполнения операции
            (см. варианты в типе ICSSoft.STORMNET.Business.Audit.Objects.tExecutionVariant)
            </summary>
        </member>
        <member name="F:ICSSoft.STORMNET.Business.Audit.CustomAuditParameters._writeMode">
            <summary>
            Режим записи данных аудита: синхронный или асинхронный
            </summary>
        </member>
        <member name="P:ICSSoft.STORMNET.Business.Audit.CustomAuditParameters.CommonAuditOperation">
            <summary>
            Тип операции
            (выбирается из списка, при инициализации означивает CustomOperation)
            </summary>
        </member>
        <member name="P:ICSSoft.STORMNET.Business.Audit.CustomAuditParameters.CustomAuditOperation">
            <summary>
            Тип операции (задаётся любой, может определяться при инициализации CommonAuditOperation)
            </summary>
        </member>
        <member name="P:ICSSoft.STORMNET.Business.Audit.CustomAuditParameters.AuditDataObject">
            <summary>
            Объект, аудит которого проводится
            (сам объект не сохраняется, вычленяется только его первичный ключ и AssemblyQualifiedName типа)
            </summary>
        </member>
        <member name="P:ICSSoft.STORMNET.Business.Audit.CustomAuditParameters.AuditObjectType">
            <summary>
            Тип объекта, аудит которого проводится
            (сам тип не сохраняется, вычленяется только его AssemblyQualifiedName)
            </summary>
        </member>
        <member name="P:ICSSoft.STORMNET.Business.Audit.CustomAuditParameters.AuditObjectPrimaryKey">
            <summary>
            Первичный ключ объекта, аудит которого проводится
            (задание AuditDataObject автоматически означит это поле)
            </summary>
        </member>
        <member name="P:ICSSoft.STORMNET.Business.Audit.CustomAuditParameters.AuditObjectTypeOrDescription">
            <summary>
            Тип (AssemblyQualifiedName) или описание объекта, аудит которого проводится
            (задание AuditDataObject или AuditObjectType автоматически означит это поле)
            </summary>
        </member>
        <member name="P:ICSSoft.STORMNET.Business.Audit.CustomAuditParameters.OperationTime">
            <summary>
            Время выполнения операции
            (если время не задано, то будет возвращаться DateTime.Now, а при асинхронной записи это может быть критично)
            </summary>
        </member>
        <member name="P:ICSSoft.STORMNET.Business.Audit.CustomAuditParameters.ExecutionResult">
            <summary>
            Вариант выполнения операции
            (см. варианты в типе ICSSoft.STORMNET.Business.Audit.Objects.tExecutionVariant)
            </summary>
        </member>
        <member name="P:ICSSoft.STORMNET.Business.Audit.CustomAuditParameters.CustomAuditFieldList">
            <summary>
            Список с изменениями объекта, которые необходимо записать в подсистему аудита
            </summary>
        </member>
        <member name="P:ICSSoft.STORMNET.Business.Audit.CustomAuditParameters.UseDefaultWriteMode">
            <summary>
            
            </summary>
        </member>
        <member name="P:ICSSoft.STORMNET.Business.Audit.CustomAuditParameters.WriteMode">
            <summary>
            Режим записи данных аудита: синхронный или асинхронный
            (если UseDefaultWriteMode = true, то этот параметр не учитывается)
            </summary>
        </member>
        <member name="T:ICSSoft.STORMNET.Business.Audit.CustomAuditField">
            <summary>
            Класс с данными аудита по полю объекта
            </summary>
        </member>
        <member name="M:ICSSoft.STORMNET.Business.Audit.CustomAuditField.#ctor(System.String,System.String,System.String)">
            <summary>
            Конструктор класса
            </summary>
            <param name="fieldName">Имя поля</param>
            <param name="oldValue">Старое значение поля</param>
            <param name="newValue">Новое значение поля</param>
        </member>
        <member name="P:ICSSoft.STORMNET.Business.Audit.CustomAuditField.FieldName">
            <summary>
            Имя поля, по которому записаны данные аудита
            </summary>
        </member>
        <member name="P:ICSSoft.STORMNET.Business.Audit.CustomAuditField.OldFieldValue">
            <summary>
            Старое значение поля, по которому записаны данные аудита
            </summary>
        </member>
        <member name="P:ICSSoft.STORMNET.Business.Audit.CustomAuditField.NewFieldValue">
            <summary>
            Новое значение поля, по которому записаны данные аудита
            </summary>
        </member>
        <member name="T:ICSSoft.STORMNET.Business.Audit.CustomAuditFieldList">
            <summary>
            Класс со списком данных аудита по полям объекта
            </summary>
        </member>
        <member name="M:ICSSoft.STORMNET.Business.Audit.CustomAuditFieldList.AddCustomAuditField(ICSSoft.STORMNET.Business.Audit.CustomAuditField)">
            <summary>
            Добавление в список сведений об изменении поля в соответствии с аудитом
            </summary>
            <param name="customAuditField">Сведения об изменении поля в соответствии с аудитом</param>
        </member>
        <member name="M:ICSSoft.STORMNET.Business.Audit.CustomAuditFieldList.AddCustomAuditFields(System.Collections.Generic.IEnumerable{ICSSoft.STORMNET.Business.Audit.CustomAuditField})">
            <summary>
            Добавление в список сведений об изменении полей в соответствии с аудитом
            </summary>
            <param name="customAuditFields">
            Сведения об изменении полей в соответствии с аудитом
            </param>
        </member>
        <member name="M:ICSSoft.STORMNET.Business.Audit.CustomAuditFieldList.ClearCustomAuditFields">
            <summary>
            Очистка сведений об изменении полей
            </summary>
        </member>
        <member name="M:ICSSoft.STORMNET.Business.Audit.CustomAuditFieldList.GetCustomAuditFields">
            <summary>
            Получение копии списка со сведениями об изменении полей в соответствии с аудитом
            </summary>
            <returns>
            Копия списка со сведениями об изменении полей в соответствии с аудитом
            </returns>
        </member>
        <member name="T:ICSSoft.STORMNET.Business.Audit.IAuditRecord">
            <summary>
            Интерфейс для определения записи, которая идёт в аудит.
            Этот интерфейс позволяет не завязываться на конкретной структуре, как хранится аудит,
            но получать необходимые данные
            </summary>
        </member>
        <member name="P:ICSSoft.STORMNET.Business.Audit.IAuditRecord.ObjectTypeQualifiedName">
            <summary>
            Имя типа, который имел записанный объект
            </summary>
        </member>
        <member name="P:ICSSoft.STORMNET.Business.Audit.IAuditRecord.OperationType">
            <summary>
            Тип операции, которая была выполнена над объектом
            </summary>
        </member>
        <member name="T:ICSSoft.STORMNET.Business.AuditWcfServiceLibrary.IAuditWcfService">
            <summary>
            Интерфейс для AuditWcfService
            (на настоящий момент представляет собой наследника IAudit)
            </summary>
        </member>
        <member name="T:ICSSoft.STORMNET.Business.Audit.AppMode">
            <summary>
            Режим работы приложения
            </summary>
        </member>
        <member name="F:ICSSoft.STORMNET.Business.Audit.AppMode.Unknown">
            <summary>
            Неизвестно, как запущено приложение
            </summary>
        </member>
        <member name="F:ICSSoft.STORMNET.Business.Audit.AppMode.Win">
            <summary>
            То есть приложение запущено под win
            </summary>
        </member>
        <member name="F:ICSSoft.STORMNET.Business.Audit.AppMode.Web">
            <summary>
            То есть приложение запущено под web
            </summary>
        </member>
        <member name="T:ICSSoft.STORMNET.Business.Audit.Objects.AuditAppSetting">
            <summary>
            Класс, содержащий настройки аудита по приложению
            </summary>
        </member>
        <member name="P:ICSSoft.STORMNET.Business.Audit.Objects.AuditAppSetting.AppName">
            <summary>
            Имя приложения
            </summary>
        </member>
        <member name="P:ICSSoft.STORMNET.Business.Audit.Objects.AuditAppSetting.AuditEnabled">
            <summary>
            Включён ли аудит в приложении
            </summary>
        </member>
        <member name="P:ICSSoft.STORMNET.Business.Audit.Objects.AuditAppSetting.IsDatabaseLocal">
            <summary>
            Является ли база данных с аудитом локальной
            </summary>
        </member>
        <member name="P:ICSSoft.STORMNET.Business.Audit.Objects.AuditAppSetting.AuditConnectionStringName">
            <summary>
            Строка соединения с базой аудита
            </summary>
        </member>
        <member name="P:ICSSoft.STORMNET.Business.Audit.Objects.AuditAppSetting.AuditWinServiceUrl">
            <summary>
            Адрес win-сервиса аудита
            </summary>
        </member>
        <member name="P:ICSSoft.STORMNET.Business.Audit.Objects.AuditAppSetting.WriteSessions">
            <summary>
            Писать ли сессии пользователей
            </summary>
        </member>
        <member name="P:ICSSoft.STORMNET.Business.Audit.Objects.AuditAppSetting.DefaultWriteMode">
            <summary>
            Режим записи по умолчанию (если мы не можем определить класс и режим записи для него)
            </summary>
        </member>
        <member name="P:ICSSoft.STORMNET.Business.Audit.Objects.AuditAppSetting.AuditDSSettings">
            <summary>
            Класс, содержащий настройки аудита по приложению
            </summary>
        </member>
        <member name="P:ICSSoft.STORMNET.Business.Audit.Objects.AuditAppSetting.AuditClassSettings">
            <summary>
            Класс, содержащий настройки аудита по приложению
            </summary>
        </member>
        <member name="T:ICSSoft.STORMNET.Business.Audit.Objects.AuditClassSetting">
            <summary>
            Класс, содержащий настройки аудита по приложению для класса
            </summary>
        </member>
        <member name="P:ICSSoft.STORMNET.Business.Audit.Objects.AuditClassSetting.ObjectType">
            <summary>
            Имя типа
            </summary>
        </member>
        <member name="P:ICSSoft.STORMNET.Business.Audit.Objects.AuditClassSetting.AuditEnabled">
            <summary>
            Включёна ли настройка аудита для типа
            </summary>
        </member>
        <member name="P:ICSSoft.STORMNET.Business.Audit.Objects.AuditClassSetting.UseDefaultView">
            <summary>
            Использовать имя представления для аудита по умолчанию
            </summary>
        </member>
        <member name="P:ICSSoft.STORMNET.Business.Audit.Objects.AuditClassSetting.SelectAuditViewName">
            <summary>
            Имя представления для аудирования операции чтения
            </summary>
        </member>
        <member name="P:ICSSoft.STORMNET.Business.Audit.Objects.AuditClassSetting.InsertAuditViewName">
            <summary>
            Имя представления для аудирования операции вставки
            </summary>
        </member>
        <member name="P:ICSSoft.STORMNET.Business.Audit.Objects.AuditClassSetting.UpdateAuditViewName">
            <summary>
            Имя представления для аудирования операции изменения
            </summary>
        </member>
        <member name="P:ICSSoft.STORMNET.Business.Audit.Objects.AuditClassSetting.DeleteAuditViewName">
            <summary>
            Имя представления для аудирования операции удаления
            </summary>
        </member>
        <member name="P:ICSSoft.STORMNET.Business.Audit.Objects.AuditClassSetting.FormUrl">
            <summary>
            Путь к форме просмотра
            </summary>
        </member>
        <member name="P:ICSSoft.STORMNET.Business.Audit.Objects.AuditClassSetting.WriteMode">
            <summary>
            Режим записи данных аудита
            </summary>
        </member>
        <member name="P:ICSSoft.STORMNET.Business.Audit.Objects.AuditClassSetting.SelectAudit">
            <summary>
            Включён ли аудит операции чтения
            </summary>
        </member>
        <member name="P:ICSSoft.STORMNET.Business.Audit.Objects.AuditClassSetting.InsertAudit">
            <summary>
            Включён ли аудит операции вставки
            </summary>
        </member>
        <member name="P:ICSSoft.STORMNET.Business.Audit.Objects.AuditClassSetting.UpdateAudit">
            <summary>
            Включён ли аудит операции изменения
            </summary>
        </member>
        <member name="P:ICSSoft.STORMNET.Business.Audit.Objects.AuditClassSetting.DeleteAudit">
            <summary>
            Включён ли аудит операции удаления
            </summary>
        </member>
        <member name="P:ICSSoft.STORMNET.Business.Audit.Objects.AuditClassSetting.LimitFunction">
            <summary>
            Функция ограничения (определяет, на какие объекты действуют сия настройка)
            </summary>
        </member>
        <member name="P:ICSSoft.STORMNET.Business.Audit.Objects.AuditClassSetting.View">
            <summary>
            Представление, чтобы корректно можно было применять LimitFunction
            </summary>
        </member>
        <member name="P:ICSSoft.STORMNET.Business.Audit.Objects.AuditClassSetting.PrunningLength">
            <summary>
            Максимальная длина сохраняемого значения поля (если 0, то строка обрезаться не будет)
            </summary>
        </member>
        <member name="P:ICSSoft.STORMNET.Business.Audit.Objects.AuditClassSetting.ShowPrimaryKey">
            <summary>
            Показывать ли пользователям в изменениях первичные ключи
            </summary>
        </member>
        <member name="P:ICSSoft.STORMNET.Business.Audit.Objects.AuditClassSetting.KeepOldValue">
            <summary>
            Сохранять ли старое значение
            </summary>
        </member>
        <member name="P:ICSSoft.STORMNET.Business.Audit.Objects.AuditClassSetting.Compress">
            <summary>
            Сжимать ли сохраняемые значения
            </summary>
        </member>
        <member name="P:ICSSoft.STORMNET.Business.Audit.Objects.AuditClassSetting.KeepAllValues">
            <summary>
            Сохранять ли все значения атрибутов, а не только изменяемые
            </summary>
        </member>
        <member name="P:ICSSoft.STORMNET.Business.Audit.Objects.AuditClassSetting.AuditFieldSettings">
            <summary>
            Класс, содержащий настройки аудита по приложению для класса
            </summary>
        </member>
        <member name="P:ICSSoft.STORMNET.Business.Audit.Objects.AuditClassSetting.AuditAppSetting">
            <summary>
            мастеровая ссылка на шапку ICSSoft.STORMNET.Business.Audit.AuditAppSetting
            </summary>
        </member>
        <member name="T:ICSSoft.STORMNET.Business.Audit.Objects.DetailArrayOfAuditClassSetting">
            <summary>
            Detail array of AuditClassSetting
            </summary>
        </member>
        <member name="M:ICSSoft.STORMNET.Business.Audit.Objects.DetailArrayOfAuditClassSetting.#ctor(ICSSoft.STORMNET.Business.Audit.Objects.AuditAppSetting)">
            <summary>
            Construct detail array
            </summary>
        </member>
        <member name="M:ICSSoft.STORMNET.Business.Audit.Objects.DetailArrayOfAuditClassSetting.Add(ICSSoft.STORMNET.Business.Audit.Objects.AuditClassSetting)">
            <summary>
            Adds object with type AuditClassSetting
            </summary>
        </member>
        <member name="P:ICSSoft.STORMNET.Business.Audit.Objects.DetailArrayOfAuditClassSetting.Item(System.Int32)">
            <summary>
            Returns object with type AuditClassSetting by index
            </summary>
        </member>
        <member name="T:ICSSoft.STORMNET.Business.Audit.Objects.AuditDSSetting">
            <summary>
            Класс, содержащий настройки аудита по приложению по сервисам данных
            </summary>
        </member>
        <member name="P:ICSSoft.STORMNET.Business.Audit.Objects.AuditDSSetting.DataServiceType">
            <summary>
            Тип сервиса данных
            </summary>
        </member>
        <member name="P:ICSSoft.STORMNET.Business.Audit.Objects.AuditDSSetting.ConnString">
            <summary>
            Строка соединения сервиса данных
            </summary>
        </member>
        <member name="P:ICSSoft.STORMNET.Business.Audit.Objects.AuditDSSetting.ConnStringName">
            <summary>
            Имя строки соединения (задаётся программистом)
            </summary>
        </member>
        <member name="P:ICSSoft.STORMNET.Business.Audit.Objects.AuditDSSetting.AuditAppSetting">
            <summary>
            мастеровая ссылка на шапку ICSSoft.STORMNET.Business.Audit.AuditAppSetting
            </summary>
        </member>
        <member name="T:ICSSoft.STORMNET.Business.Audit.Objects.DetailArrayOfAuditDSSetting">
            <summary>
            Detail array of AuditDSSetting
            </summary>
        </member>
        <member name="M:ICSSoft.STORMNET.Business.Audit.Objects.DetailArrayOfAuditDSSetting.#ctor(ICSSoft.STORMNET.Business.Audit.Objects.AuditAppSetting)">
            <summary>
            Construct detail array
            </summary>
        </member>
        <member name="M:ICSSoft.STORMNET.Business.Audit.Objects.DetailArrayOfAuditDSSetting.Add(ICSSoft.STORMNET.Business.Audit.Objects.AuditDSSetting)">
            <summary>
            Adds object with type AuditDSSetting
            </summary>
        </member>
        <member name="P:ICSSoft.STORMNET.Business.Audit.Objects.DetailArrayOfAuditDSSetting.Item(System.Int32)">
            <summary>
            Returns object with type AuditDSSetting by index
            </summary>
        </member>
        <member name="T:ICSSoft.STORMNET.Business.Audit.Objects.AuditFieldSetting">
            <summary>
            Класс, содержащий настройки аудита по приложению для полей класса
            </summary>
        </member>
        <member name="P:ICSSoft.STORMNET.Business.Audit.Objects.AuditFieldSetting.FieldName">
            <summary>
            Имя поля
            </summary>
        </member>
        <member name="P:ICSSoft.STORMNET.Business.Audit.Objects.AuditFieldSetting.PrunningLength">
            <summary>
            Максимальная длина сохраняемого значения поля (если 0, то строка обрезаться не будет)
            </summary>
        </member>
        <member name="P:ICSSoft.STORMNET.Business.Audit.Objects.AuditFieldSetting.Compress">
            <summary>
            Сжимать ли значение поля
            </summary>
        </member>
        <member name="P:ICSSoft.STORMNET.Business.Audit.Objects.AuditFieldSetting.KeepOldValue">
            <summary>
            KeepOldValue
            </summary>
        </member>
        <member name="P:ICSSoft.STORMNET.Business.Audit.Objects.AuditFieldSetting.AuditClassSetting">
            <summary>
            мастеровая ссылка на шапку ICSSoft.STORMNET.Business.Audit.AuditClassSetting
            </summary>
        </member>
        <member name="T:ICSSoft.STORMNET.Business.Audit.Objects.DetailArrayOfAuditFieldSetting">
            <summary>
            Detail array of AuditFieldSetting
            </summary>
        </member>
        <member name="M:ICSSoft.STORMNET.Business.Audit.Objects.DetailArrayOfAuditFieldSetting.#ctor(ICSSoft.STORMNET.Business.Audit.Objects.AuditClassSetting)">
            <summary>
            Construct detail array
            </summary>
        </member>
        <member name="M:ICSSoft.STORMNET.Business.Audit.Objects.DetailArrayOfAuditFieldSetting.Add(ICSSoft.STORMNET.Business.Audit.Objects.AuditFieldSetting)">
            <summary>
            Adds object with type AuditFieldSetting
            </summary>
        </member>
        <member name="P:ICSSoft.STORMNET.Business.Audit.Objects.DetailArrayOfAuditFieldSetting.Item(System.Int32)">
            <summary>
            Returns object with type AuditFieldSetting by index
            </summary>
        </member>
        <member name="T:ICSSoft.STORMNET.Business.Audit.AuditService">
            <summary>
            Статическая обёртка для класса, наследующего от <see cref="T:ICSSoft.STORMNET.Business.Audit.IAuditService"/>.
            </summary>
        </member>
        <member name="T:ICSSoft.STORMNET.Business.Audit.IAuditService">
            <summary>
            Интерфейс для сервиса аудита (отвечает за API и настройки)
            </summary>
        </member>
        <member name="M:ICSSoft.STORMNET.Business.Audit.IAuditService.IsTypeAuditable(System.Type)">
            <summary>
            Является ли класс аудируемым (проверяются настройки по аудиту приложения + настройки класса)
            </summary>
            <param name="curType"> Исследуемый тип </param>
            <returns> True, если является и нужно вести аудит </returns>
        </member>
        <member name="M:ICSSoft.STORMNET.Business.Audit.IAuditService.EnableAudit(System.Boolean)">
            <summary>
            Включить ведение аудита в приложении
            (предварительно должны быть проинициализированы AppSetting и Audit)
            </summary>
            <param name="throwExceptions"> Следует ли вызывать исключения в ошибочной ситуации </param>
            <returns> Удалось ли включить аудит </returns>
        </member>
        <member name="M:ICSSoft.STORMNET.Business.Audit.IAuditService.DisableAudit">
            <summary>
            Отключить ведение аудита в приложении
            </summary>
        </member>
        <member name="M:ICSSoft.STORMNET.Business.Audit.IAuditService.WriteCommonAuditOperation(ICSSoft.STORMNET.DataObject,ICSSoft.STORMNET.Business.IDataService,System.Boolean,System.Data.IDbTransaction)">
            <summary>
            Сообщаем о совершении потенциально аудируемого действа.
            </summary>
            <param name="operationedObject"> Объект, над которым выполняется операция. </param>
            <param name="dataService"> Сервис данных, который выполянет операцию. </param>
            <param name="throwExceptions">Следует ли пробрасывать дальше возникшее исключение (по умолчанию - true).</param>
            <param name="transaction">
            Транзакция, через которую необходимо проводить выполнение зачиток из БД приложения аудиту
            (при работе AuditService иногда необходимо дочитать объект или получить сохранённую копию, 
            а выполнение данного действия без транзакции может привести к взаимоблокировке).
            По умолчанию - null. 
            </param>
            <returns> Ответ о том, можно ли выполнять операцию (если null, то значит, что что-то пошло не так). </returns>
        </member>
        <member name="M:ICSSoft.STORMNET.Business.Audit.IAuditService.RatifyAuditOperation(ICSSoft.STORMNET.Business.Audit.Objects.tExecutionVariant,System.Collections.Generic.List{System.Guid},System.Boolean)">
            <summary>
            Подверждение созданных ранее операций аудита
            (если аудит идёт в одну БД с приложением, то будет использован сервис данных по умолчанию)
            </summary>
            <param name="executionVariant">Какой статус будет присвоен операции</param>
            <param name="auditOperationIdList">Список айдишников записей аудита</param>
            <param name="throwExceptions">Следует ли пробрасывать дальше возникшее исключение</param>
            <returns>True, если всё закончилось без ошибок</returns>
        </member>
        <member name="M:ICSSoft.STORMNET.Business.Audit.IAuditService.RatifyAuditOperation(ICSSoft.STORMNET.Business.Audit.Objects.tExecutionVariant,System.Collections.Generic.List{System.Guid},System.String,System.Type,System.Boolean)">
            <summary>
            Подверждение созданных ранее операций аудита
            (если аудит идёт в одну БД с приложением, то будет использован сервис данных по умолчанию)
            </summary>
            <param name="executionVariant"> Какой статус будет присвоен операции </param>
            <param name="auditOperationIdList"> Список айдишников записей аудита </param>
            <param name="dataServiceConnectionString"> Строка соединения сервиса данных, который выполняет запись в БД приложения  </param>
            <param name="dataServiceType"> Тип сервиса данных, который выполняет запись в БД приложения  </param>
            <param name="throwExceptions"> Следует ли пробрасывать дальше возникшее исключение </param>
            <returns> True, если всё закончилось без ошибок </returns>
        </member>
        <member name="M:ICSSoft.STORMNET.Business.Audit.IAuditService.RatifyAuditOperation(ICSSoft.STORMNET.Business.Audit.Objects.tExecutionVariant,System.Collections.Generic.List{System.Guid},ICSSoft.STORMNET.Business.IDataService,System.Boolean)">
            <summary>
            Подверждение созданных ранее операций аудита (выполнение зависит от выбранного режима записи данных аудита)
            (если аудит идёт в одну БД с приложением, 
            то будет в сервис аудита передаваться имя строки соединения,
            найденное в AuditService.Current.AppSetting.AuditDSSettings по параметрам переданного сервиса данных)
            </summary>
            <param name="executionVariant"> Какой статус будет присвоен операции </param>
            <param name="auditOperationIdList"> Список айдишников записей аудита </param>
            <param name="dataService"> Сервис данных, по параметрам которого (строка соединения и тип) осуществляется поиск в AuditService.Current.AppSetting.AuditDSSettings </param>
            <param name="throwExceptions">Следует ли пробрасывать дальше возникшее исключение</param>
            <returns> True, если всё закончилось без ошибок </returns>
        </member>
        <member name="M:ICSSoft.STORMNET.Business.Audit.IAuditService.WriteCustomAuditOperation(ICSSoft.STORMNET.Business.Audit.CustomAuditParameters,System.Boolean)">
            <summary>
            Сделать запись в аудит
            (если аудит идёт в одну БД с приложением, то будет использован сервис данных по умолчанию)
            </summary>
            <param name="customAuditParameters"> Параметры аудита </param>
            <param name="throwExceptions">Следует ли пробрасывать дальше возникшее исключение</param>
            <returns> Id записи аудита </returns>
        </member>
        <member name="M:ICSSoft.STORMNET.Business.Audit.IAuditService.WriteCustomAuditOperation(ICSSoft.STORMNET.Business.Audit.CustomAuditParameters,ICSSoft.STORMNET.Business.IDataService,System.Boolean)">
            <summary>
            Сделать запись в аудит
            (если аудит идёт в одну БД с приложением, 
            то будет в сервис аудита передаваться имя строки соединения,
            найденное в AuditService.Current.AppSetting.AuditDSSettings по параметрам переданного сервиса данных)
            </summary>
            <param name="customAuditParameters"> Параметры аудита </param>
            <param name="dataService"> Сервис данных, по параметрам которого (строка соединения и тип) осуществляется поиск в AuditService.Current.AppSetting.AuditDSSettings </param>
            <param name="throwExceptions">Следует ли пробрасывать дальше возникшее исключение</param>
            <returns> Id записи аудита </returns>
        </member>
        <member name="M:ICSSoft.STORMNET.Business.Audit.IAuditService.WriteCustomAuditOperation(ICSSoft.STORMNET.Business.Audit.CustomAuditParameters,System.String,System.Type,System.Boolean)">
            <summary>
            Сделать запись в аудит
            (если аудит идёт в одну БД с приложением, 
            то будет в сервис аудита передаваться имя строки соединения,
            найденное в AuditService.Current.AppSetting.AuditDSSettings по параметрам переданного сервиса данных)
            </summary>
            <param name="customAuditParameters"> Параметры аудита </param>
            <param name="dataServiceConnectionString"> Строка соединения сервиса данных, который выполняет запись в БД приложения  </param>
            <param name="dataServiceType"> Тип сервиса данных, который выполняет запись в БД приложения  </param>
            <param name="throwExceptions">Следует ли пробрасывать дальше возникшее исключение</param>
            <returns> Id записи аудита </returns>
        </member>
        <member name="M:ICSSoft.STORMNET.Business.Audit.IAuditService.AddCreateAuditInformation(ICSSoft.STORMNET.DataObject)">
            <summary>
            Добавление информации о том, кто и когда создал объект, если он это поддерживает
            </summary>
            <param name="operationedObject">
            Объект, куда добавляется информация
            </param>
        </member>
        <member name="M:ICSSoft.STORMNET.Business.Audit.IAuditService.AddEditAuditInformation(ICSSoft.STORMNET.DataObject)">
            <summary>
            Добавление информации о том, кто и когда отредактировал объект, если он это поддерживает
            </summary>
            <param name="operationedObject">
            Объект, куда добавляется информация
            </param>
        </member>
        <member name="M:ICSSoft.STORMNET.Business.Audit.IAuditService.GetViewByAuditRecord(ICSSoft.STORMNET.Business.Audit.IAuditRecord)">
            <summary>
            Получение представления, по которому вероятнее всего вёлся аудит объекта,
            по операции над которым есть запись.
            Данное представление будет использоваться для получения кэпшенов полей.
            </summary>
            <param name="auditRecord">Запись из аудита, по которой необходимо определить представление.</param>
            <returns>Найденное представление (если что-то не удалось, то выдастся null; исключения не должно быть в любом случае).</returns>
        </member>
        <member name="M:ICSSoft.STORMNET.Business.Audit.IAuditService.GetAuditViewByType(System.Type,ICSSoft.STORMNET.Business.Audit.Objects.tTypeOfAuditOperation)">
            <summary>
            Получение представления для аудита у определенного типа.
            </summary>
            <param name="type">Тип, у которого нужно получить представление для аудита.</param>
            <param name="operationType">Тип аудируемой операции, для которой нужно получить представление.
            (Select, Insert, Update или Delete)</param>
            <returns>Представление для аудита.</returns>
        </member>
        <member name="M:ICSSoft.STORMNET.Business.Audit.IAuditService.WriteCommonAuditOperationWithAutoFields(ICSSoft.STORMNET.DataObject,ICSSoft.STORMNET.Business.IDataService,System.Boolean,System.Data.IDbTransaction)">
            <summary>
            Сообщаем о совершении потенциально аудируемого действа.
            </summary>
            <param name="operationedObject"> Объект, над которым выполняется операция. </param>
            <param name="dataService"> Сервис данных, который выполянет операцию. </param>
            <param name="throwExceptions">Следует ли пробрасывать дальше возникшее исключение (по умолчанию - true).</param>
            <param name="transaction">
            Транзакция, через которую необходимо проводить выполнение зачиток из БД приложения аудиту
            (при работе AuditService иногда необходимо дочитать объект или получить сохранённую копию, 
            а выполнение данного действия без транзакции может привести к взаимоблокировке).
            По умолчанию - null. 
            </param>
            <returns> Ответ о том, можно ли выполнять операцию (если null, то значит, что что-то пошло не так). </returns>
        </member>
        <member name="M:ICSSoft.STORMNET.Business.Audit.IAuditService.RatifyAuditOperationWithAutoFields(ICSSoft.STORMNET.Business.Audit.Objects.tExecutionVariant,System.Collections.Generic.List{ICSSoft.STORMNET.Business.Audit.HelpStructures.AuditAdditionalInfo},ICSSoft.STORMNET.Business.IDataService,System.Boolean)">
            <summary>
            Подверждение созданных ранее операций аудита (выполнение зависит от выбранного режима записи данных аудита)
            (если аудит идёт в одну БД с приложением, 
            то будет в сервис аудита передаваться имя строки соединения,
            найденное в AuditService.Current.AppSetting.AuditDSSettings по параметрам переданного сервиса данных)
            </summary>
            <param name="executionVariant"> Какой статус будет присвоен операции </param>
            <param name="auditOperationInfoList"> Дополнительная информация, которую необходимо передать в аудит. </param>
            <param name="dataService"> Сервис данных, по параметрам которого (строка соединения и тип) осуществляется поиск в AuditService.Current.AppSetting.AuditDSSettings </param>
            <param name="throwExceptions">Следует ли пробрасывать дальше возникшее исключение</param>
            <returns> True, если всё закончилось без ошибок </returns>
        </member>
        <member name="P:ICSSoft.STORMNET.Business.Audit.IAuditService.IsAuditEnabled">
            <summary>
            Включён ли аудит для приложения
            </summary>
        </member>
        <member name="P:ICSSoft.STORMNET.Business.Audit.IAuditService.IsAuditRemote">
            <summary>
            Выполняется ли аудит удалённо (то есть через вызов AuditWinService)
            </summary>
        </member>
        <member name="P:ICSSoft.STORMNET.Business.Audit.IAuditService.AuditConnectionStringName">
            <summary>
            Получение имени строки соединения с БД аудита
            (используется для загрузки данных из БД).
            Если используется запись аудита через windows-сервис, то будет возвращено null
            </summary>
        </member>
        <member name="P:ICSSoft.STORMNET.Business.Audit.IAuditService.ShowPrimaryKey">
            <summary>
            Следует ли отображать записи с изменением первичного ключа на формах.
            </summary>
        </member>
        <member name="P:ICSSoft.STORMNET.Business.Audit.IAuditService.AppSetting">
            <summary>
            Настройки аудита в приложении
            </summary>
        </member>
        <member name="P:ICSSoft.STORMNET.Business.Audit.IAuditService.Audit">
            <summary>
            Элемент, реализующий логику аудита
            </summary>
        </member>
        <member name="P:ICSSoft.STORMNET.Business.Audit.IAuditService.ApplicationMode">
            <summary>
            Режим, в котором работает приложение: win или web
            </summary>
        </member>
        <member name="F:ICSSoft.STORMNET.Business.Audit.AuditService._currentAuditService">
            <summary>
            Текущий класс для работы с сервисом аудита.
            </summary>
        </member>
        <member name="M:ICSSoft.STORMNET.Business.Audit.AuditService.InitAuditService(ICSSoft.STORMNET.Business.Audit.Objects.AuditAppSetting,ICSSoft.STORMNET.Business.Audit.IAudit)">
            <summary>
            Инициализация текущего сервиса аудита.
            </summary>
            <param name="appSetting"> Настройки аудита приложения. </param>
            <param name="audit"> Элемент, реализующий логику аудита. </param>
        </member>
        <member name="F:ICSSoft.STORMNET.Business.Audit.AuditService._audit">
            <summary>
            Элемент, реализующий логику аудита.
            </summary>
        </member>
        <member name="F:ICSSoft.STORMNET.Business.Audit.AuditService._applicationMode">
            <summary>
            Режим, в котором работает приложение: win или web.
            </summary>
        </member>
        <member name="F:ICSSoft.STORMNET.Business.Audit.AuditService._asyncAuditController">
            <summary>
            Контроллер для организации асинхронной записи аудита.
            </summary>
        </member>
        <member name="F:ICSSoft.STORMNET.Business.Audit.AuditService._remoteAuditController">
            <summary>
            Контроллер для организации удалённой записи аудита.
            </summary>
        </member>
        <member name="M:ICSSoft.STORMNET.Business.Audit.AuditService.EnableAudit(System.Boolean)">
            <summary>
            Включить ведение аудита в приложении
            (предварительно должны быть проинициализированы <see cref="P:ICSSoft.STORMNET.Business.Audit.AuditService.AppSetting"/> и <see cref="P:ICSSoft.STORMNET.Business.Audit.AuditService.Audit"/>).
            </summary>
            <param name="throwExceptions"> Следует ли вызывать исключения в ошибочной ситуации. </param>
            <returns> Удалось ли включить аудит. </returns>
        </member>
        <member name="M:ICSSoft.STORMNET.Business.Audit.AuditService.DisableAudit">
            <summary>
            Отключить ведение аудита в приложении.
            </summary>
        </member>
        <member name="M:ICSSoft.STORMNET.Business.Audit.AuditService.WriteCommonAuditOperationWithAutoFields(ICSSoft.STORMNET.DataObject,ICSSoft.STORMNET.Business.IDataService,System.Boolean,System.Data.IDbTransaction)">
            <summary>
            Сообщаем о совершении потенциально аудируемого действа.
            </summary>
            <param name="operationedObject"> Объект, над которым выполняется операция. </param>
            <param name="dataService"> Сервис данных, который выполянет операцию. </param>
            <param name="throwExceptions">Следует ли пробрасывать дальше возникшее исключение (по умолчанию - <c>true</c>).</param>
            <param name="transaction">
            Транзакция, через которую необходимо проводить выполнение зачиток из БД приложения аудиту
            (при работе <see cref="T:ICSSoft.STORMNET.Business.Audit.AuditService"/> иногда необходимо дочитать объект или получить сохранённую копию, 
            а выполнение данного действия без транзакции может привести к взаимоблокировке).
            По умолчанию - <c>null</c>. 
            </param>
            <returns> Ответ о том, можно ли выполнять операцию (если null, то значит, что что-то пошло не так). </returns>
        </member>
        <member name="M:ICSSoft.STORMNET.Business.Audit.AuditService.RatifyAuditOperationWithAutoFields(ICSSoft.STORMNET.Business.Audit.Objects.tExecutionVariant,System.Collections.Generic.List{ICSSoft.STORMNET.Business.Audit.HelpStructures.AuditAdditionalInfo},ICSSoft.STORMNET.Business.IDataService,System.Boolean)">
            <summary>
            Подверждение созданных ранее операций аудита (выполнение зависит от выбранного режима записи данных аудита)
            (если аудит идёт в одну БД с приложением, то будет в сервис аудита передаваться имя строки соединения,
            найденное в AuditService.Current.AppSetting.AuditDSSettings по параметрам переданного сервиса данных).
            Также будут проверяться настройки класса на случай, если там заданы особые настройки класса.
            </summary>
            <param name="executionVariant"> Какой статус будет присвоен операции. </param>
            <param name="auditOperationInfoList"> Дополнительная информация, которую необходимо передать в аудит. </param>
            <param name="dataService"> Сервис данных, по параметрам которого (строка соединения и тип) осуществляется поиск в AuditService.Current.AppSetting.AuditDSSettings. </param>
            <param name="throwExceptions">Следует ли пробрасывать дальше возникшее исключение.</param>
            <returns> <c>True</c>, если всё закончилось без ошибок. </returns>
        </member>
        <member name="M:ICSSoft.STORMNET.Business.Audit.AuditService.GetViewByAuditRecord(ICSSoft.STORMNET.Business.Audit.IAuditRecord)">
            <summary>
            Получение представления, по которому вероятнее всего вёлся аудит объекта,
            по операции над которым есть запись.
            Данное представление будет использоваться для получения кэпшенов полей.
            </summary>
            <param name="auditRecord">Запись из аудита, по которой необходимо определить представление.</param>
            <returns>Найденное представление (если что-то не удалось, то выдастся <c>null</c>; исключения не должно быть в любом случае).</returns>
        </member>
        <member name="M:ICSSoft.STORMNET.Business.Audit.AuditService.GetAuditViewByType(System.Type,ICSSoft.STORMNET.Business.Audit.Objects.tTypeOfAuditOperation)">
            <summary>
            Получение представления для аудита у определенного типа.
            </summary>
            <param name="type">Тип, у которого нужно получить представление для аудита.</param>
            <param name="operationType">Тип аудируемой операции, для которой нужно получить представление (Select, Insert, Update или Delete).</param>
            <returns>Представление для аудита.</returns>
        </member>
        <member name="M:ICSSoft.STORMNET.Business.Audit.AuditService.WriteCustomAuditOperation(ICSSoft.STORMNET.Business.Audit.CustomAuditParameters,System.Boolean)">
            <summary>
            Сделать запись в аудит
            (если аудит идёт в одну БД с приложением, то будет использован сервис данных по умолчанию).
            </summary>
            <param name="customAuditParameters"> Параметры аудита. </param>
            <param name="throwExceptions">Следует ли пробрасывать дальше возникшее исключение.</param>
            <returns> Идентификатор записи аудита. </returns>
        </member>
        <member name="M:ICSSoft.STORMNET.Business.Audit.AuditService.WriteCustomAuditOperation(ICSSoft.STORMNET.Business.Audit.CustomAuditParameters,ICSSoft.STORMNET.Business.IDataService,System.Boolean)">
            <summary>
            Сделать запись в аудит
            (если аудит идёт в одну БД с приложением, 
            то будет в сервис аудита передаваться имя строки соединения,
            найденное в AuditService.Current.AppSetting.AuditDSSettings по параметрам переданного сервиса данных).
            </summary>
            <param name="customAuditParameters"> Параметры аудита. </param>
            <param name="dataService"> Сервис данных, по параметрам которого (строка соединения и тип) осуществляется поиск в AuditService.Current.AppSetting.AuditDSSettings. </param>
            <param name="throwExceptions">Следует ли пробрасывать дальше возникшее исключение.</param>
            <returns> Идентификатор записи аудита. </returns>
        </member>
        <member name="M:ICSSoft.STORMNET.Business.Audit.AuditService.WriteCustomAuditOperation(ICSSoft.STORMNET.Business.Audit.CustomAuditParameters,System.String,System.Type,System.Boolean)">
            <summary>
            Сделать запись в аудит
            (если аудит идёт в одну БД с приложением, 
            то будет в сервис аудита передаваться имя строки соединения,
            найденное в AuditService.Current.AppSetting.AuditDSSettings по параметрам переданного сервиса данных).
            </summary>
            <param name="customAuditParameters"> Параметры аудита.  </param>
            <param name="dataServiceConnectionString"> Строка соединения сервиса данных, который выполняет запись в БД приложения. </param>
            <param name="dataServiceType"> Тип сервиса данных, который выполняет запись в БД приложения. </param>
            <param name="throwExceptions"> Следует ли пробрасывать дальше возникшее исключение. </param>
            <returns> Идентификатор записи аудита.  </returns>
        </member>
        <member name="M:ICSSoft.STORMNET.Business.Audit.AuditService.IsTypeAuditable(System.Type)">
            <summary>
            Является ли класс аудируемым (проверяются настройки по аудиту приложения + настройки класса).
            </summary>
            <param name="curType"> Исследуемый тип. </param>
            <returns> <c>True</c>, если является и нужно вести аудит. </returns>
        </member>
        <member name="M:ICSSoft.STORMNET.Business.Audit.AuditService.RatifyAuditOperation(ICSSoft.STORMNET.Business.Audit.Objects.tExecutionVariant,System.Collections.Generic.List{System.Guid},System.Boolean)">
            <summary>
            Подверждение созданных ранее операций аудита
            (если аудит идёт в одну БД с приложением, то будет использован сервис данных по умолчанию).
            </summary>
            <param name="executionVariant">Какой статус будет присвоен операции.</param>
            <param name="auditOperationIdList">Список айдишников записей аудита.</param>
            <param name="throwExceptions">Следует ли пробрасывать дальше возникшее исключение.</param>
            <returns><c>True</c>, если всё закончилось без ошибок.</returns>
        </member>
        <member name="M:ICSSoft.STORMNET.Business.Audit.AuditService.RatifyAuditOperation(ICSSoft.STORMNET.Business.Audit.Objects.tExecutionVariant,System.Collections.Generic.List{System.Guid},System.String,System.Type,System.Boolean)">
            <summary>
            Подверждение созданных ранее операций аудита
            (если аудит идёт в одну БД с приложением, то будет использован сервис данных по умолчанию).
            </summary>
            <param name="executionVariant"> Какой статус будет присвоен операции. </param>
            <param name="auditOperationIdList"> Список айдишников записей аудита. </param>
            <param name="dataServiceConnectionString"> Строка соединения сервиса данных, который выполняет запись в БД приложения.  </param>
            <param name="dataServiceType"> Тип сервиса данных, который выполняет запись в БД приложения.  </param>
            <param name="throwExceptions"> Следует ли пробрасывать дальше возникшее исключение. </param>
            <returns> <c>True</c>, если всё закончилось без ошибок. </returns>
        </member>
        <member name="M:ICSSoft.STORMNET.Business.Audit.AuditService.RatifyAuditOperation(ICSSoft.STORMNET.Business.Audit.Objects.tExecutionVariant,System.Collections.Generic.List{System.Guid},ICSSoft.STORMNET.Business.IDataService,System.Boolean)">
            <summary>
            Подверждение созданных ранее операций аудита (выполнение зависит от выбранного режима записи данных аудита)
            (если аудит идёт в одну БД с приложением, 
            то будет в сервис аудита передаваться имя строки соединения,
            найденное в AuditService.Current.AppSetting.AuditDSSettings по параметрам переданного сервиса данных).
            </summary>
            <param name="executionVariant"> Какой статус будет присвоен операции. </param>
            <param name="auditOperationIdList"> Список айдишников записей аудита. </param>
            <param name="dataService"> Сервис данных, по параметрам которого (строка соединения и тип) осуществляется поиск в AuditService.Current.AppSetting.AuditDSSettings. </param>
            <param name="throwExceptions">Следует ли пробрасывать дальше возникшее исключение.</param>
            <returns> <c>True</c>, если всё закончилось без ошибок. </returns>
        </member>
        <member name="M:ICSSoft.STORMNET.Business.Audit.AuditService.WriteCommonAuditOperation(ICSSoft.STORMNET.DataObject,ICSSoft.STORMNET.Business.IDataService,System.Boolean,System.Data.IDbTransaction)">
            <summary>
            Сообщаем о совершении потенциально аудируемого действа.
            </summary>
            <param name="operationedObject"> Объект, над которым выполняется операция. </param>
            <param name="dataService"> Сервис данных, который выполянет операцию. </param>
            <param name="throwExceptions">Следует ли пробрасывать дальше возникшее исключение (по умолчанию - <c>true</c>).</param>
            <param name="transaction">
            Транзакция, через которую необходимо проводить выполнение зачиток из БД приложения аудиту
            (при работе <see cref="T:ICSSoft.STORMNET.Business.Audit.AuditService"/> иногда необходимо дочитать объект или получить сохранённую копию, 
            а выполнение данного действия без транзакции может привести к взаимоблокировке).
            По умолчанию - <c>null</c>. 
            </param>
            <returns> Ответ о том, можно ли выполнять операцию (если <c>null</c>, то значит, что что-то пошло не так). </returns>
        </member>
        <member name="M:ICSSoft.STORMNET.Business.Audit.AuditService.WriteCommonAuditOperationPrivate(ICSSoft.STORMNET.DataObject,ICSSoft.STORMNET.Business.IDataService,System.Boolean,System.Data.IDbTransaction)">
            <summary>
            Сообщаем о совершении потенциально аудируемого действа.
            </summary>
            <param name="operationedObject"> Объект, над которым выполняется операция. </param>
            <param name="dataService"> Сервис данных, который выполянет операцию. </param>
            <param name="throwExceptions">Следует ли пробрасывать дальше возникшее исключение (по умолчанию - <c>true</c>).</param>
            <param name="transaction">
            Транзакция, через которую необходимо проводить выполнение зачиток из БД приложения аудиту
            (при работе <see cref="T:ICSSoft.STORMNET.Business.Audit.AuditService"/> иногда необходимо дочитать объект или получить сохранённую копию, 
            а выполнение данного действия без транзакции может привести к взаимоблокировке).
            По умолчанию - <c>null</c>. 
            </param>
            <returns> Ответ о том, можно ли выполнять операцию (если <c>null</c>, то значит, что что-то пошло не так). </returns>
        </member>
        <member name="M:ICSSoft.STORMNET.Business.Audit.AuditService.RatifyAuditOperation(ICSSoft.STORMNET.Business.Audit.Objects.tExecutionVariant,System.Collections.Generic.List{ICSSoft.STORMNET.Business.Audit.HelpStructures.AuditAdditionalInfo},System.String,System.Type,System.Boolean,System.Boolean)">
            <summary>
            Подверждение созданных ранее операций аудита
            (если аудит идёт в одну БД с приложением, то будет использован сервис данных по умолчанию).
            </summary>
            <param name="executionVariant"> Какой статус будет присвоен операции. </param>
            <param name="auditOperationInfoList"> Информация о том, что и куда в аудит нужно добавить. </param>
            <param name="dataServiceConnectionString"> Строка соединения сервиса данных, который выполняет запись в БД приложения.  </param>
            <param name="dataServiceType"> Тип сервиса данных, который выполняет запись в БД приложения.  </param>
            <param name="throwExceptions"> Следует ли пробрасывать дальше возникшее исключение. </param>
            <param name="checkClassAuditSettings"> Следует ли проверять настройки аудита самого класса. </param>
            <returns> <c>True</c>, если всё закончилось без ошибок. </returns>
        </member>
        <member name="M:ICSSoft.STORMNET.Business.Audit.AuditService.CheckAndSendToAudit(ICSSoft.STORMNET.Business.Audit.CommonAuditParameters,System.Object)">
            <summary>
            Проверка режима записи данных аудита и в зависимости от этого отправка нужным способом данных аудита.
            </summary>
            <param name="commonAuditParameters"> Параметры аудита. </param>
            <param name="auditClassSettings"> Настройки класса, объект которого отправляют на аудит. </param>
            <returns> Идентификатор записи об аудите. </returns>
        </member>
        <member name="M:ICSSoft.STORMNET.Business.Audit.AuditService.CheckAndSendToAudit(ICSSoft.STORMNET.Business.Audit.CheckedCustomAuditParameters)">
            <summary>
            Проверка режима записи данных аудита и в зависимости от этого отправка нужным способом данных аудита.
            </summary>
            <param name="checkedCustomAuditParameters"> Параметры аудита. </param>
            <returns> Идентификатор записи об аудите. </returns>
        </member>
        <member name="M:ICSSoft.STORMNET.Business.Audit.AuditService.CheckAndSendToAudit(ICSSoft.STORMNET.Business.Audit.RatificationAuditParameters,System.Boolean)">
            <summary>
            Проверка режима записи данных аудита и в зависимости от этого отправка нужным способом данных аудита.
            </summary>
            <param name="ratificationAuditParameters"> Параметры аудита. </param>
            <param name="checkClassAuditSettings"> Следует ли проверять настройки аудита в классах. </param>
        </member>
        <member name="M:ICSSoft.STORMNET.Business.Audit.AuditService.ProperRatificationWithClassSettings(ICSSoft.STORMNET.Business.Audit.RatificationAuditParameters,System.Boolean)">
            <summary>
            Определяем в зависимости от настроек класса, через что и куда будут писаться данные для аудита.
            </summary>
            <param name="ratificationAuditParameters">Параметры аудита.</param>
            <param name="checkClassAuditSettings">Следует ли проверять настройки аудита в классах.</param>
        </member>
        <member name="M:ICSSoft.STORMNET.Business.Audit.AuditService.GenerateBaseCommonAuditParameters(System.String,System.String,System.String,System.Boolean)">
            <summary>
            Генерация базовой части <see cref="T:ICSSoft.STORMNET.Business.Audit.CommonAuditParameters"/>
            (остальное генерится по-своему в зависимости от типа операции).
            </summary>
            <param name="fullUserLogin"> Полный логин текущего пользователя. </param>
            <param name="userName"> Имя текущего пользователя (на крайний случай - логин). </param>
            <param name="connectionStringName"> Имя строки соединения, которое должно использоваться сервисом аудита. </param>
            <param name="throwExceptions"> Используемый при конструировании параметр, следует ли пробрасывать исключение. </param>
            <returns> Сконструированные параметры аудита. </returns>
        </member>
        <member name="M:ICSSoft.STORMNET.Business.Audit.AuditService.GetConnectionStringName(ICSSoft.STORMNET.Business.IDataService)">
            <summary>
            Получение имени строки соединения с БД приложения на основании переданного сервиса данных
            (поиск осуществляется среди <see cref="T:ICSSoft.STORMNET.Business.Audit.Objects.DetailArrayOfAuditDSSetting"/> по строке соединения и типу сервиса данных;
            если переданный сервис данных null, то берётся первое валидное имя строки соединения в <see cref="T:ICSSoft.STORMNET.Business.Audit.Objects.DetailArrayOfAuditDSSetting"/>).
            </summary>
            <param name="dataService"> Сервис данных. </param>
            <returns> Имя строки соединения с БД приложения. </returns>
        </member>
        <member name="M:ICSSoft.STORMNET.Business.Audit.AuditService.GetConnectionStringName(System.String,System.Type)">
            <summary>
            Получение имени строки соединения с БД приложения на основании переданного сервиса данных
            (поиск осуществляется среди <see cref="T:ICSSoft.STORMNET.Business.Audit.Objects.DetailArrayOfAuditDSSetting"/> по строке соединения и типу сервиса данных;
            если переданный сервис данных null, то берётся первое валидное имя строки соединения в <see cref="T:ICSSoft.STORMNET.Business.Audit.Objects.DetailArrayOfAuditDSSetting"/>).
            </summary>
            <param name="dataServiceConnectionString"> Строка соединения сервиса данных, который выполняет запись в БД приложения.  </param>
            <param name="dataServiceType"> Тип сервиса данных, который выполняет запись в БД приложения. </param>
            <returns> Имя строки соединения с БД приложения. </returns>
        </member>
        <member name="M:ICSSoft.STORMNET.Business.Audit.AuditService.GetAuditSettingsFromType(System.Type)">
            <summary>
            Получение настроек аудита из типа объекта.
            </summary>
            <param name="curType"> Тип объекта. </param>
            <returns> Класс с настройками аудита (если они есть). </returns>
        </member>
        <member name="M:ICSSoft.STORMNET.Business.Audit.AuditService.GetAuditSettingValue(System.Object,System.String,System.Boolean)">
            <summary>
            Получение необходимой настройки аудита из переданного хранилища настроек.
            <remarks>
            Если в качестве <paramref name="auditClassSettings"/> будет передано <c>null</c>, то будет проброшено исключение <see cref="T:System.NotImplementedException"/>.
            Если <paramref name="needFieldExist"/> будет передано <c>true</c> и при этом искомое поле, переданное в <paramref name="propertyName"/>, не существует,
            то будет проброшено исключение <see cref="T:ICSSoft.STORMNET.Business.Audit.Exceptions.DataNotFoundAuditException"/>.
            </remarks>
            </summary>
            <param name="auditClassSettings"> Хранилище настроек аудита. </param>
            <param name="propertyName"> Имя настройки, которую необходимо извлечь. </param>
            <param name="needFieldExist"> Обязательно ли, чтобы искомое поле существовало в объекте. </param>
            <returns> Значение настройки. </returns>
        </member>
        <member name="M:ICSSoft.STORMNET.Business.Audit.AuditService.AddCreateAuditInformation(ICSSoft.STORMNET.DataObject)">
            <summary>
            Добавление информации о том, кто и когда создал объект, если он это поддерживает.
            </summary>
            <param name="operationedObject"> Объект, куда добавляется информация. </param>
        </member>
        <member name="M:ICSSoft.STORMNET.Business.Audit.AuditService.AddCreateAuditInformation(ICSSoft.STORMNET.DataObject,System.String)">
            <summary>
            Добавление информации о том, кто и когда создал объект, если он это поддерживает.
            </summary>
            <param name="operationedObject">Объект, куда добавляется информация.</param>
            <param name="currentUserInfo">Информация о пользователе.</param>
        </member>
        <member name="M:ICSSoft.STORMNET.Business.Audit.AuditService.AddEditAuditInformation(ICSSoft.STORMNET.DataObject)">
            <summary>
            Добавление информации о том, кто и когда отредактировал объект, если он это поддерживает.
            </summary>
            <param name="operationedObject"> Объект, куда добавляется информация. </param>
        </member>
        <member name="M:ICSSoft.STORMNET.Business.Audit.AuditService.AddEditAuditInformation(ICSSoft.STORMNET.DataObject,System.String)">
            <summary>
            Добавление информации о том, кто и когда отредактировал объект, если он это поддерживает.
            </summary>
            <param name="operationedObject"> Объект, куда добавляется информация. </param>
            <param name="currentUserInfo">Информация о пользователе.</param>
        </member>
        <member name="M:ICSSoft.STORMNET.Business.Audit.AuditService.GetViewName(System.Object,System.String)">
            <summary>
            Получение имени представления из настроек аудита класса.
            </summary>
            <param name="auditClassSettings"> Настройки аудита класса. </param>
            <param name="propertyName"> Свойство, где находится имя представления. </param>
            <returns> Имя представления. </returns>
        </member>
        <member name="M:ICSSoft.STORMNET.Business.Audit.AuditService.GetView(System.Object,System.String,System.Type)">
            <summary>
            Получение представления для соответствующей операции у объекта.
            </summary>
            <param name="auditClassSettings"> Настройки аудита в классе. </param>
            <param name="propertyName"> Имя свойства, где в настройках лежит правильное имя представления. </param>
            <param name="operationedObjectType"> Тип объекта, для которого пишем аудит. </param>
            <returns> Полученное представление. </returns>
        </member>
        <member name="M:ICSSoft.STORMNET.Business.Audit.AuditService.CopyAlteredNotSavedDataObject(ICSSoft.STORMNET.DataObject,ICSSoft.STORMNET.DataObject,ICSSoft.STORMNET.View)">
            <summary>
            Скопировать недостающие свойства из старого объекта, которые не загружены в новом объекте.
            </summary>
            <param name="oldObject">Старый вариант объекта (как он лежит в БД).</param>
            <param name="newObject">Текущая версия объекта (как она сейчас будет записана в БД).</param>
            <param name="auditView">Представление, по которому должна быть загружена текущая версия.</param>
            <returns>"Дозагруженные" (вручную проставленные) свойства объекта.</returns>
        </member>
        <member name="M:ICSSoft.STORMNET.Business.Audit.AuditService.CopyNotSavedDataObject(ICSSoft.STORMNET.DataObject)">
            <summary>
            Скопировать объект, который ещё не был сохранён.
            </summary>
            <param name="operationedObject"> Объект для копирования. </param>
            <returns> Копия объекта. </returns>
        </member>
        <member name="M:ICSSoft.STORMNET.Business.Audit.AuditService.LoadDatabaseCopy(ICSSoft.STORMNET.DataObject,ICSSoft.STORMNET.View,ICSSoft.STORMNET.Business.IDataService,System.Data.IDbTransaction)">
            <summary>
            Вычитать из базы соответствующий объекту объект.
            </summary>
            <param name="operationedObject"> Объект, чью копию будем вычитывать из БД. </param>
            <param name="curView"> Представление, по которому будем вычитывать из БД. </param>
            <param name="dataService"> Сервис данных. </param>
            <param name="transaction"> Транзакция, через которую необходимо проводить дочитывание объекта, чтобы не привести к взаимоблокировке. </param>
            <returns> Вычитанный из БД объект (<c>null</c>, если что-то пошло не так). </returns>
        </member>
        <member name="M:ICSSoft.STORMNET.Business.Audit.AuditService.GetCurrentUserInfo(ICSSoft.STORMNET.Business.Audit.AppMode,System.Boolean)">
            <summary>
            Получение информации о текущем пользователе.
            </summary>
            <param name="curMode">Текущий режим работы приложения.</param>
            <param name="needNameNotLogin">Данный метод должен постараться вернуть дружественное имя пользователя (логин выдаётся в крайнем случае).</param>
            <returns>Имя пользователя.</returns>
            <exception cref="T:System.Exception">Если задан неподдерживаемый режим, то произойдёт исключение.</exception>
        </member>
        <member name="M:ICSSoft.STORMNET.Business.Audit.AuditService.GetSourceInfo(ICSSoft.STORMNET.Business.Audit.AppMode)">
            <summary>
            Получение информации о том, откуда выполняется аудируемая операция.
            </summary>
            <param name="curMode"> Текущий режим работы приложения. </param>
            <returns> Информация о том, откуда выполняется аудируемая операция. </returns>
            <exception cref="T:System.Exception"> Если задан неподдерживаемый режим, то произойдёт исключение. </exception>
        </member>
        <member name="P:ICSSoft.STORMNET.Business.Audit.AuditService.Current">
            <summary>
            Текущий класс для работы с сервисом аудита.
            </summary>
        </member>
        <member name="P:ICSSoft.STORMNET.Business.Audit.AuditService.ApplicationMode">
            <summary>
            Режим, в котором работает приложение: win или web.
            </summary>
        </member>
        <member name="P:ICSSoft.STORMNET.Business.Audit.AuditService.IsAuditEnabled">
            <summary>
            Включён ли аудит для приложения.
            </summary>
        </member>
        <member name="P:ICSSoft.STORMNET.Business.Audit.AuditService.IsAuditRemote">
            <summary>
            Выполняется ли аудит удалённо (то есть через вызов AuditWinService).
            </summary>
        </member>
        <member name="P:ICSSoft.STORMNET.Business.Audit.AuditService.AuditConnectionStringName">
            <summary>
            Получение имени строки соединения с БД аудита.
            (используется для загрузки данных из БД).
            Если используется запись аудита через windows-сервис, то будет возвращено <c>null</c>.
            </summary>
        </member>
        <member name="P:ICSSoft.STORMNET.Business.Audit.AuditService.ShowPrimaryKey">
            <summary>
            Следует ли отображать записи с изменением первичного ключа на формах.
            </summary>
        </member>
        <member name="P:ICSSoft.STORMNET.Business.Audit.AuditService.AppSetting">
            <summary>
            Настройки аудита в приложении.
            </summary>
        </member>
        <member name="P:ICSSoft.STORMNET.Business.Audit.AuditService.Audit">
            <summary>
            Элемент, реализующий логику аудита.
            </summary>
        </member>
        <member name="T:ICSSoft.STORMNET.Business.Audit.AuditService.ProperRatificationInfo">
            <summary>
            Вспомогательный класс для метода <see cref="M:ICSSoft.STORMNET.Business.Audit.AuditService.ProperRatificationWithClassSettings(ICSSoft.STORMNET.Business.Audit.RatificationAuditParameters,System.Boolean)"/>.
            </summary>
        </member>
        <member name="P:ICSSoft.STORMNET.Business.Audit.AuditService.ProperRatificationInfo.Audit">
            <summary>
            Вариант аудита, через который идёт работа.
            </summary>
        </member>
        <member name="P:ICSSoft.STORMNET.Business.Audit.AuditService.ProperRatificationInfo.ConnectionStringName">
            <summary>
            Имя строки соединения с БД аудита.
            </summary>
        </member>
        <member name="P:ICSSoft.STORMNET.Business.Audit.AuditService.ProperRatificationInfo.AuditAdditionalInfoList">
            <summary>
            Список изменениний, которые необходимо послать в аудит.
            </summary>
        </member>
        <member name="T:ICSSoft.STORMNET.Business.Audit.AuditConstants">
            <summary>
            Константы для аудита.
            </summary>
        </member>
        <member name="F:ICSSoft.STORMNET.Business.Audit.AuditConstants.AuditSettingsClassName">
            <summary>
            Имя класса, который добавляется в DataObject.
            </summary>
        </member>
        <member name="F:ICSSoft.STORMNET.Business.Audit.AuditConstants.DefaultAuditViewName">
            <summary>
            Имя по умолчанию для представления аудита.
            </summary>
        </member>
        <member name="F:ICSSoft.STORMNET.Business.Audit.AuditConstants.FieldValueDeletedConst">
            <summary>
            Имя соответствующего поля.
            </summary>
        </member>
        <member name="F:ICSSoft.STORMNET.Business.Audit.AuditConstants.FieldNamePrimaryKey">
            <summary>
            Имя соответствующего поля.
            </summary>
        </member>
        <member name="F:ICSSoft.STORMNET.Business.Audit.AuditConstants.DefaultDsTypeConfigName">
            <summary>
            Название настройки в конфиге, используемом классом, пишущим аудит,
            определяющей тип сервиса данных для записи данных аудита по умолчанию.
            </summary>
        </member>
        <member name="F:ICSSoft.STORMNET.Business.Audit.AuditConstants.DefaultDataServiceType">
            <summary>
            Тип сервиса данных по умолчанию.
            </summary>
        </member>
        <member name="F:ICSSoft.STORMNET.Business.Audit.AuditConstants.AuditEnabledFieldName">
            <summary>
            Имя соответствующего поля.
            </summary>
        </member>
        <member name="F:ICSSoft.STORMNET.Business.Audit.AuditConstants.AuditEnabledFieldSummary">
            <summary>
            Комментарий к соответствующему полю.
            </summary>
        </member>
        <member name="F:ICSSoft.STORMNET.Business.Audit.AuditConstants.UseDefaultViewFieldName">
            <summary>
            Имя соответствующего поля.
            </summary>
        </member>
        <member name="F:ICSSoft.STORMNET.Business.Audit.AuditConstants.UseDefaultViewFieldSummary">
            <summary>
            Комментарий к соответствующему полю.
            </summary>
        </member>
        <member name="F:ICSSoft.STORMNET.Business.Audit.AuditConstants.SelectAuditFieldName">
            <summary>
            Имя соответствующего поля.
            </summary>
        </member>
        <member name="F:ICSSoft.STORMNET.Business.Audit.AuditConstants.SelectAuditFieldSummary">
            <summary>
            Комментарий к соответствующему полю.
            </summary>
        </member>
        <member name="F:ICSSoft.STORMNET.Business.Audit.AuditConstants.SelectAuditViewNameFieldName">
            <summary>
            Имя соответствующего поля.
            </summary>
        </member>
        <member name="F:ICSSoft.STORMNET.Business.Audit.AuditConstants.SelectAuditViewNameFieldSummary">
            <summary>
            Комментарий к соответствующему полю.
            </summary>
        </member>
        <member name="F:ICSSoft.STORMNET.Business.Audit.AuditConstants.InsertAuditFieldName">
            <summary>
            Имя соответствующего поля.
            </summary>
        </member>
        <member name="F:ICSSoft.STORMNET.Business.Audit.AuditConstants.InsertAuditFieldSummary">
            <summary>
            Комментарий к соответствующему полю.
            </summary>
        </member>
        <member name="F:ICSSoft.STORMNET.Business.Audit.AuditConstants.InsertAuditViewNameFieldName">
            <summary>
            Имя соответствующего поля.
            </summary>
        </member>
        <member name="F:ICSSoft.STORMNET.Business.Audit.AuditConstants.InsertAuditViewNameFieldSummary">
            <summary>
            Комментарий к соответствующему полю.
            </summary>
        </member>
        <member name="F:ICSSoft.STORMNET.Business.Audit.AuditConstants.UpdateAuditFieldName">
            <summary>
            Имя соответствующего поля.
            </summary>
        </member>
        <member name="F:ICSSoft.STORMNET.Business.Audit.AuditConstants.UpdateAuditFieldSummary">
            <summary>
            Комментарий к соответствующему полю.
            </summary>
        </member>
        <member name="F:ICSSoft.STORMNET.Business.Audit.AuditConstants.UpdateAuditViewNameFieldName">
            <summary>
            Имя соответствующего поля.
            </summary>
        </member>
        <member name="F:ICSSoft.STORMNET.Business.Audit.AuditConstants.UpdateAuditViewNameFieldSummary">
            <summary>
            Комментарий к соответствующему полю.
            </summary>
        </member>
        <member name="F:ICSSoft.STORMNET.Business.Audit.AuditConstants.DeleteAuditFieldName">
            <summary>
            Имя соответствующего поля.
            </summary>
        </member>
        <member name="F:ICSSoft.STORMNET.Business.Audit.AuditConstants.DeleteAuditFieldSummary">
            <summary>
            Комментарий к соответствующему полю.
            </summary>
        </member>
        <member name="F:ICSSoft.STORMNET.Business.Audit.AuditConstants.DeleteAuditViewNameFieldName">
            <summary>
            Имя соответствующего поля.
            </summary>
        </member>
        <member name="F:ICSSoft.STORMNET.Business.Audit.AuditConstants.DeleteAuditViewNameFieldSummary">
            <summary>
            Комментарий к соответствующему полю.
            </summary>
        </member>
        <member name="F:ICSSoft.STORMNET.Business.Audit.AuditConstants.FormUrlFieldName">
            <summary>
            Имя соответствующего поля.
            </summary>
        </member>
        <member name="F:ICSSoft.STORMNET.Business.Audit.AuditConstants.FormUrlFieldSummary">
            <summary>
            Комментарий к соответствующему полю.
            </summary>
        </member>
        <member name="F:ICSSoft.STORMNET.Business.Audit.AuditConstants.WriteModeFieldName">
            <summary>
            Имя соответствующего поля.
            </summary>
        </member>
        <member name="F:ICSSoft.STORMNET.Business.Audit.AuditConstants.WriteModeFieldSummary">
            <summary>
            Комментарий к соответствующему полю.
            </summary>
        </member>
        <member name="F:ICSSoft.STORMNET.Business.Audit.AuditConstants.PrunningLengthFieldName">
            <summary>
            Имя соответствующего поля.
            </summary>
        </member>
        <member name="F:ICSSoft.STORMNET.Business.Audit.AuditConstants.PrunningLengthFieldSummary">
            <summary>
            Комментарий к соответствующему полю.
            </summary>
        </member>
        <member name="F:ICSSoft.STORMNET.Business.Audit.AuditConstants.ShowPrimaryKeyFieldName">
            <summary>
            Имя соответствующего поля.
            </summary>
        </member>
        <member name="F:ICSSoft.STORMNET.Business.Audit.AuditConstants.ShowPrimaryKeyFieldSummary">
            <summary>
            Комментарий к соответствующему полю.
            </summary>
        </member>
        <member name="F:ICSSoft.STORMNET.Business.Audit.AuditConstants.KeepOldValueFieldName">
            <summary>
            Имя соответствующего поля.
            </summary>
        </member>
        <member name="F:ICSSoft.STORMNET.Business.Audit.AuditConstants.KeepOldValueFieldSummary">
            <summary>
            Комментарий к соответствующему полю.
            </summary>
        </member>
        <member name="F:ICSSoft.STORMNET.Business.Audit.AuditConstants.CompressFieldName">
            <summary>
            Имя соответствующего поля.
            </summary>
        </member>
        <member name="F:ICSSoft.STORMNET.Business.Audit.AuditConstants.CompressFieldSummary">
            <summary>
            Комментарий к соответствующему полю.
            </summary>
        </member>
        <member name="F:ICSSoft.STORMNET.Business.Audit.AuditConstants.KeepAllValuesFieldName">
            <summary>
            Имя соответствующего поля.
            </summary>
        </member>
        <member name="F:ICSSoft.STORMNET.Business.Audit.AuditConstants.KeepAllValuesFieldSummary">
            <summary>
            Комментарий к соответствующему полю.
            </summary>
        </member>
        <member name="F:ICSSoft.STORMNET.Business.Audit.AuditConstants.AuditClassServiceFieldName">
            <summary>
            Имя поля, где хранится сервиса аудита, который будет писать аудит для конкретного класса.
            </summary>
        </member>
        <member name="F:ICSSoft.STORMNET.Business.Audit.AuditConstants.AuditClassConnectionStringNameFieldName">
            <summary>
            Имя поля, где хранится имя строки соединения с БД, куда необходимо писать аудит для конкретного класса.
            </summary>
        </member>
        <member name="T:ICSSoft.STORMNET.Business.Audit.IDataObjectWithAuditFields">
            <summary>
            Интерфейс, который имеется у типов, которые имеют дополнительные поля аудита
            </summary>
        </member>
        <member name="P:ICSSoft.STORMNET.Business.Audit.IDataObjectWithAuditFields.CreateTime">
            <summary>
            Дата создания
            </summary>
        </member>
        <member name="P:ICSSoft.STORMNET.Business.Audit.IDataObjectWithAuditFields.Creator">
            <summary>
            Создатель
            </summary>
        </member>
        <member name="P:ICSSoft.STORMNET.Business.Audit.IDataObjectWithAuditFields.EditTime">
            <summary>
            Дата последнего изменения
            </summary>
        </member>
        <member name="P:ICSSoft.STORMNET.Business.Audit.IDataObjectWithAuditFields.Editor">
            <summary>
            Последний редактор
            </summary>
        </member>
        <member name="T:ICSSoft.STORMNET.Business.Audit.Objects.tExecutionVariant">
            <summary>
            tExecutionVariant
            </summary>
        </member>
        <member name="F:ICSSoft.STORMNET.Business.Audit.Objects.tExecutionVariant.Unknown">
            <summary>
            Результат операции неизвестен
            (то есть, например, отправляются данные об аудите, а потом запускается сама операция,
            которая не будет сообщать, выполнилась она или нет, тогда получается, что результат останется неизвестен)
            </summary>
        </member>
        <member name="F:ICSSoft.STORMNET.Business.Audit.Objects.tExecutionVariant.Unexecuted">
            <summary>
            Операция не выполнена
            (то есть уже всё готово, чтобы выполнить операцию, но она ещё не выполнена)
            </summary>
        </member>
        <member name="F:ICSSoft.STORMNET.Business.Audit.Objects.tExecutionVariant.Executed">
            <summary>
            Операция выполнена
            </summary>
        </member>
        <member name="F:ICSSoft.STORMNET.Business.Audit.Objects.tExecutionVariant.Failed">
            <summary>
            Выполнение операции закончилось ошибкой
            </summary>
        </member>
        <member name="T:ICSSoft.STORMNET.Business.Audit.Objects.tTypeOfAuditOperation">
            <summary>
            tTypeOfAuditOperation
            </summary>
        </member>
        <member name="F:ICSSoft.STORMNET.Business.Audit.Objects.tTypeOfAuditOperation.INSERT">
            <summary>
            Создание объекта
            </summary>
        </member>
        <member name="F:ICSSoft.STORMNET.Business.Audit.Objects.tTypeOfAuditOperation.UPDATE">
            <summary>
            Изменение объекта
            </summary>
        </member>
        <member name="F:ICSSoft.STORMNET.Business.Audit.Objects.tTypeOfAuditOperation.DELETE">
            <summary>
            Удаление объекта
            </summary>
        </member>
        <member name="F:ICSSoft.STORMNET.Business.Audit.Objects.tTypeOfAuditOperation.SELECT">
            <summary>
            Чтение объекта
            </summary>
        </member>
        <member name="F:ICSSoft.STORMNET.Business.Audit.Objects.tTypeOfAuditOperation.EXECUTE">
            <summary>
            Выполнение какой-то операции
            </summary>
        </member>
        <member name="T:ICSSoft.STORMNET.Business.Audit.Objects.tWriteMode">
            <summary>
            Режим записи данных аудита
            </summary>
        </member>
        <member name="F:ICSSoft.STORMNET.Business.Audit.Objects.tWriteMode.Synchronous">
            <summary>
            Запись данных аудита синхронная
            </summary>
        </member>
        <member name="F:ICSSoft.STORMNET.Business.Audit.Objects.tWriteMode.Asynchronous">
            <summary>
            Запись данных аудита асинхронная
            </summary>
        </member>
        <member name="T:ICSSoft.STORMNET.Business.BusinessServer">
            <summary>
            Базовый абстрактный класс для всех бизнес-серверов.
            </summary>
        </member>
        <member name="F:ICSSoft.STORMNET.Business.BusinessServer.m_objObjectCreator">
            <summary>
            Объект, предназначенный для создания новых объектов. При удаленной работе настраивается на создание объектов
            на клиенте.
            </summary>
        </member>
        <member name="M:ICSSoft.STORMNET.Business.BusinessServer.SetCreator(ICSSoft.STORMNET.ObjectCreator)">
            <summary>
            Установить "создаватель" объектов.
            </summary>
            <param name="creator">Устанавливаемый "создаватель" объектов.</param>
        </member>
        <member name="M:ICSSoft.STORMNET.Business.BusinessServer.SetType(System.Type)">
            <summary>
            Определяем метод, в который записан бизнес-сервер для типа объекта. 
            Например, для класса "Журнал", это будет "OnUpdateЖурнал" с определённой сигнатурой.
            </summary>
            <param name="objectType">
            Тип объектов, для которого ищем бизнес-сервер.
            </param>
        </member>
        <member name="M:ICSSoft.STORMNET.Business.BusinessServer.OnUpdateDataobject(ICSSoft.STORMNET.DataObject)">
            <summary>
            Вызвать действия привязанные на события при сохранении объекта.
            </summary>
            <param name="UpdateObject">Сам объект.</param>
            <returns>Что еще поменялось.</returns>
        </member>
        <member name="M:ICSSoft.STORMNET.Business.BusinessServer.prv_CreateObject(System.Type)">
            <summary>
            Создать новый объект. Все объекты, в дальнейшем передаваемые на клиента должны быть созданы через данный метод.
            В этом случае эти объекты будут создаваться на клиенте.
            </summary>
            <param name="type">Тип объекта данных.</param>
            <returns>Созданный объект.</returns>
        </member>
        <member name="M:ICSSoft.STORMNET.Business.BusinessServer.prv_CopyDataObject(ICSSoft.STORMNET.DataObject,ICSSoft.STORMNET.DataObject)">
            <summary>
            Скопировать объект данных при работе с ремоутингом (т.к. CopyTo в этом случае не срабатывает)
            Объект datadest должен быть загружен также, как и datasource.
            </summary>
            <param name="datasource">
            Исходный объект данных.
            </param>
            <param name="datadest">
            Целевой объект данных.
            </param>
        </member>
        <member name="P:ICSSoft.STORMNET.Business.BusinessServer.Order">
            <summary>
            Упорядочение бизнес-серверов. 0 - выполнится раньше остальных, int.MaxValue - выполнится последним. По-умолчанию: 0.
            </summary>
        </member>
        <member name="P:ICSSoft.STORMNET.Business.BusinessServer.ObjectsToUpdate">
            <summary>
            Ссылка на обновляемые объекты (устанавливается сервисом данных).
            </summary>
        </member>
        <member name="P:ICSSoft.STORMNET.Business.BusinessServer.DataService">
            <summary>
            Сервис данных, на котором сработает этот Бизнес-сервер. Для веб-приложений он будет создаваться новый каждый раз при обращении к этому свойству, т.к. считаем кеширование сервиса данных злом. 
            </summary>
        </member>
        <member name="T:ICSSoft.STORMNET.Business.BusinessTaskMonitor">
            <summary>
            Провайдер текущего монитора выполнения задач.
            </summary>
        </member>
        <member name="M:ICSSoft.STORMNET.Business.BusinessTaskMonitor.BeginTask(System.String)">
            <summary>
            Задача начала выполняться
            </summary>
            <param name="TaskName">имя задачи</param>
            <returns>некоторый идентификатор задачи в конкретном мониторе</returns>
        </member>
        <member name="M:ICSSoft.STORMNET.Business.BusinessTaskMonitor.BeginTask(System.String,System.Object)">
            <summary>
            Задача начала выполняться
            </summary>
            <param name="TaskName">имя задачи</param>
            <param name="ID">некоторый идентификатор задачи в конкретном мониторе</param>
        </member>
        <member name="M:ICSSoft.STORMNET.Business.BusinessTaskMonitor.EndTask(System.Object)">
            <summary>
            Задача закончила выполняться
            </summary>
            <param name="ID">некоторый идентификатор задачи в конкретном мониторе</param>
        </member>
        <member name="M:ICSSoft.STORMNET.Business.BusinessTaskMonitor.BeginSubTask(System.String,System.Object)">
            <summary>
            ПодЗадача начала выполняться
            </summary>
            <param name="SubTask">имя подзадачи</param>
            <param name="TaskID">некоторый идентификатор задачи в конкретном мониторе</param>
            <returns>некоторый идентификатор подзадачи в конкретном мониторе</returns>
        </member>
        <member name="M:ICSSoft.STORMNET.Business.BusinessTaskMonitor.EndSubTask(System.Object)">
            <summary>
            ПодЗадача закончила выполняться
            </summary>
            <param name="SubTaskID">некоторый идентификатор подзадачи в конкретном мониторе</param>
        </member>
        <member name="P:ICSSoft.STORMNET.Business.BusinessTaskMonitor.TaskMonitor">
            <summary>
            текущий монитор
            </summary>
        </member>
        <member name="T:ICSSoft.STORMNET.Business.ChangeViewForTypeDelegate">
            <summary>
            Делегат для изменения View для Типа.
            </summary>
            <param name="type">Тип, для которого можно поменять представление.</param>
            <returns>Представление, которое было изменено.</returns>
        </member>
        <member name="T:ICSSoft.STORMNET.Business.ColumnsSortDef">
            <summary>
            Структура для установления сортировки на колонку.
            </summary>
        </member>
        <member name="M:ICSSoft.STORMNET.Business.ColumnsSortDef.#ctor(System.String,ICSSoft.STORMNET.Business.SortOrder)">
            <summary>
            
            </summary>
            <param name="name">Имя колонки в педставлении</param>
            <param name="sort">как сортировать</param>
        </member>
        <member name="M:ICSSoft.STORMNET.Business.ColumnsSortDef.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            
            </summary>
            <param name="info"></param>
            <param name="context"></param>
        </member>
        <member name="M:ICSSoft.STORMNET.Business.ColumnsSortDef.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            
            </summary>
            <param name="info"></param>
            <param name="context"></param>
        </member>
        <member name="P:ICSSoft.STORMNET.Business.ColumnsSortDef.Name">
            <summary>
            Имя колонки в представлении.
            </summary>
        </member>
        <member name="P:ICSSoft.STORMNET.Business.ColumnsSortDef.Sort">
            <summary>
            как сортировать.
            </summary>
        </member>
        <member name="T:ICSSoft.STORMNET.Business.DataServiceWrapper">
            <summary>
            Обертка для получения сервиса данных либо через <see cref="T:ICSSoft.STORMNET.Business.DataServiceProvider"/> либо явно указанный в этом экземпляре класса.
            Для поддержки этой возможности в классе наследнике необходимо определить конструктор с передачей экземпляра сервиса данных в базовый контруктор.
            </summary>
        </member>
        <member name="F:ICSSoft.STORMNET.Business.DataServiceWrapper._customDataService">
            <summary>
            Явно указанный экземпляр сервиса данных с которым должен работать данный экземпляр класса.
            </summary>
        </member>
        <member name="M:ICSSoft.STORMNET.Business.DataServiceWrapper.#ctor">
            <summary>
            Создание экземпляра класса по умолчанию. При этом сервис данных всегда будет браться из <see cref="T:ICSSoft.STORMNET.Business.DataServiceProvider"/>.
            </summary>
        </member>
        <member name="M:ICSSoft.STORMNET.Business.DataServiceWrapper.#ctor(ICSSoft.STORMNET.Business.IDataService)">
            <summary>
            Создание экземпляра класса с указанием сервиса данных для работы.
            </summary>
            <param name="dataService">Сервис данных с которым будет работать данный экземпляр класса.</param>
        </member>
        <member name="P:ICSSoft.STORMNET.Business.DataServiceWrapper.DataService">
            <summary>
            Сервис данных для работы в данном экземпляре класса.
            </summary>
        </member>
        <member name="T:ICSSoft.STORMNET.Business.DataObjectsEventArgs">
            <summary>
            Аргументы события с массивом объектов данных
            </summary>
        </member>
        <member name="F:ICSSoft.STORMNET.Business.DataObjectsEventArgs.DataObjects">
            <summary>
            Массив объектов данных
            </summary>
        </member>
        <member name="M:ICSSoft.STORMNET.Business.DataObjectsEventArgs.#ctor(ICSSoft.STORMNET.DataObject[])">
            <summary>
            Конструктор
            </summary>
            <param name="dataObjects">
            </param>
        </member>
        <member name="T:ICSSoft.STORMNET.Business.CreateCommandEventArgs">
            <summary>
            Аргументы события создания команды
            </summary>
        </member>
        <member name="F:ICSSoft.STORMNET.Business.CreateCommandEventArgs.Command">
            <summary>
            Команда
            </summary>
        </member>
        <member name="M:ICSSoft.STORMNET.Business.CreateCommandEventArgs.#ctor(System.Data.IDbCommand)">
            <summary>
            Конструктор
            </summary>
            <param name="Cmnd">Команда</param>
        </member>
        <member name="T:ICSSoft.STORMNET.Business.ChangeCustomizationStringDelegate">
            <summary>
            Делегат для изменения строки соединения (организация работы с несколькими базами).
            </summary>
            <param name="types">Массив типов, который получается из объектов пришедших в сервис данных.</param>
            <returns>Новая строка соединения, если вернётся пустое значение или null, строка не изменится.</returns>
        </member>
        <member name="T:ICSSoft.STORMNET.Business.DataServiceProvider">
            <summary>
            <see cref="T:ICSSoft.STORMNET.Business.IDataService"/> service locator.
            </summary>
        </member>
        <member name="F:ICSSoft.STORMNET.Business.DataServiceProvider.ConfigurationDataServiceType">
            <summary>
            Name of configuration settings for DataService type.
            </summary>
        </member>
        <member name="F:ICSSoft.STORMNET.Business.DataServiceProvider.ConfigurationCustomizationStrings">
            <summary>
            Name of configuration settings for customization strings. Ussually is connection string.
            </summary>
        </member>
        <member name="M:ICSSoft.STORMNET.Business.DataServiceProvider.#ctor">
            <summary>
            Deny construct instance directly.
            </summary>
        </member>
        <member name="F:ICSSoft.STORMNET.Business.DataServiceProvider._dataService">
            <summary>
            Static cache field for <see cref="T:ICSSoft.STORMNET.Business.IDataService"/> instance.
            </summary>
        </member>
        <member name="F:ICSSoft.STORMNET.Business.DataServiceProvider._alwaysNewDS">
            <summary>
            Private field for <see cref="P:ICSSoft.STORMNET.Business.DataServiceProvider.AlwaysNewDS"/> property.
            </summary>
        </member>
        <member name="F:ICSSoft.STORMNET.Business.DataServiceProvider._isWebApp">
            <summary>
            Private field for <see cref="P:ICSSoft.STORMNET.Business.DataServiceProvider.IsWebApp"/> property.
            </summary>
        </member>
        <member name="M:ICSSoft.STORMNET.Business.DataServiceProvider.Encrypt(System.String,System.Boolean)">
            <summary>
            Encryption method for customization string.
            </summary>
            <param name="toEncrypt">String for encrypt.</param>
            <param name="useHashing">Use hashing for encryption.</param>
            <returns>Encrypted string.</returns>
        </member>
        <member name="M:ICSSoft.STORMNET.Business.DataServiceProvider.Decrypt(System.String,System.Boolean)">
            <summary>
            Decrypt method to get original string.
            </summary>
            <param name="cipherString">String for decription.</param>
            <param name="useHashing">Use hashing for decription.</param>
            <returns>Original string.</returns>
        </member>
        <member name="M:ICSSoft.STORMNET.Business.DataServiceProvider.GetHash(System.Boolean)">
            <summary>
            Get hash bytes for key.
            </summary>
            <param name="useHashing">Use key hashing.</param>
            <returns>Hask bytes.</returns>
        </member>
        <member name="M:ICSSoft.STORMNET.Business.DataServiceProvider.GetProvider(System.Boolean)">
            <summary>
            Get triple DES crypto service provider.
            </summary>
            <param name="useHashing">Use key hashing.</param>
            <returns>Triple DES crypto service provider.</returns>
        </member>
        <member name="P:ICSSoft.STORMNET.Business.DataServiceProvider.AlwaysNewDS">
            <summary>
            If <c>true</c> the <see cref="P:ICSSoft.STORMNET.Business.DataServiceProvider.DataService"/> returns new data service instance. Default <c>true</c> for web applications (<see cref="P:System.Web.HttpContext.Current"/> is not null), <c>false</c> for other applications.
            </summary>
        </member>
        <member name="P:ICSSoft.STORMNET.Business.DataServiceProvider.DataService">
            <summary>
            Current <see cref="T:ICSSoft.STORMNET.Business.IDataService"/> instance.
            </summary>
            <exception cref="T:System.Exception">Throws if your configuration file has wrong parameters.</exception>
        </member>
        <member name="P:ICSSoft.STORMNET.Business.DataServiceProvider.IsWebApp">
            <summary>
            Determinate is a web application. Will be check <see cref="P:System.Web.HttpContext.Current"/> is not null for web applications.
            </summary>
        </member>
        <member name="T:ICSSoft.STORMNET.Business.PropertyUsingTypes">
            <summary>
            Summary description for DataServiceUsingTypeCustomizer.
            </summary>
        </member>
        <member name="F:ICSSoft.STORMNET.Business.PropertyUsingTypes.DataObjectType">
            <summary>
            тип объекта данных
            </summary>
        </member>
        <member name="F:ICSSoft.STORMNET.Business.PropertyUsingTypes.PropertyName">
            <summary>
            Свойство
            </summary>
        </member>
        <member name="F:ICSSoft.STORMNET.Business.PropertyUsingTypes.UsingTypes">
            <summary>
            типы которые можно использовать для этого свойства
            </summary>
        </member>
        <member name="M:ICSSoft.STORMNET.Business.PropertyUsingTypes.#ctor(System.Type,System.String,System.Type[])">
            <summary>
            
            </summary>
            <param name="doType"> тип объекта данных</param>
            <param name="propName">Свойство</param>
            <param name="usTypes">типы которые можно использовать для этого свойства</param>
        </member>
        <member name="T:ICSSoft.STORMNET.Business.DataServiceUsingTypeCustomizer">
            <summary>
            Настройка сервиса данных в части <see cref="T:ICSSoft.STORMNET.Business.PropertyUsingTypes"/>
            </summary>
        </member>
        <member name="M:ICSSoft.STORMNET.Business.DataServiceUsingTypeCustomizer.#ctor(ICSSoft.STORMNET.Business.PropertyUsingTypes[])">
            <summary>
            
            </summary>
            <param name="ustypes"></param>
        </member>
        <member name="T:ICSSoft.STORMNET.Exceptions.PropertyCouldnotBeNullException">
            <summary>
            Исключительная ситуация, возникающая при пустом значении в свойстве, которое должно быть заполнено
            </summary>
        </member>
        <member name="F:ICSSoft.STORMNET.Exceptions.PropertyCouldnotBeNullException.propName">
            <summary>
            Имя свойства
            </summary>
        </member>
        <member name="F:ICSSoft.STORMNET.Exceptions.PropertyCouldnotBeNullException.dataobject">
            <summary>
            объект
            </summary>
        </member>
        <member name="M:ICSSoft.STORMNET.Exceptions.PropertyCouldnotBeNullException.#ctor(System.String,ICSSoft.STORMNET.DataObject)">
            <summary>
            Исключительная ситуация, возникающая при пустом значении в свойстве, которое должно быть заполнено
            </summary>
            <param name="prop">свойство</param>
            <param name="obj">объект</param>
        </member>
        <member name="M:ICSSoft.STORMNET.Exceptions.PropertyCouldnotBeNullException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            
            </summary>
            <param name="info"></param>
            <param name="context"></param>
        </member>
        <member name="M:ICSSoft.STORMNET.Exceptions.PropertyCouldnotBeNullException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            
            </summary>
            <param name="info"></param>
            <param name="context"></param>
        </member>
        <member name="T:ICSSoft.STORMNET.Exceptions.DataServiceNotFoundException">
            <summary>
            
            </summary>
        </member>
        <member name="M:ICSSoft.STORMNET.Exceptions.DataServiceNotFoundException.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:ICSSoft.STORMNET.Exceptions.DataServiceNotFoundException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            
            </summary>
            <param name="info"></param>
            <param name="context"></param>
        </member>
        <member name="M:ICSSoft.STORMNET.Exceptions.DataServiceNotFoundException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            
            </summary>
            <param name="info"></param>
            <param name="context"></param>
        </member>
        <member name="T:ICSSoft.STORMNET.Exceptions.ObjectNotAlteredException">
            <summary>
            
            </summary>
        </member>
        <member name="M:ICSSoft.STORMNET.Exceptions.ObjectNotAlteredException.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:ICSSoft.STORMNET.Exceptions.ObjectNotAlteredException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            
            </summary>
            <param name="info"></param>
            <param name="context"></param>
        </member>
        <member name="M:ICSSoft.STORMNET.Exceptions.ObjectNotAlteredException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            
            </summary>
            <param name="info"></param>
            <param name="context"></param>
        </member>
        <member name="T:ICSSoft.STORMNET.Exceptions.CantUpdateNotLoadedPropertiesException">
            <summary>
            Все изменяемые поля должны быть первоначально загружены(исключительная ситуация)
            </summary>
        </member>
        <member name="F:ICSSoft.STORMNET.Exceptions.CantUpdateNotLoadedPropertiesException.dobject">
            <summary>
            объект данных
            </summary>
        </member>
        <member name="F:ICSSoft.STORMNET.Exceptions.CantUpdateNotLoadedPropertiesException.props">
            <summary>
            свойства
            </summary>
        </member>
        <member name="M:ICSSoft.STORMNET.Exceptions.CantUpdateNotLoadedPropertiesException.#ctor(ICSSoft.STORMNET.DataObject,System.String[])">
            <summary>
            
            </summary>
            <param name="aDataObject"></param>
            <param name="aProps"></param>
        </member>
        <member name="M:ICSSoft.STORMNET.Exceptions.CantUpdateNotLoadedPropertiesException.#ctor(ICSSoft.STORMNET.DataObject,System.Collections.Specialized.StringCollection)">
            <summary>
            
            </summary>
            <param name="aDataObject"></param>
            <param name="aProps"></param>
        </member>
        <member name="M:ICSSoft.STORMNET.Exceptions.CantUpdateNotLoadedPropertiesException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            
            </summary>
            <param name="info"></param>
            <param name="context"></param>
        </member>
        <member name="M:ICSSoft.STORMNET.Exceptions.CantUpdateNotLoadedPropertiesException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            
            </summary>
            <param name="info"></param>
            <param name="context"></param>
        </member>
        <member name="T:ICSSoft.STORMNET.Exceptions.CantFindDataObjectException">
            <summary>
            Исключение, которое возникает при отсутствии в хранилище данных объекта
            </summary>
        </member>
        <member name="M:ICSSoft.STORMNET.Exceptions.CantFindDataObjectException.#ctor(System.Type,System.Object)">
            <summary>
            
            </summary>
            <param name="doType">тип объекта</param>
            <param name="doKey">ключ объекта</param>
        </member>
        <member name="M:ICSSoft.STORMNET.Exceptions.CantFindDataObjectException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            
            </summary>
            <param name="info"></param>
            <param name="context"></param>
        </member>
        <member name="M:ICSSoft.STORMNET.Exceptions.CantFindDataObjectException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            
            </summary>
            <param name="info"></param>
            <param name="context"></param>
        </member>
        <member name="P:ICSSoft.STORMNET.Exceptions.CantFindDataObjectException.DataObjectType">
            <summary>
            тип объекта
            </summary>
        </member>
        <member name="P:ICSSoft.STORMNET.Exceptions.CantFindDataObjectException.DataObjectKey">
            <summary>
            ключ объекта
            </summary>
        </member>
        <member name="T:ICSSoft.STORMNET.Business.GenerateSQLSelectQueryEventArgs">
            <summary>
            Аргумент события при генерации SQL Select запроса
            </summary>
        </member>
        <member name="F:ICSSoft.STORMNET.Business.GenerateSQLSelectQueryEventArgs.CustomizationStruct">
            <summary>
            Структура настройки сервиса данных <see cref="T:ICSSoft.STORMNET.Business.LoadingCustomizationStruct"/>
            </summary>
        </member>
        <member name="F:ICSSoft.STORMNET.Business.GenerateSQLSelectQueryEventArgs.StorageStruct">
            <summary>
            Структура загрузки <see cref="T:ICSSoft.STORMNET.Business.StorageStructForView"/>
            </summary>
        </member>
        <member name="F:ICSSoft.STORMNET.Business.GenerateSQLSelectQueryEventArgs.GeneratedQuery">
            <summary>
            Запрос
            </summary>
        </member>
        <member name="M:ICSSoft.STORMNET.Business.GenerateSQLSelectQueryEventArgs.#ctor(ICSSoft.STORMNET.Business.LoadingCustomizationStruct,System.String,ICSSoft.STORMNET.Business.StorageStructForView[])">
            <summary>
            Initializes a new instance of the <see cref="T:ICSSoft.STORMNET.Business.GenerateSQLSelectQueryEventArgs"/> class.
            </summary>
            <param name="customizationStruct">
            The customization struct.
            </param>
            <param name="query">
            The query.
            </param>
            <param name="StorageStruct">
            The storage struct.
            </param>
        </member>
        <member name="T:ICSSoft.STORMNET.Business.IBusinessTaskMonitor">
            <summary>
            Интерфейс для создания компонентов отслеживания выполнения бизнессзадач.
            </summary>
        </member>
        <member name="M:ICSSoft.STORMNET.Business.IBusinessTaskMonitor.BeginTask(System.String)">
            <summary>
            Задача начала выполняться.
            </summary>
            <param name="TaskName">Имя задачи.</param>
            <returns>Некоторый идентификатор задачи в конкретном мониторе.</returns>
        </member>
        <member name="M:ICSSoft.STORMNET.Business.IBusinessTaskMonitor.BeginTask(System.String,System.Object)">
            <summary>
            Задача начала выполняться.
            </summary>
            <param name="TaskName">Имя задачи.</param>
            <param name="ID">Некоторый идентификатор задачи в конкретном мониторе.</param>
            
        </member>
        <member name="M:ICSSoft.STORMNET.Business.IBusinessTaskMonitor.EndTask(System.Object)">
            <summary>
            Задача закончила выполняться.
            </summary>
            <param name="ID">Некоторый идентификатор задачи в конкретном мониторе.</param>
        </member>
        <member name="M:ICSSoft.STORMNET.Business.IBusinessTaskMonitor.BeginSubTask(System.String,System.Object)">
            <summary>
            ПодЗадача начала выполняться.
            </summary>
            <param name="SubTask">Имя подзадачи.</param>
            <param name="TaskID">Некоторый идентификатор задачи в конкретном мониторе.</param>
            <returns>Некоторый идентификатор подзадачи в конкретном мониторе.</returns>
        </member>
        <member name="M:ICSSoft.STORMNET.Business.IBusinessTaskMonitor.EndSubTask(System.Object)">
            <summary>
            ПодЗадача закончила выполняться.
            </summary>
            <param name="SubTaskID">Некоторый идентификатор подзадачи в конкретном мониторе.</param>
        </member>
        <member name="T:ICSSoft.STORMNET.Business.IDataService">
            <summary>
            Интерфейс сервисов данных.
            Все реализации наследуются от него.
            </summary>
        </member>
        <member name="M:ICSSoft.STORMNET.Business.IDataService.GetInstanceId">
            <summary>
            Возвращает идентификатор инстанции сервиса данных.
            </summary>
            <returns>Идентификатор инстанции сервиса данных.</returns>
        </member>
        <member name="M:ICSSoft.STORMNET.Business.IDataService.LoadObject(ICSSoft.STORMNET.DataObject,ICSSoft.STORMNET.DataObjectCache)">
            <summary>
            Загрузка одного объекта данных.
            </summary>
            <param name="dobject">Объект данных, который требуется загрузить.</param>
        </member>
        <member name="M:ICSSoft.STORMNET.Business.IDataService.LoadObject(System.String,ICSSoft.STORMNET.DataObject,ICSSoft.STORMNET.DataObjectCache)">
            <summary>
            Загрузка одного объекта данных
            </summary>
            <param name="dataObjectViewName">имя представления объекта</param>
            <param name="dobject">объект данных, который требуется загрузить</param>
        </member>
        <member name="M:ICSSoft.STORMNET.Business.IDataService.LoadObject(ICSSoft.STORMNET.View,ICSSoft.STORMNET.DataObject,ICSSoft.STORMNET.DataObjectCache)">
            <summary>
            Загрузка одного объекта данных
            </summary>
            <param name="dataObjectView">представление объекта</param>
            <param name="dobject">объект данных, который требуется загрузить</param>
        </member>
        <member name="M:ICSSoft.STORMNET.Business.IDataService.LoadObject(ICSSoft.STORMNET.DataObject,System.Boolean,System.Boolean,ICSSoft.STORMNET.DataObjectCache)">
            <summary>
            Загрузка одного объекта данных
            </summary>
            <param name="dobject">объект данных, который требуется загрузить</param>
            <param name="ClearDataObject">очищать ли объект</param>
            <param name="CheckExistingObject">проверять ли существование объекта в хранилище</param>
        </member>
        <member name="M:ICSSoft.STORMNET.Business.IDataService.LoadObject(System.String,ICSSoft.STORMNET.DataObject,System.Boolean,System.Boolean,ICSSoft.STORMNET.DataObjectCache)">
            <summary>
            Загрузка одного объекта данных
            </summary>
            <param name="dataObjectViewName">наименование представления</param>
            <param name="dobject">бъект данных, который требуется загрузить</param>
            <param name="ClearDataObject">очищать ли объект</param>
            <param name="CheckExistingObject">проверять ли существование объекта в хранилище</param>
        </member>
        <member name="M:ICSSoft.STORMNET.Business.IDataService.LoadObject(ICSSoft.STORMNET.View,ICSSoft.STORMNET.DataObject,System.Boolean,System.Boolean,ICSSoft.STORMNET.DataObjectCache)">
            <summary>
            Загрузка одного объекта данных
            </summary>
            <param name="dataObjectView">представление</param>
            <param name="dobject">объект данных, который требуется загрузить</param>
            <param name="ClearDataObject">очищать ли объект</param>
            <param name="CheckExistingObject">проверять ли существование объекта в хранилище</param>
            <param name="ChфтпуeckExistingObject">проверять ли существование объекта в хранилище</param>
        </member>
        <member name="M:ICSSoft.STORMNET.Business.IDataService.LoadObjects(ICSSoft.STORMNET.DataObject[],ICSSoft.STORMNET.View,System.Boolean,ICSSoft.STORMNET.DataObjectCache)">
            <summary>
            Загрузка объектов данных
            </summary>
            <param name="dataobjects">исходные объекты</param>
            <param name="dataObjectView">представлене</param>
            <param name="ClearDataobject">очищать ли существующие</param>
        </member>
        <member name="M:ICSSoft.STORMNET.Business.IDataService.LoadObjects(ICSSoft.STORMNET.Business.LoadingCustomizationStruct,ICSSoft.STORMNET.DataObjectCache)">
            <summary>
            Загрузка объектов данных
            </summary>
            <param name="customizationStruct">настроичная структура для выборки<see cref="T:ICSSoft.STORMNET.Business.LoadingCustomizationStruct"/></param>
            <returns>результат запроса</returns>
        </member>
        <member name="M:ICSSoft.STORMNET.Business.IDataService.LoadObjects(ICSSoft.STORMNET.Business.LoadingCustomizationStruct,System.Object@,ICSSoft.STORMNET.DataObjectCache)">
            <summary>
            Загрузка объектов данных
            </summary>
            <param name="customizationStruct">настроичная структура для выборки<see cref="T:ICSSoft.STORMNET.Business.LoadingCustomizationStruct"/></param>
            <param name="State">Состояние вычитки( для последующей дочитки )</param>
            <returns></returns>
        </member>
        <member name="M:ICSSoft.STORMNET.Business.IDataService.LoadObjects(System.Object@,ICSSoft.STORMNET.DataObjectCache)">
            <summary>
            Загрузка объектов данных
            </summary>
            <param name="State">Состояние вычитки( для последующей дочитки)</param>
            <returns></returns>
        </member>
        <member name="M:ICSSoft.STORMNET.Business.IDataService.LoadStringedObjectView(System.Char,ICSSoft.STORMNET.Business.LoadingCustomizationStruct)">
             <summary>
            Загрузка без создания объектов
             </summary>
             <param name="separator">разделитель в строках</param>
             <param name="customizationStruct">настроичная структура для выборки<see cref="T:ICSSoft.STORMNET.Business.LoadingCustomizationStruct"/></param>
             <returns>массив структур <see cref="T:ICSSoft.STORMNET.Business.ObjectStringDataView"/></returns>
        </member>
        <member name="M:ICSSoft.STORMNET.Business.IDataService.LoadStringedObjectView(System.Char,ICSSoft.STORMNET.Business.LoadingCustomizationStruct,System.Object@)">
            <summary>
            Загрузка без создания объектов
            </summary>
            <param name="separator">разделитель в строках</param>
            <param name="customizationStruct"></param>
            <param name="State"></param>
            <returns></returns>
        </member>
        <member name="M:ICSSoft.STORMNET.Business.IDataService.LoadStringedObjectView(System.Object@)">
            <summary>
            
            </summary>
        </member>
        <member name="M:ICSSoft.STORMNET.Business.IDataService.CompleteLoadStringedObjectView(System.Object@)">
            <summary>
            Корректное завершения операции порционного чтения LoadStringedObjectView.
            </summary>
            <param name="state">Параметр состояния загрузки (массив объектов).</param>
        </member>
        <member name="M:ICSSoft.STORMNET.Business.IDataService.UpdateObject(ICSSoft.STORMNET.DataObject@,ICSSoft.STORMNET.DataObjectCache)">
            <summary>
            Обновление объекта данных
            </summary>
            <param name="dobject">объект данных, который требуется обновить</param>
        </member>
        <member name="M:ICSSoft.STORMNET.Business.IDataService.UpdateObject(ICSSoft.STORMNET.DataObject)">
            <summary>
            Обновление объекта данных
            </summary>
            <param name="dobject">объект данных, который требуется обновить</param>
        </member>
        <member name="M:ICSSoft.STORMNET.Business.IDataService.UpdateObject(ICSSoft.STORMNET.DataObject,ICSSoft.STORMNET.DataObjectCache)">
            <summary>
            Обновление объекта данных
            </summary>
            <param name="dobject">объект данных, который требуется обновить</param>
        </member>
        <member name="M:ICSSoft.STORMNET.Business.IDataService.UpdateObject(ICSSoft.STORMNET.DataObject@,ICSSoft.STORMNET.DataObjectCache,System.Boolean)">
            <summary>
            Обновление объекта данных
            </summary>
            <param name="dobject">объект данных, который требуется обновить</param>
        </member>
        <member name="M:ICSSoft.STORMNET.Business.IDataService.UpdateObject(ICSSoft.STORMNET.DataObject,System.Boolean)">
            <summary>
            Обновление объекта данных
            </summary>
            <param name="dobject">объект данных, который требуется обновить</param>
        </member>
        <member name="M:ICSSoft.STORMNET.Business.IDataService.GetObjectsCount(ICSSoft.STORMNET.Business.LoadingCustomizationStruct)">
            <summary>
            возвращает количество объектов удовлетворяющих запросу
            </summary>
            <param name="customizationStruct">что выбираем</param>
            <returns></returns>
        </member>
        <member name="M:ICSSoft.STORMNET.Business.IDataService.LoadObject(ICSSoft.STORMNET.DataObject)">
            <summary>
            Загрузка одного объекта данных
            </summary>
            <param name="dobject">объект данных, который требуется загрузить</param>
        </member>
        <member name="M:ICSSoft.STORMNET.Business.IDataService.LoadObject(System.String,ICSSoft.STORMNET.DataObject)">
            <summary>
            Загрузка одного объекта данных
            </summary>
            <param name="dataObjectViewName">имя представления объекта</param>
            <param name="dobject">объект данных, который требуется загрузить</param>
        </member>
        <member name="M:ICSSoft.STORMNET.Business.IDataService.LoadObject(ICSSoft.STORMNET.View,ICSSoft.STORMNET.DataObject)">
            <summary>
            Загрузка одного объекта данных
            </summary>
            <param name="dataObjectView">представление объекта</param>
            <param name="dobject">объект данных, который требуется загрузить</param>
        </member>
        <member name="M:ICSSoft.STORMNET.Business.IDataService.LoadObject(ICSSoft.STORMNET.DataObject,System.Boolean,System.Boolean)">
            <summary>
            Загрузка одного объекта данных
            </summary>
            <param name="dobject">объект данных, который требуется загрузить</param>
            <param name="ClearDataObject">очищать ли объект</param>
            <param name="CheckExistingObject">проверять ли существование объекта в хранилище</param>
        </member>
        <member name="M:ICSSoft.STORMNET.Business.IDataService.LoadObject(System.String,ICSSoft.STORMNET.DataObject,System.Boolean,System.Boolean)">
            <summary>
            Загрузка одного объекта данных
            </summary>
            <param name="dataObjectViewName">наименование представления</param>
            <param name="dobject">бъект данных, который требуется загрузить</param>
            <param name="ClearDataObject">очищать ли объект</param>
            <param name="CheckExistingObject">проверять ли существование объекта в хранилище</param>
        </member>
        <member name="M:ICSSoft.STORMNET.Business.IDataService.LoadObject(ICSSoft.STORMNET.View,ICSSoft.STORMNET.DataObject,System.Boolean,System.Boolean)">
            <summary>
            Загрузка одного объекта данных
            </summary>
            <param name="dataObjectView">представление</param>
            <param name="dobject">бъект данных, который требуется загрузить</param>
            <param name="ClearDataObject">очищать ли объект</param>
            <param name="CheckExistingObject">проверять ли существование объекта в хранилище</param>
        </member>
        <member name="M:ICSSoft.STORMNET.Business.IDataService.LoadObjects(ICSSoft.STORMNET.DataObject[],ICSSoft.STORMNET.View,System.Boolean)">
            <summary>
            Загрузка объектов данных
            </summary>
            <param name="dataobjects">исходные объекты</param>
            <param name="dataObjectView">представлене</param>
            <param name="ClearDataobject">очищать ли существующие</param>
        </member>
        <member name="M:ICSSoft.STORMNET.Business.IDataService.LoadObjects(ICSSoft.STORMNET.View)">
            <summary>
            Загрузка объектов данных по представлению
            </summary>
            <param name="dataObjectView">представление</param>
        </member>
        <member name="M:ICSSoft.STORMNET.Business.IDataService.LoadObjects(ICSSoft.STORMNET.View[])">
            <summary>
            Загрузка объектов данных по массиву представлений
            </summary>
            <param name="dataObjectViews">массив представлений</param>
        </member>
        <member name="M:ICSSoft.STORMNET.Business.IDataService.LoadObjects(ICSSoft.STORMNET.Business.LoadingCustomizationStruct[])">
            <summary>
            Загрузка объектов данных по массиву структур
            </summary>
            <param name="customizationStructs">массив структур</param>
        </member>
        <!-- Некорректный комментарий в формате XML для члена "M:ICSSoft.STORMNET.Business.IDataService.LoadObjects(ICSSoft.STORMNET.View,ICSSoft.STORMNET.Business.ChangeViewForTypeDelegate)" проигнорирован -->
        <member name="M:ICSSoft.STORMNET.Business.IDataService.LoadObjects(ICSSoft.STORMNET.View[],ICSSoft.STORMNET.Business.ChangeViewForTypeDelegate)">
            <summary>
            Загрузка объектов данных по массиву представлений
            </summary>
            <param name="dataObjectViews">массив представлений</param>
            <param name="changeViewForTypeDelegate">делегат для изменения</param>
        </member>
        <member name="M:ICSSoft.STORMNET.Business.IDataService.LoadObjects(ICSSoft.STORMNET.Business.LoadingCustomizationStruct[],ICSSoft.STORMNET.Business.ChangeViewForTypeDelegate)">
            <summary>
            Загрузка объектов данных по массиву структур
            </summary>
            <param name="customizationStructs">массив структур</param>
            <param name="changeViewForTypeDelegate">делегат для изменения</param>
        </member>
        <member name="M:ICSSoft.STORMNET.Business.IDataService.LoadObjects(ICSSoft.STORMNET.Business.LoadingCustomizationStruct)">
            <summary>
            Загрузка объектов данных
            </summary>
            <param name="customizationStruct">настроичная структура для выборки<see cref="T:ICSSoft.STORMNET.Business.LoadingCustomizationStruct"/></param>
            <returns>результат запроса</returns>
        </member>
        <member name="M:ICSSoft.STORMNET.Business.IDataService.LoadObjects(ICSSoft.STORMNET.Business.LoadingCustomizationStruct,System.Object@)">
            <summary>
            Загрузка объектов данных
            </summary>
            <param name="customizationStruct">настроичная структура для выборки<see cref="T:ICSSoft.STORMNET.Business.LoadingCustomizationStruct"/></param>
            <param name="State">Состояние вычитки( для последующей дочитки )</param>
            <returns></returns>
        </member>
        <member name="M:ICSSoft.STORMNET.Business.IDataService.LoadObjects(System.Object@)">
            <summary>
            Загрузка объектов данных
            </summary>
            <param name="State">Состояние вычитки( для последующей дочитки)</param>
            <returns></returns>
        </member>
        <member name="M:ICSSoft.STORMNET.Business.IDataService.UpdateObject(ICSSoft.STORMNET.DataObject@)">
            <summary>
            Обновление объекта данных
            </summary>
            <param name="dobject">объект данных, который требуется обновить</param>
        </member>
        <member name="M:ICSSoft.STORMNET.Business.IDataService.UpdateObject(ICSSoft.STORMNET.DataObject@,System.Boolean)">
            <summary>
            Обновление объекта данных
            </summary>
            <param name="dobject">объект данных, который требуется обновить</param>
        </member>
        <member name="P:ICSSoft.STORMNET.Business.IDataService.CustomizationString">
            <summary>
            Строка настройки.
            </summary>
        </member>
        <member name="P:ICSSoft.STORMNET.Business.IDataService.TypeUsage">
            <summary>
            Сруктура определения <see cref="T:ICSSoft.STORMNET.TypeUsage"/>.
            </summary>
        </member>
        <member name="P:ICSSoft.STORMNET.Business.IDataService.SecurityManager">
            <summary>
            Менеджер полномочий.
            </summary>
        </member>
        <member name="T:ICSSoft.STORMNET.Business.Interfaces.InterfaceBusinessServer">
            <summary>
            Класс, содержащий бизнес-сервера для интерфейсов.
            </summary>
        </member>
        <member name="M:ICSSoft.STORMNET.Business.Interfaces.InterfaceBusinessServer.GetReferencedDataObjectsInfo(ICSSoft.STORMNET.DataObject)">
            <summary>
            Определяем набор объектов, для которых переданный является мастером.
            </summary>
            <param name="masterObject">Объект, для которого мы будем искать набор объектов, чьим мастером он является.</param>
            <returns>Набор объектов, для которых переданный является мастером.</returns>
        </member>
        <member name="M:ICSSoft.STORMNET.Business.Interfaces.InterfaceBusinessServer.FormViewOnReferencePropertyInfo(ICSSoft.STORMNET.Business.Interfaces.InterfaceBusinessServer.ReferencePropertyInfo)">
            <summary>
            Формируем представление, основываясь на информации о типе и необходимых в представлении свойств.
            </summary>
            <param name="referencePropertyInfo">Информации о типе и необходимых в представлении свойств.</param>
            <returns>Сформированное представление.</returns>
        </member>
        <member name="M:ICSSoft.STORMNET.Business.Interfaces.InterfaceBusinessServer.FormLimitFunctionOnReferencePropertyInfo(System.Collections.Generic.List{System.String},ICSSoft.STORMNET.DataObject)">
            <summary>
            Формируем функцию ограничения, с помощью которой можно выявить все объекты, которые имеют мастеровую ссылку на интересующий объект.
            </summary>
            <param name="referenceProperties">Список свойств, где может содержаться ссылка на искомого мастера.</param>
            <param name="masterObject">Мастер, на который мы ищем ссылки.</param>
            <returns>Сформированная функция ограничения.</returns>
        </member>
        <member name="M:ICSSoft.STORMNET.Business.Interfaces.InterfaceBusinessServer.NullifyMasterReferences(ICSSoft.STORMNET.DataObject,System.Collections.Generic.List{ICSSoft.STORMNET.DataObject},System.Collections.Generic.List{ICSSoft.STORMNET.Business.Interfaces.InterfaceBusinessServer.ReferencePropertyInfo})">
            <summary>
            Вместо ссылки на удаляемого мастера проставляем <c>null</c> в соответствующие свойства объектов.
            </summary>
            <param name="masterDataObject">Удаляемый объект, ссылки на который необходимо почистить.</param>
            <param name="referenceObjectList">Список объектов, из которых нужно почистить ссылки на мастера, заменив их на <c>null</c>.</param>
            <param name="referencePropertyInfos">Набор информации о классах, для которых переданный объект может являться мастером, и соответствующие свойства, которыми они могут ссылаться на мастера.</param>
        </member>
        <member name="M:ICSSoft.STORMNET.Business.Interfaces.InterfaceBusinessServer.OnUpdateIReferencesCascadeDelete(ICSSoft.STORMNET.Business.Interfaces.IReferencesCascadeDelete)">
            <summary>
            Обработчик событий удаления объекта, реализующего интерфейс <see cref="T:ICSSoft.STORMNET.Business.Interfaces.IReferencesCascadeDelete"/>.
            </summary>
            <param name="UpdatedObject">Текущий удаляемый объект.</param>
            <returns>Массив объектов, которые тоже необходимо подвергнуть удалению.</returns>
        </member>
        <member name="M:ICSSoft.STORMNET.Business.Interfaces.InterfaceBusinessServer.OnUpdateIReferencesNullDelete(ICSSoft.STORMNET.Business.Interfaces.IReferencesNullDelete)">
            <summary>
            Обработчик событий удаления объекта, реализующего интерфейс <see cref="T:ICSSoft.STORMNET.Business.Interfaces.IReferencesNullDelete"/>.
            </summary>
            <param name="UpdatedObject">Текущий удаляемый объект.</param>
            <returns>Массив изменённых объектов (вместо ссылки на удаляемый объект проставлено <c>null</c>), которые нужно сохранить.</returns>
        </member>
        <member name="M:ICSSoft.STORMNET.Business.Interfaces.InterfaceBusinessServer.GetReferencedDataObjects(ICSSoft.STORMNET.DataObject,System.Collections.Generic.List{ICSSoft.STORMNET.Business.Interfaces.InterfaceBusinessServer.ReferencePropertyInfo}@)">
            <summary>
            Получаем список объектов, которые ссылаются на указанный объект как на мастера.
            </summary>
            <param name="masterObject">Объект, ссылающиеся на который объекты мы будем искать.</param>
            <param name="referencePropertyInfos">Набор информации о классах, для которых переданный объект может являться мастером, и соответствующие свойства, которыми они могут ссылаться на мастера.</param>
            <returns>Список найденных объектов.</returns>
        </member>
        <member name="T:ICSSoft.STORMNET.Business.Interfaces.InterfaceBusinessServer.ReferencePropertyInfo">
            <summary>
            Вспомогательный класс для хранения информации о том, какие классы какие ссылки имеют на заданный мастеровой класс.
            </summary>
        </member>
        <member name="M:ICSSoft.STORMNET.Business.Interfaces.InterfaceBusinessServer.ReferencePropertyInfo.#ctor(System.Type,System.Collections.Generic.List{System.String})">
            <summary>
            Формируем структуру для хранения информации о том, какие классы какие ссылки имеют на заданный мастеровой класс.
            </summary>
            <param name="typeWithReference">Тип, в котором есть ссылки на мастеровой класс.</param>
            <param name="referenceProperties">Имена свойств, которыми тип ссылается на мастеровой класс.</param>
        </member>
        <member name="M:ICSSoft.STORMNET.Business.Interfaces.InterfaceBusinessServer.ReferencePropertyInfo.FormList(System.Reflection.Assembly,System.Type)">
            <summary>
            Формируем из предоставленной сборки соответствия между типом и списком свойства, которыми он ссылается на заданный мастеровой тип.
            </summary>
            <param name="assembly">Сборка, типы которой исследуются.</param>
            <param name="masterPropertyType">Тип, ссылки на который мы ищем.</param>
            <returns>Найденный список соответствий.</returns>
        </member>
        <member name="P:ICSSoft.STORMNET.Business.Interfaces.InterfaceBusinessServer.ReferencePropertyInfo.TypeWithReference">
            <summary>
            Тип, в котором есть ссылки на мастеровой класс.
            </summary>
        </member>
        <member name="P:ICSSoft.STORMNET.Business.Interfaces.InterfaceBusinessServer.ReferencePropertyInfo.ReferenceProperties">
            <summary>
            Имена свойств, которыми тип ссылается на мастеровой класс.
            </summary>
        </member>
        <member name="T:ICSSoft.STORMNET.Business.Interfaces.IReferencesCascadeDelete">
            <summary>
            Интерфейс, к которому привязан бизнес-сервер, выполняющий каскадное удаление объектов.
            </summary>
        </member>
        <member name="T:ICSSoft.STORMNET.Business.Interfaces.IReferencesNullDelete">
            <summary>
            Интерфейс, к которому привязан бизнес-сервер, выполняющий зануление ссылок на удаляемый объект.
            </summary>
        </member>
        <member name="T:ICSSoft.STORMNET.Business.LcsReturnType">
            <summary>
            Возвращаемое зачение LCS, пока типы прописаны явно, чтобы не было путаницы. В дальнейшем могут быть изменены на int вместо Count, bool вместо Any и т.д.
            </summary>
        </member>
        <member name="F:ICSSoft.STORMNET.Business.LcsReturnType.Objects">
            <summary>
            Несколько объектов
            </summary>
        </member>
        <member name="F:ICSSoft.STORMNET.Business.LcsReturnType.Object">
            <summary>
            Один объект
            </summary>
        </member>
        <member name="F:ICSSoft.STORMNET.Business.LcsReturnType.ObjectRequired">
            <summary>
            Один объект обязательно
            </summary>
        </member>
        <member name="F:ICSSoft.STORMNET.Business.LcsReturnType.Count">
            <summary>
            Количество
            </summary>
        </member>
        <member name="F:ICSSoft.STORMNET.Business.LcsReturnType.Any">
            <summary>
            Логический
            </summary>
        </member>
        <member name="F:ICSSoft.STORMNET.Business.LcsReturnType.All">
            <summary>
            Логический
            </summary>
        </member>
        <member name="T:ICSSoft.STORMNET.Business.LoadingCustomizationStruct">
            <summary>
            настройка загрузки группы объектов
            </summary>
        </member>
        <member name="M:ICSSoft.STORMNET.Business.LoadingCustomizationStruct.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Десереализация
            </summary>
            <param name="info"></param>
            <param name="context"></param>
        </member>
        <member name="M:ICSSoft.STORMNET.Business.LoadingCustomizationStruct.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Cереализация
            </summary>
            <param name="info"></param>
            <param name="context"></param>
        </member>
        <member name="M:ICSSoft.STORMNET.Business.LoadingCustomizationStruct.AddColumnSort(ICSSoft.STORMNET.Business.ColumnsSortDef)">
            <summary>
            Добавить сортировку
            </summary>
            <param name="csd">Сортировка</param>
        </member>
        <member name="M:ICSSoft.STORMNET.Business.LoadingCustomizationStruct.#ctor(System.Object)">
            <summary>
            
            </summary>
            <param name="creatorKey">ключ для идентификации вызова</param>
        </member>
        <member name="M:ICSSoft.STORMNET.Business.LoadingCustomizationStruct.Keys2Function(System.Object[])">
            <summary>
            Получить часто используемую функцию по ограничению
            </summary>
            <param name="keys"></param>
            <returns></returns>
        </member>
        <member name="M:ICSSoft.STORMNET.Business.LoadingCustomizationStruct.Init(ICSSoft.STORMNET.Business.ColumnsSortDef[],ICSSoft.STORMNET.FunctionalLanguage.Function,System.Type[],ICSSoft.STORMNET.View,System.String[])">
            <summary>
            
            </summary>
            <param name="ldColumnsSort">сортировка</param>
            <param name="ldLimitFunction">ограничение</param>
            <param name="ldLoadingTypes">загружаемые типы</param>
            <param name="ldView">представление</param>
            <param name="ldColumnsOrder">порядочек колонок</param>
        </member>
        <member name="M:ICSSoft.STORMNET.Business.LoadingCustomizationStruct.Init(ICSSoft.STORMNET.Business.ColumnsSortDef[],ICSSoft.STORMNET.FunctionalLanguage.Function,System.Type[],ICSSoft.STORMNET.View,ICSSoft.STORMNET.Business.AdvansedColumn[],System.String[])">
            <summary>
            
            </summary>
            <param name="ldColumnsSort">сортировка</param>
            <param name="ldLimitFunction">ограничение</param>
            <param name="ldLoadingTypes">загружаемые типы</param>
            <param name="ldView">представление</param>
            <param name="ldAdvansedColumns">дополнительные колонки</param>
            <param name="ldColumnsOrder">порядочек колонок</param>
        </member>
        <member name="P:ICSSoft.STORMNET.Business.LoadingCustomizationStruct.CreatorKey">
            <summary>
            кто его создал
            </summary>
        </member>
        <member name="P:ICSSoft.STORMNET.Business.LoadingCustomizationStruct.AdvansedColumns">
            <summary>
            Дополнительные колонки
            </summary>
        </member>
        <member name="P:ICSSoft.STORMNET.Business.LoadingCustomizationStruct.ColumnsOrder">
            <summary>
            порядок колонок в выборке
            </summary>
        </member>
        <member name="P:ICSSoft.STORMNET.Business.LoadingCustomizationStruct.ColumnsSort">
            <summary>
            сортировка колонок
            </summary>
        </member>
        <member name="P:ICSSoft.STORMNET.Business.LoadingCustomizationStruct.LimitFunction">
            <summary>
            ограничение на объекты
            </summary>
        </member>
        <member name="P:ICSSoft.STORMNET.Business.LoadingCustomizationStruct.LoadingTypes">
            <summary>
            вычитываем эти типы
            </summary>
        </member>
        <member name="P:ICSSoft.STORMNET.Business.LoadingCustomizationStruct.View">
            <summary>
            используемое представление
            </summary>
        </member>
        <member name="T:ICSSoft.STORMNET.Business.MasterObjStruct">
            <summary>
            Структура мастеров в выборке
            </summary>
        </member>
        <member name="M:ICSSoft.STORMNET.Business.MasterObjStruct.#ctor(System.Object,System.Type,System.String)">
            <summary>
            
            </summary>
            <param name="key">ключ мастера</param>
            <param name="objectType">тип мастера</param>
            <param name="propName">имя роли(свойства)</param>
        </member>
        <member name="M:ICSSoft.STORMNET.Business.MasterObjStruct.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            
            </summary>
            <param name="info"></param>
            <param name="context"></param>
        </member>
        <member name="M:ICSSoft.STORMNET.Business.MasterObjStruct.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            
            </summary>
            <param name="info"></param>
            <param name="context"></param>
        </member>
        <member name="P:ICSSoft.STORMNET.Business.MasterObjStruct.Key">
            <summary>
            Ключ мастера
            </summary>
        </member>
        <member name="P:ICSSoft.STORMNET.Business.MasterObjStruct.ObjectType">
            <summary>
            Тип мастера
            </summary>
        </member>
        <member name="P:ICSSoft.STORMNET.Business.MasterObjStruct.PropertyName">
            <summary>
            Имя роли мастера(наименование свойства)
            </summary>
        </member>
        <member name="T:ICSSoft.STORMNET.Business.ObjectStringDataView">
            <summary>
            В виде этой структуры приходят строковое предстваление объектов.
            </summary>
        </member>
        <member name="F:ICSSoft.STORMNET.Business.ObjectStringDataView.key">
            <summary>
            Приватное поле для свойства <see cref="P:ICSSoft.STORMNET.Business.ObjectStringDataView.Key"/>.
            </summary>
        </member>
        <member name="F:ICSSoft.STORMNET.Business.ObjectStringDataView.objectType">
            <summary>
            Приватное поле для свойства <see cref="P:ICSSoft.STORMNET.Business.ObjectStringDataView.ObjectType"/>.
            </summary>
        </member>
        <member name="F:ICSSoft.STORMNET.Business.ObjectStringDataView.objectedData">
            <summary>
            Приватное поле для свойства <see cref="P:ICSSoft.STORMNET.Business.ObjectStringDataView.ObjectedData"/>.
            </summary>
        </member>
        <member name="F:ICSSoft.STORMNET.Business.ObjectStringDataView.separator">
            <summary>
            Приватное поле для свойства <see cref="P:ICSSoft.STORMNET.Business.ObjectStringDataView.Separator"/>.
            </summary>
        </member>
        <member name="F:ICSSoft.STORMNET.Business.ObjectStringDataView.masters">
            <summary>
            Приватное поле для свойства <see cref="P:ICSSoft.STORMNET.Business.ObjectStringDataView.Masters"/>.
            </summary>
        </member>
        <member name="M:ICSSoft.STORMNET.Business.ObjectStringDataView.ConvertSimpleValueString(System.Object)">
            <summary>
            Преобразование простых типизированных данных в строку.
            </summary>
            <param name="value">Данные для преобразования.</param>
            <returns>Преобразованные в строку данные.</returns>
        </member>
        <member name="M:ICSSoft.STORMNET.Business.ObjectStringDataView.#ctor(System.Object,System.Type,System.Char,ICSSoft.STORMNET.Business.MasterObjStruct[],System.Object[])">
            <summary>
            Создать структуру строкового представления объекта данных.
            </summary>
            <param name="key">Ключ объекта.</param>
            <param name="objectType">Тип объекта.</param>
            <param name="separator">Разделитель в строке.</param>
            <param name="masters">Массив структур мастеров.</param>
            <param name="objectedData">Массив данных.</param>
        </member>
        <member name="M:ICSSoft.STORMNET.Business.ObjectStringDataView.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Конструктор десериализации.
            </summary>
            <param name="info">Информация для десериализации.</param>
            <param name="context">Контекст десериализации.</param>
        </member>
        <member name="M:ICSSoft.STORMNET.Business.ObjectStringDataView.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Метод сериализации.
            </summary>
            <param name="info">Информация для сериализации.</param>
            <param name="context">Контест сериализации.</param>
        </member>
        <member name="P:ICSSoft.STORMNET.Business.ObjectStringDataView.Masters">
            <summary>
            Мастера (связанные обьекты).
            </summary>
        </member>
        <member name="P:ICSSoft.STORMNET.Business.ObjectStringDataView.Key">
            <summary>
            Ключ объекта.
            </summary>
        </member>
        <member name="P:ICSSoft.STORMNET.Business.ObjectStringDataView.Separator">
            <summary>
            Разделитель в строке.
            </summary>
        </member>
        <member name="P:ICSSoft.STORMNET.Business.ObjectStringDataView.ObjectType">
            <summary>
            Тип объекта.
            </summary>
        </member>
        <member name="P:ICSSoft.STORMNET.Business.ObjectStringDataView.Data">
            <summary>
            Строковое представление. Геттер данного свойства выполняет логику построения строки из сырых данных, поэтому не вызывайте его лишний раз.
            </summary>
        </member>
        <member name="P:ICSSoft.STORMNET.Business.ObjectStringDataView.ObjectedData">
            <summary>
            Массив с данными.
            </summary>
        </member>
        <member name="T:ICSSoft.STORMNET.Business.RowNumberDef">
            <summary>
            Структура для указания начала и конца страницы для вычитки
            </summary>
        </member>
        <member name="M:ICSSoft.STORMNET.Business.RowNumberDef.#ctor(System.Int32,System.Int32)">
            <summary>
            Конструктор
            </summary>
            <param name="StartRow">Загрузим с объекта (включительно)</param>
            <param name="EndRow">Загрузим до объекта (включительно)</param>
        </member>
        <member name="M:ICSSoft.STORMNET.Business.RowNumberDef.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Десереализация
            </summary>
            <param name="info"></param>
            <param name="context"></param>
        </member>
        <member name="P:ICSSoft.STORMNET.Business.RowNumberDef.StartRow">
            <summary>
            Со строчки номер
            </summary>
        </member>
        <member name="P:ICSSoft.STORMNET.Business.RowNumberDef.EndRow">
            <summary>
            По строчку номер
            </summary>
        </member>
        <member name="T:ICSSoft.STORMNET.Business.Audit.RemoteAuditController">
            <summary>
            Класс для организации доcтупа к сервису аудита через wcf
            </summary>
        </member>
        <member name="F:ICSSoft.STORMNET.Business.Audit.RemoteAuditController._channelFactory">
            <summary>
            Фабрика каналов для связи.
            </summary>
        </member>
        <member name="F:ICSSoft.STORMNET.Business.Audit.RemoteAuditController._service">
            <summary>
            Экземпляр wcf-сервиса аудита.
            </summary>
        </member>
        <member name="F:ICSSoft.STORMNET.Business.Audit.RemoteAuditController._cashedUri">
            <summary>
            Закешированное значение адреса, где располагается сервис 
            (используется, чтобы не пересоздавать подключение к сервису).
            </summary>
        </member>
        <member name="M:ICSSoft.STORMNET.Business.Audit.RemoteAuditController.WriteAuditOperation(ICSSoft.STORMNET.Business.Audit.AuditParameters,System.String)">
            <summary>
            Провести аудит операции
            </summary>
            <param name="auditParameters">Параметры аудита</param>
            <param name="uri">Адрес, где располагается сервис аудита</param>
            <returns>Guid записи аудита</returns>
        </member>
        <member name="M:ICSSoft.STORMNET.Business.Audit.RemoteAuditController.RatifyAuditOperation(ICSSoft.STORMNET.Business.Audit.RatificationAuditParameters,System.String)">
            <summary>
            Провести подтверждение операции аудита
            </summary>
            <param name="ratificationAuditParameters">
            Параметры аудита
            </param>
            <param name="uri">
            Адрес, где располагается сервис аудита
            </param>
            <returns>
            True, если подтверждение выполнено успешно
            </returns>
        </member>
        <member name="M:ICSSoft.STORMNET.Business.Audit.RemoteAuditController.CreateWcfService(System.String)">
            <summary>
            Создание экземпляра соединения с wcf-сервисом
            </summary>
            <param name="uri">
            Адрес, где располагается wcf-сервис
            </param>
        </member>
        <member name="T:ICSSoft.STORMNET.Business.SortOrder">
            <summary>
            Как сортировать.
            </summary>
        </member>
        <member name="F:ICSSoft.STORMNET.Business.SortOrder.None">
            <summary>
            Не надо сортировать.
            </summary>
        </member>
        <member name="F:ICSSoft.STORMNET.Business.SortOrder.Asc">
            <summary>
            По возрастанию.
            </summary>
            
        </member>
        <member name="F:ICSSoft.STORMNET.Business.SortOrder.Desc">
            <summary>
            По убыванию.
            </summary>
        </member>
        <member name="T:ICSSoft.STORMNET.Business.OnCreateCommandEventHandler">
            <summary>
            Делегат для события создания команды.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="T:ICSSoft.STORMNET.Business.OnGenerateSQLSelectEventHandler">
            <summary>
            Событие при генерации SQL Select запроса (перед).
            </summary>
        </member>
        <member name="T:ICSSoft.STORMNET.Business.AfterGenerateSQLSelectQueryEventHandler">
            <summary>
            Событие при генерации SQL Select запроса (после).
            </summary>
        </member>
        <member name="T:ICSSoft.STORMNET.Business.BeforeUpdateObjectsEventHandler">
            <summary>
            The before update objects event handler.
            </summary>
            <param name="sender">
            The sender.
            </param>
            <param name="e">
            The e.
            </param>
        </member>
        <member name="T:ICSSoft.STORMNET.Business.AfterUpdateObjectsEventHandler">
            <summary>
            The after update objects event handler.
            </summary>
            <param name="sender">
            The sender.
            </param>
            <param name="e">
            The e.
            </param>
        </member>
        <member name="T:ICSSoft.STORMNET.Business.SQLDataService">
            <summary>
            Data service for SQL storage.
            </summary>
            <summary>
            Data service for SQL storage.
            </summary>
        </member>
        <member name="F:ICSSoft.STORMNET.Business.SQLDataService.prvInstanceId">
            <summary>
            The prv instance id.
            </summary>
        </member>
        <member name="F:ICSSoft.STORMNET.Business.SQLDataService.prvStorageType">
            <summary>
            The prv storage type.
            </summary>
        </member>
        <member name="M:ICSSoft.STORMNET.Business.SQLDataService.GetInstanceId">
            <summary>
            Ключ инстанции сервиса.
            </summary>
            <returns>Instance key.</returns>
        </member>
        <member name="M:ICSSoft.STORMNET.Business.SQLDataService.GetConnection">
            <summary>
            Вернуть объект <see cref="T:System.Data.IDbConnection"/>
            </summary>
            <returns>Коннекция к БД</returns>
        </member>
        <member name="F:ICSSoft.STORMNET.Business.SQLDataService.ChangeCustomizationString">
            <summary>
            Делегат для смены строки соединения
            </summary>
        </member>
        <member name="M:ICSSoft.STORMNET.Business.SQLDataService.GetObjectsCount(ICSSoft.STORMNET.Business.LoadingCustomizationStruct)">
            <summary>
            Возвращает количество объектов удовлетворяющих запросу
            </summary>
            <param name="customizationStruct">
            Что выбираем
            </param>
            <returns>
            </returns>
        </member>
        <member name="M:ICSSoft.STORMNET.Business.SQLDataService.ApplyReadPermissions(ICSSoft.STORMNET.Business.LoadingCustomizationStruct,ICSSoft.STORMNET.Security.ISecurityManager)">
            <summary>
            Применение полномочий на чтение строк.
            </summary>
            <param name="customizationStruct">Настройка выборки, которая будет изменена.</param>
            <param name="securityManager">Менеджер полномочий.</param>
        </member>
        <member name="M:ICSSoft.STORMNET.Business.SQLDataService.GetObjectIndex(ICSSoft.STORMNET.Business.LoadingCustomizationStruct,ICSSoft.STORMNET.FunctionalLanguage.Function)">
            <summary>
            Возвращает индекс первого объекта, встретившегося в массиве, 
            при загрузке по указанному lcs. Объекты задаются через lf.
            </summary>
            <param name="lcs">Массив, в котором ищем.</param>
            <param name="limitFunction">Что собственно ищем.</param>
            <returns>Индекс первого элемента, если он был найден. Иначе -1.</returns>
        </member>
        <member name="M:ICSSoft.STORMNET.Business.SQLDataService.GetObjectIndexes(ICSSoft.STORMNET.Business.LoadingCustomizationStruct,ICSSoft.STORMNET.FunctionalLanguage.Function)">
            <summary>
            Возвращает индексы объектов, встретившихся в массиве,
            при загрузке по указанному lcs. Объекты задаются через lf.
            </summary>
            <param name="lcs">Массив, в котором ищем.</param>
            <param name="limitFunction">Функция ограничения, определяющая искомые объекты.</param>
            <returns>Массив индексов найденных объектов. Не возвращает null.</returns>
        </member>
        <member name="M:ICSSoft.STORMNET.Business.SQLDataService.GetObjectIndexesWithPks(ICSSoft.STORMNET.Business.LoadingCustomizationStruct,ICSSoft.STORMNET.FunctionalLanguage.Function,System.Nullable{System.Int32})">
            <summary>
            Возвращает индексы и ключи объектов, встретившихся в массиве,
            при загрузке по указанному lcs. Объекты задаются через lf.
            </summary>
            <param name="lcs">Массив, в котором ищем.</param>
            <param name="limitFunction">Функция ограничения, определяющая искомые объекты.</param>
            <param name="maxResults">
            Максимальное число возвращаемых результатов.
            Этот параметр не соответствует <code>lcs.ReturnTop</code>, а устанавливает максимальное число
            искомых объектов, тогда как <code>lcs.ReturnTop</code> ограничивает число объектов, в которых
            проводится поиск.
            Если значение не определено (<c>null</c>), то возвращаются все найденные результаты.
            </param>
            <returns>
            Массив индексов найденных объектов. Не возвращает null.
            </returns>
        </member>
        <member name="M:ICSSoft.STORMNET.Business.SQLDataService.#ctor">
            <summary>
            Construct data service with default settings.
            </summary>
        </member>
        <member name="M:ICSSoft.STORMNET.Business.SQLDataService.#ctor(ICSSoft.STORMNET.Security.ISecurityManager)">
            <summary>
            Construct data service with security manager instance.
            </summary>
            <param name="securityManager">Security manager instance.</param>
        </member>
        <member name="M:ICSSoft.STORMNET.Business.SQLDataService.LoadObject(ICSSoft.STORMNET.DataObject,System.Boolean,System.Boolean,ICSSoft.STORMNET.DataObjectCache)">
            <summary>
            Загрузка одного объекта данных
            </summary>
            <param name="dobject">объект данных, который требуется загрузить</param>
            <param name="ClearDataObject">очищать ли объект</param>
            <param name="CheckExistingObject">проверять ли существование объекта в хранилище</param>
        </member>
        <member name="M:ICSSoft.STORMNET.Business.SQLDataService.LoadObject(System.String,ICSSoft.STORMNET.DataObject,System.Boolean,System.Boolean,ICSSoft.STORMNET.DataObjectCache)">
            <summary>
            Загрузка одного объекта данных
            </summary>
            <param name="dataObjectViewName">наименование представления</param>
            <param name="dobject">бъект данных, который требуется загрузить</param>
            <param name="ClearDataObject">очищать ли объект</param>
            <param name="CheckExistingObject">проверять ли существование объекта в хранилище</param>
        </member>
        <member name="M:ICSSoft.STORMNET.Business.SQLDataService.LoadObject(ICSSoft.STORMNET.View,ICSSoft.STORMNET.DataObject,ICSSoft.STORMNET.DataObjectCache)">
            <summary>
            Загрузка одного объекта данных
            </summary>
            <param name="dataObjectView">представление объекта</param>
            <param name="dobject">объект данных, который требуется загрузить</param>
        </member>
        <member name="M:ICSSoft.STORMNET.Business.SQLDataService.LoadObjectByExtConn(ICSSoft.STORMNET.View,ICSSoft.STORMNET.DataObject,System.Boolean,System.Boolean,ICSSoft.STORMNET.DataObjectCache,System.Data.IDbConnection,System.Data.IDbTransaction)">
            <summary>
            Загрузка объекта с указанной коннекцией в рамках указанной транзакции.
            </summary>
            <param name="dataObjectView">Представление, по которому будет зачитываться объект.</param>
            <param name="dobject">Объект, который будет дочитываться/зачитываться.</param>
            <param name="сlearDataObject">Следует ли при зачитке очистить поля существующего объекта данных.</param>
            <param name="сheckExistingObject">Проверить существовние встречающихся при зачитке объектов.</param>
            <param name="dataObjectCache">Кэш объектов.</param>
            <param name="connection">Коннекция, через которую будет происходить зачитка.</param>
            <param name="transaction">Транзакция, в рамках которой будет проходить зачитка.</param>
        </member>
        <member name="M:ICSSoft.STORMNET.Business.SQLDataService.LoadObject(ICSSoft.STORMNET.View,ICSSoft.STORMNET.DataObject,System.Boolean,System.Boolean,ICSSoft.STORMNET.DataObjectCache)">
            <summary>
            Загрузка одного объекта данных
            </summary>
            <param name="dataObjectView">представление</param>
            <param name="dobject">бъект данных, который требуется загрузить</param>
            <param name="ClearDataObject">очищать ли объект</param>
            <param name="CheckExistingObject">проверять ли существование объекта в хранилище</param>
        </member>
        <member name="M:ICSSoft.STORMNET.Business.SQLDataService.SecondLoadObject(ICSSoft.STORMNET.View,ICSSoft.STORMNET.DataObject,System.Boolean,ICSSoft.STORMNET.DataObjectCache)">
            <summary>
            Метод для дочитки объекта данных. Загруженные ранее свойства не затираются, изменённые свойства не затираются. Подменяются поштучно свойства копии данных. TODO: дописать тесты, проверить и сделать публичным
            </summary>
            <param name="dataObjectView">представление</param>
            <param name="dataObject">бъект данных, который требуется загрузить</param>
            <param name="checkExistingObject">проверять ли существование объекта в хранилище</param>
            <param name="dataObjectCache"></param>
        </member>
        <member name="M:ICSSoft.STORMNET.Business.SQLDataService.PrvSecondLoadObject(ICSSoft.STORMNET.View,ICSSoft.STORMNET.DataObject,System.Boolean,ICSSoft.STORMNET.DataObjectCache,ICSSoft.STORMNET.DataObject)">
            <summary>
            Метод для дочитки объекта данных. Загруженные ранее свойства не затираются, изменённые свойства не затираются. Подменяются поштучно свойства копии данных. 
            </summary>
            <param name="dataObjectView">представление</param>
            <param name="dataObject">бъект данных, который требуется загрузить</param>
            <param name="checkExistingObject">проверять ли существование объекта в хранилище</param>
            <param name="dataObjectCache"></param>
            <param name="dataObjectFromDB"></param>
        </member>
        <member name="M:ICSSoft.STORMNET.Business.SQLDataService.LoadObject(System.String,ICSSoft.STORMNET.DataObject,ICSSoft.STORMNET.DataObjectCache)">
            <summary>
            Загрузка одного объекта данных
            </summary>
            <param name="dataObjectViewName">имя представления объекта</param>
            <param name="dobject">объект данных, который требуется загрузить</param>
        </member>
        <member name="M:ICSSoft.STORMNET.Business.SQLDataService.LoadObject(ICSSoft.STORMNET.DataObject,ICSSoft.STORMNET.DataObjectCache)">
            <summary>
            Загрузка одного объекта данных
            </summary>
            <param name="dobject">объект данных, который требуется загрузить</param>
        </member>
        <member name="M:ICSSoft.STORMNET.Business.SQLDataService.GenerateSQLSelect(ICSSoft.STORMNET.Business.LoadingCustomizationStruct,System.Boolean,ICSSoft.STORMNET.Business.StorageStructForView[]@,System.Boolean)">
            <summary>
            получить запрос на вычитку данных
            </summary>
            <param name="customizationStruct">настройка выборки</param>
            <param name="StorageStruct">возвращается соответствующая структура выборки</param>
            <returns>запрос</returns>
        </member>
        <member name="M:ICSSoft.STORMNET.Business.SQLDataService.GenerateSQLSelect(ICSSoft.STORMNET.Business.LoadingCustomizationStruct,System.Boolean)">
            <summary>
            получить запрос на вычитку данных
            </summary>
            <param name="customizationStruct">настройка выборки</param>
            <returns>запрос</returns>
        </member>
        <member name="M:ICSSoft.STORMNET.Business.SQLDataService.LoadObjects(ICSSoft.STORMNET.Business.LoadingCustomizationStruct,ICSSoft.STORMNET.DataObjectCache)">
            <summary>
            Загрузка объектов данных
            </summary>
            <param name="customizationStruct">настроичная структура для выборки<see cref="T:ICSSoft.STORMNET.Business.LoadingCustomizationStruct"/></param>
            <returns></returns>
        </member>
        <member name="M:ICSSoft.STORMNET.Business.SQLDataService.LoadObjects(ICSSoft.STORMNET.DataObject[],ICSSoft.STORMNET.View,System.Boolean,ICSSoft.STORMNET.DataObjectCache)">
            <summary>
            Загрузка объектов данных
            </summary>
            <param name="dataobjects">исходные объекты</param>
            <param name="dataObjectView">представлене</param>
            <param name="ClearDataobject">очищать ли существующие</param>
        </member>
        <member name="M:ICSSoft.STORMNET.Business.SQLDataService.LoadObjects(ICSSoft.STORMNET.View)">
            <summary>
            Загрузка объектов данных по представлению
            </summary>
            <param name="dataObjectView">представление</param>
        </member>
        <member name="M:ICSSoft.STORMNET.Business.SQLDataService.LoadObjects(ICSSoft.STORMNET.View[])">
            <summary>
            Загрузка объектов данных по массиву представлений
            </summary>
            <param name="dataObjectViews">массив представлений</param>
        </member>
        <member name="M:ICSSoft.STORMNET.Business.SQLDataService.LoadObjects(ICSSoft.STORMNET.Business.LoadingCustomizationStruct[])">
            <summary>
            Загрузка объектов данных по массиву структур
            </summary>
            <param name="customizationStructs">массив структур</param>
        </member>
        <member name="M:ICSSoft.STORMNET.Business.SQLDataService.LoadObjectsByExtConn(ICSSoft.STORMNET.Business.LoadingCustomizationStruct,System.Object@,ICSSoft.STORMNET.DataObjectCache,System.Data.IDbConnection,System.Data.IDbTransaction)">
            <summary>
            Загрузка объектов с использованием указанной коннекции и транзакции.
            </summary>
            <param name="customizationStruct">Структура, определяющая, что и как грузить.</param>
            <param name="state"> </param> 
            <param name="dataObjectCache">Кэш объектов для зачитки.</param>
            <param name="connection">Коннекция, через которую будут выполнена зачитска.</param>
            <param name="transaction">Транзакция, в рамках которой будет выполнена зачитка.</param>
            <returns>Загруженные данные.</returns>
        </member>
        <member name="M:ICSSoft.STORMNET.Business.SQLDataService.LoadObjects(ICSSoft.STORMNET.Business.LoadingCustomizationStruct,System.Object@,ICSSoft.STORMNET.DataObjectCache)">
            <summary>
            Загрузка объектов данных
            </summary>
            <param name="customizationStruct">настроичная структура для выборки<see cref="T:ICSSoft.STORMNET.Business.LoadingCustomizationStruct"/></param>
            <param name="State">Состояние вычитки( для последующей дочитки )</param>
            <returns></returns>
        </member>
        <member name="M:ICSSoft.STORMNET.Business.SQLDataService.LoadObjects(ICSSoft.STORMNET.View,ICSSoft.STORMNET.Business.ChangeViewForTypeDelegate)">
            <summary>
            Загрузка объектов данных по представлению
            </summary>
            <param name="dataObjectView">представление</param>
            <param name="changeViewForTypeDelegate">делегат</param>
        </member>
        <member name="M:ICSSoft.STORMNET.Business.SQLDataService.LoadObjects(ICSSoft.STORMNET.View[],ICSSoft.STORMNET.Business.ChangeViewForTypeDelegate)">
            <summary>
            Загрузка объектов данных по массиву представлений
            </summary>
            <param name="dataObjectViews">массив представлений</param>
            <param name="changeViewForTypeDelegate">делегат</param>
        </member>
        <member name="M:ICSSoft.STORMNET.Business.SQLDataService.LoadObjects(ICSSoft.STORMNET.Business.LoadingCustomizationStruct[],ICSSoft.STORMNET.Business.ChangeViewForTypeDelegate)">
            <summary>
            Загрузка объектов данных по массиву структур
            </summary>
            <param name="customizationStructs">массив структур</param>
            <param name="changeViewForTypeDelegate">делегат</param>
        </member>
        <member name="M:ICSSoft.STORMNET.Business.SQLDataService.LoadObjects(System.Object@,ICSSoft.STORMNET.DataObjectCache)">
            <summary>
            Загрузка объектов данных
            </summary>
            <param name="State">Состояние вычитки( для последующей дочитки)</param>
            <returns></returns>
        </member>
        <member name="M:ICSSoft.STORMNET.Business.SQLDataService.ReadFirst(System.String,System.Object@,System.Int32)">
            <summary>
            Вычитка первой партии данных
            </summary>
            <param name="Query"></param>
            <param name="State"></param>
            <returns></returns>
        </member>
        <member name="M:ICSSoft.STORMNET.Business.SQLDataService.ReadNext(System.Object@,System.Int32)">
            <summary>
            Вычитка следующей порции данных
            </summary>
            <param name="State"></param>
            <returns></returns>
        </member>
        <member name="M:ICSSoft.STORMNET.Business.SQLDataService.ExecuteNonQuery(System.String)">
            <summary>
            Выполнить запрос
            </summary>
            <param name="Query">SQL запрос</param>
            <returns>количество задетых строк</returns>
        </member>
        <member name="M:ICSSoft.STORMNET.Business.SQLDataService.GetLeftJoinExpression(System.String,System.String,System.String,System.String,System.String,System.String,System.String@,System.String@)">
            <summary>
            получить LeftJoin выражение
            </summary>
            <param name="subTable">имя таблицы</param>
            <param name="subTableAlias">псевдоним таблицы</param>
            <param name="parentAliasWithKey"></param>
            <param name="subTableKey"></param>
            <param name="subJoins"></param>
            <param name="baseOutline"></param>
            <returns></returns>
        </member>
        <member name="M:ICSSoft.STORMNET.Business.SQLDataService.GetInnerJoinExpression(System.String,System.String,System.String,System.String,System.String,System.String,System.String@,System.String@)">
            <summary>
            получить InnerJoin выражение
            </summary>
            <param name="subTable"></param>
            <param name="subTableAlias"></param>
            <param name="parentAliasWithKey"></param>
            <param name="subTableKey"></param>
            <param name="subJoins"></param>
            <param name="baseOutline"></param>
            <param name="FromPart"></param>
            <param name="WherePart"></param>
        </member>
        <member name="M:ICSSoft.STORMNET.Business.SQLDataService.GetJoinTableModifierExpression">
            <summary>
            Вернуть модификатор для обращения к таблице (напр WITH (NOLOCK))
            Можно перегрузить этот метод в сервисе данных-наследнике 
            для возврата соответствующего своего модификатора.
            Базовый <see cref="T:ICSSoft.STORMNET.Business.SQLDataService"/> возвращает пустую строку.
            </summary>
            <returns>""</returns>
        </member>
        <member name="M:ICSSoft.STORMNET.Business.SQLDataService.GetINExpression(System.String[])">
            <summary>
            Вернуть in выражение для where 
            </summary>
            <param name="identifiers">идентифткаторы</param>
            <returns></returns>
        </member>
        <member name="M:ICSSoft.STORMNET.Business.SQLDataService.GetIfNullExpression(System.String[])">
            <summary>
            Вернуть ifnull выражение
            </summary>
            <param name="identifiers">идентифткаторы</param>
            <returns></returns>
        </member>
        <member name="M:ICSSoft.STORMNET.Business.SQLDataService.PutIdentifierIntoBrackets(System.String)">
            <summary>
            Офромить идентификатор
            </summary>
            <param name="identifier">идентификатор</param>
            <returns>оформленный идентификатор(например в кавычках)</returns>
        </member>
        <member name="M:ICSSoft.STORMNET.Business.SQLDataService.CreateJoins(ICSSoft.STORMNET.Business.StorageStructForView.PropSource,System.String,System.Int32,System.Collections.ArrayList,System.String,System.Int32@,System.String@,System.String@)">
            <summary>
            создать join соединения
            </summary>
            <param name="source">источник с которого формируется соединение</param>
            <param name="parentAlias">вышестоящий алиас</param>
            <param name="index">индекс источника</param>
            <param name="keysandtypes">ключи и типы</param>
            <param name="baseOutline">смещение в запросе</param>
            <param name="joinscount">количество соединений</param>
            <returns></returns>
        </member>
        <member name="M:ICSSoft.STORMNET.Business.SQLDataService.CreateJoins(ICSSoft.STORMNET.Business.StorageStructForView.PropSource,System.String,System.Int32,System.Collections.ArrayList,System.String,System.Int32@,System.String@,System.String@,System.Boolean)">
            <summary>
            создать join соединения
            </summary>
            <param name="source">источник с которого формируется соединение</param>
            <param name="parentAlias">вышестоящий алиас</param>
            <param name="index">индекс источника</param>
            <param name="keysandtypes">ключи и типы</param>
            <param name="baseOutline">смещение в запросе</param>
            <param name="joinscount">количество соединений</param>
            <returns></returns>
        </member>
        <member name="M:ICSSoft.STORMNET.Business.SQLDataService.TranslateExpression(System.String,System.String,System.String,System.Boolean@)">
            <summary>
            преобразовать выражение с учетом
            </summary>
            <param name="expression"></param>
            <param name="namespacewithpoint"></param>
            <returns></returns>
        </member>
        <member name="M:ICSSoft.STORMNET.Business.SQLDataService.GenerateSQLSelectByStorageStruct(ICSSoft.STORMNET.Business.StorageStructForView,System.Boolean,System.Boolean,System.String,System.Int32,System.Boolean)">
            <summary>
            Получение SQL запроса в следующем формате
            SELECT
            	atr1,atr2, ...  atr3,
            	Key1,Key2, ...  key3
            FROM
            	fromjoins
            </summary>
            <param name="storageStruct">структура хранилища</param>
            <param name="AddingAdvansedField">довленные дополнительные свойства</param>
            <param name="AddingKeysCount">добавленниые ключи</param>
            <param name="addMasterFieldsCustomizer"></param>
            <param name="addNotMainKeys"></param>
            <param name="SelectTypesIds"></param>
            <returns></returns>
        </member>
        <member name="M:ICSSoft.STORMNET.Business.SQLDataService.ConvertSimpleValueToQueryValueString(System.Object)">
            <summary>
            конвертация константных значений в строки запроса
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:ICSSoft.STORMNET.Business.SQLDataService.ConvertValueToQueryValueString(System.Object)">
            <summary>
            конвертация значений в строки запроса
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:ICSSoft.STORMNET.Business.SQLDataService.ConvertValueToQueryValueString(ICSSoft.STORMNET.DataObject,System.String)">
            <summary>
            Преобразование значение свойства в строку для запроса
            </summary>
            <param name="dataobject"></param>
            <param name="propname"></param>
            <returns></returns>
        </member>
        <member name="M:ICSSoft.STORMNET.Business.SQLDataService.LimitFunction2SQLWhere(ICSSoft.STORMNET.FunctionalLanguage.Function,ICSSoft.STORMNET.Business.StorageStructForView[],System.String[],System.Boolean)">
            <summary>
            Преобразование функции 
            </summary>
            <param name="LimitFunction"></param>
            <returns></returns>
        </member>
        <member name="M:ICSSoft.STORMNET.Business.SQLDataService.LimitFunction2SQLWhere(ICSSoft.STORMNET.FunctionalLanguage.Function)">
            <summary>
            Преобразование функции 
            </summary>
            <param name="LimitFunction"></param>
            <returns></returns>
        </member>
        <member name="M:ICSSoft.STORMNET.Business.SQLDataService.LoadStringedObjectView(System.Char,ICSSoft.STORMNET.Business.LoadingCustomizationStruct)">
             <summary>
            Загрузка без создания объектов
             </summary>
             <param name="separator">разделитель в строках</param>
             <param name="customizationStruct">настроичная структура для выборки<see cref="T:ICSSoft.STORMNET.Business.LoadingCustomizationStruct"/></param>
             <returns>массив структур <see cref="T:ICSSoft.STORMNET.Business.ObjectStringDataView"/></returns>
        </member>
        <member name="M:ICSSoft.STORMNET.Business.SQLDataService.LoadStringedObjectView(System.Char,ICSSoft.STORMNET.Business.LoadingCustomizationStruct,System.Object@)">
            <summary>
            Загрузка без создания объектов
            </summary>
            <param name="separator">разделитель в строках</param>
            <param name="customizationStruct"></param>
            <param name="State"></param>
            <returns></returns>
        </member>
        <member name="M:ICSSoft.STORMNET.Business.SQLDataService.LoadRawValues(ICSSoft.STORMNET.Business.LoadingCustomizationStruct)">
            <summary>
            Загрузка без создания объектов
            </summary>
            <param name="customizationStruct"></param>
            <returns></returns>
        </member>
        <member name="M:ICSSoft.STORMNET.Business.SQLDataService.LoadStringedObjectView(System.Object@)">
            <summary>
            
            </summary>
        </member>
        <member name="M:ICSSoft.STORMNET.Business.SQLDataService.CompleteLoadStringedObjectView(System.Object@)">
            <summary>
            Корректное завершения операции порционного чтения LoadStringedObjectView.
            </summary>
            <param name="state">Параметр состояния загрузки (массив объектов).</param>
        </member>
        <member name="M:ICSSoft.STORMNET.Business.SQLDataService.UpdateObject(ICSSoft.STORMNET.DataObject@,ICSSoft.STORMNET.DataObjectCache,System.Boolean)">
            <summary>
            Обновление объекта данных
            </summary>
            <param name="dobject">объект данных, который требуется обновить</param>
        </member>
        <member name="M:ICSSoft.STORMNET.Business.SQLDataService.UpdateObject(ICSSoft.STORMNET.DataObject,ICSSoft.STORMNET.DataObjectCache)">
            <summary>
            Обновление объекта данных
            </summary>
            <param name="dobject">объект данных, который требуется обновить</param>
        </member>
        <member name="M:ICSSoft.STORMNET.Business.SQLDataService.UpdateObject(ICSSoft.STORMNET.DataObject,System.Boolean)">
            <summary>
            Обновление объекта данных
            </summary>
            <param name="dobject">объект данных, который требуется обновить</param>
        </member>
        <member name="M:ICSSoft.STORMNET.Business.SQLDataService.GetAlteredPropsWithValues(ICSSoft.STORMNET.DataObject,System.Boolean,ICSSoft.STORMNET.Collections.CaseSensivityStringDictionary@,ICSSoft.STORMNET.DataObject[]@,ICSSoft.STORMNET.DataObject[]@,System.Boolean)">
            <summary>
            Возвращает измененные данные со значениями
            </summary>
            <param name="dobject">у кого проверяем</param>
            <param name="CheckLoadedProps">проверять ли загруженность измененных свойств</param>
            <param name="propsWithValues">пары свойство-значение</param>
            <param name="detailObjects">вычисленные измененные объекты</param>
            <param name="ReturnPropStorageNames">возвращать ли не сами свойства а их хранилища</param>
        </member>
        <member name="M:ICSSoft.STORMNET.Business.SQLDataService.AddDeletedObjectToDeleteDictionary(ICSSoft.STORMNET.DataObject,ICSSoft.STORMNET.FunctionalLanguage.Function,System.Collections.SortedList,System.Collections.Specialized.StringCollection,System.Collections.Specialized.StringCollection,System.Collections.SortedList,System.Collections.Specialized.StringCollection)">
            <summary>
            Удаляемые объекты особым образом добавляются в словарь
            </summary>
            <param name="dobject">
            Удаляемый объект
            </param>
            <param name="UpdaterFunction">
            Функция обновления
            </param>
            <param name="DeleteList">
            Соответствие между таблицей и первичными ключами удаляемых объектов
            </param>
            <param name="DeleteOrder">
            The delete order.
            </param>
            <param name="DeleteTables">
            The delete tables.
            </param>
            <param name="TableOperations">
            The table operations.
            </param>
            <param name="QueryOrder">
            The query order.
            </param>
        </member>
        <member name="M:ICSSoft.STORMNET.Business.SQLDataService.AddDeletedViewToDeleteDictionary(ICSSoft.STORMNET.View,ICSSoft.STORMNET.Collections.CaseSensivityStringDictionary,System.Object,System.Collections.Specialized.StringCollection,ICSSoft.STORMNET.DataObject[]@,System.Collections.Specialized.StringCollection,System.Collections.SortedList,System.Collections.Specialized.StringCollection,ICSSoft.STORMNET.DataObjectCache)">
            <summary>
            У основного представления есть связь на представление на детейлы. Часть из них вообще не загружалась, данная функция обрабатывает как раз их.
            Данная функция либо возвращает объекты детейлов, если есть навешенные на них бизнес-сервера,
            иначе формирует запрос на удаление всех детейлов определённого типа у объекта
            </summary>
            <param name="view">
            Представление, соответствующее детейлу
            </param>
            <param name="DeleteDictionary">
            The delete dictionary.
            </param>
            <param name="mainkey">
            Первичный ключ агрегатора детейлов
            </param>
            <param name="DeleteOrder">
            The delete order.
            </param>
            <param name="updateobjects">
            Детейлы, на которые навешены бизнес-сервера
            (соответственно, их массово удалить нельзя, необходимо каждый пропустить через бизнес-сервер)
            </param>
            <param name="DeleteTables">
            The delete tables.
            </param>
            <param name="TableOperations">
            The table operations.
            </param>
            <param name="QueryOrder">
            The query order.
            </param>
            <param name="DataObjectCache">
            The data object cache.
            </param>
            <param name="processingObjectsKeys">
            Ключи обрабатываемых объектов
            (список содержит первичные ключи объектов, которые уже попали в список на обновление)
            </param>
            <returns>
            Набор объектов, которые необходимо занести в аудит
            </returns>
        </member>
        <member name="M:ICSSoft.STORMNET.Business.SQLDataService.AddToProcessingObjectsKeys(System.Collections.Generic.Dictionary{ICSSoft.STORMNET.TypeKeyPair,System.Boolean},ICSSoft.STORMNET.DataObject)">
            <summary>
            Добавление в словаре обрабатываемых объектов.
            </summary>
            <param name="processedDictionary">Словарь обрабатываемых объектов.</param>
            <param name="dob">Объект данных.</param>
        </member>
        <member name="M:ICSSoft.STORMNET.Business.SQLDataService.ContainsKeyINProcessing(System.Collections.Generic.Dictionary{ICSSoft.STORMNET.TypeKeyPair,System.Boolean},ICSSoft.STORMNET.DataObject)">
            <summary>
            Проверка на наличие объекта в коллекции обрабатываемых объектов.
            </summary>
            <param name="processedDictionary">
            Словарь обрабатываемых объектов.
            </param>
            <param name="dob">
            Объект данных.
            </param>
            <returns>
            Если объект содержится в коллекции, то <c>true</c>.
            </returns>
        </member>
        <member name="M:ICSSoft.STORMNET.Business.SQLDataService.GenerateQueriesForUpdateObjects(System.Collections.Specialized.StringCollection,System.Collections.Specialized.StringCollection,System.Collections.Specialized.StringCollection,System.Collections.Specialized.StringCollection,System.Collections.Specialized.StringCollection,System.Collections.Specialized.StringCollection,System.Collections.SortedList,System.Collections.Specialized.StringCollection,System.Boolean,System.Collections.ArrayList,ICSSoft.STORMNET.DataObjectCache,ICSSoft.STORMNET.DataObject[])">
            <summary>
            Генерация запросов для изменения объектов.
            </summary>
            <param name="deleteQueries"> Запросы для удаление </param>
            <param name="deleteTables"> The Delete Tables. </param>
            <param name="updateQueries"> Запросы для изменения </param>
            <param name="updateTables"> The Update Tables. </param>
            <param name="insertQueries"> Запросы для добавления </param>
            <param name="insertTables"> The Insert Tables. </param>
            <param name="tableOperations"> The Table Operations. </param>
            <param name="queryOrder"> The Query Order. </param>
            <param name="checkLoadedProps"> Проверять ли загруженность свойств </param>
            <param name="processingObjects"> The processing Objects. </param>
            <param name="dataObjectCache"> The Data Object Cache.</param>
            <param name="dobjects"> Для чего генерим запросы </param>
        </member>
        <member name="M:ICSSoft.STORMNET.Business.SQLDataService.AuditOperation(ICSSoft.STORMNET.DataObject,System.Collections.Generic.ICollection{ICSSoft.STORMNET.Business.Audit.HelpStructures.AuditAdditionalInfo},System.Data.IDbTransaction)">
            <summary>
            Провести аудит операции для одного объекта.
            </summary>
            <param name="dobject"> Объект, аудит которого нужно провести. </param>
            <param name="auditOperationInfoList"> Список id записей аудита. </param>
            <param name="transaction"> 
            Транзакция, через которую необходимо проводить выполнение зачиток из БД приложения аудиту
            (при работе AuditService иногда необходимо дочитать объект или получить сохранённую копию, 
            а выполнение данного действия без транзакции может привести к взаимоблокировке).
            </param>
        </member>
        <member name="M:ICSSoft.STORMNET.Business.SQLDataService.AuditOperation(System.Collections.Generic.IEnumerable{ICSSoft.STORMNET.DataObject},System.Collections.Generic.ICollection{ICSSoft.STORMNET.Business.Audit.HelpStructures.AuditAdditionalInfo},System.Data.IDbTransaction)">
            <summary>
            Провести аудит операции для нескольких объектов.
            </summary>
            <param name="dobjects"> Объект, аудит которого нужно провести. </param>
            <param name="auditOperationInfoList"> Список id записей аудита. </param>
            <param name="transaction"> 
            Транзакция, через которую необходимо проводить выполнение зачиток из БД приложения аудиту
            (при работе AuditService иногда необходимо дочитать объект или получить сохранённую копию, 
            а выполнение данного действия без транзакции может привести к взаимоблокировке).
            По умолчанию - null. 
            </param>
        </member>
        <member name="M:ICSSoft.STORMNET.Business.SQLDataService.GetDataObjectFromSearchedList(System.Collections.Generic.List{ICSSoft.STORMNET.DataObject},ICSSoft.STORMNET.DataObject)">
            <summary>
            Поиск в списке объектов аналогичного указанному (должен совпасть тип и идентификатор).
            </summary>
            <param name="searchedDataObjectList">Список объектов, где производится поиск.</param>
            <param name="searchedDataObject">Объект, который ищется.</param>
            <returns>Найденный объект или <c>null</c>.</returns>
        </member>
        <member name="M:ICSSoft.STORMNET.Business.SQLDataService.GenerateAuditForAggregators(System.Collections.ArrayList,ICSSoft.STORMNET.DataObjectCache,System.Collections.Generic.List{ICSSoft.STORMNET.DataObject}@,System.Data.IDbTransaction)">
            <summary>
            Сгенерировать объекты для учета аудита агрегаторов обновляемых объектов, если они обновляются отдельно от агрегатора.
            </summary>
            <param name="processingObjects">Объекты, которые необходимо обработать.</param>
            <param name="dataObjectCache">Кэш объектов данных.</param>
            <param name="auditObjects">Список объектов, для которых нужно создать записи аудита. Сюда записывается результат работы метода.</param>
            <param name="transaction">Транзакция, в которой необходимо производить чтение (необязательный параметр).</param>
        </member>
        <member name="M:ICSSoft.STORMNET.Business.SQLDataService.GenerateQueriesForUpdateObjects(System.Collections.Specialized.StringCollection,System.Collections.Specialized.StringCollection,System.Collections.Specialized.StringCollection,System.Collections.Specialized.StringCollection,System.Collections.Specialized.StringCollection,System.Collections.Specialized.StringCollection,System.Collections.SortedList,System.Collections.Specialized.StringCollection,System.Boolean,System.Collections.ArrayList,ICSSoft.STORMNET.DataObjectCache,System.Collections.Generic.List{ICSSoft.STORMNET.DataObject},ICSSoft.STORMNET.DataObject[])">
            <summary>
            Генерация запросов для изменения объектов
            (дополнительно возвращается список объектов, для которых необходимо создание записей аудита).
            </summary>
            <param name="deleteQueries">Запросы для удаление (выходной параметр).</param>
            <param name="deleteTables">Таблицы, из которых будет проведено удаление данных (выходной параметр).</param>
            <param name="updateQueries">Сгенерированные запросы для изменения (выходной параметр).</param>
            <param name="updateTables">Таблицы, в которых будет проведено изменение данных (выходной параметр).</param>
            <param name="insertQueries">Сгенерированные запросы для добавления (выходной параметр).</param>
            <param name="insertTables">Таблицы, в которые будет проведена вставка данных (выходной параметр).</param>
            <param name="tableOperations">Операции, которые будут произведены над таблицами (выходной параметр).</param>
            <param name="queryOrder">Порядок исполнения генерируемых запросов, задаваемый именами таблиц (выходной параметр).</param>
            <param name="checkLoadedProps">Проверять ли загруженность свойств.</param>
            <param name="processingObjects">Текущие обрабатываемые объекты (то есть объекты, которые данный сервис данных планирует подтвердить в БД
             в текущей транзакции). Выходной параметр.</param>
            <param name="dataObjectCache">Кэш объектов данных.</param>
            <param name="auditObjects">Список объектов, которые необходимо записать в аудит (выходной параметр). Заполняется в том случае, когда
            передан не null и текущий сервис аудита включен.</param>
            <param name="dobjects">Объекты, для которых генерируются запросы.</param>
        </member>
        <member name="F:ICSSoft.STORMNET.Business.SQLDataService._securityManager">
            <summary>
            Приватное поле для <see cref="P:ICSSoft.STORMNET.Business.SQLDataService.SecurityManager"/>.
            </summary>
        </member>
        <member name="M:ICSSoft.STORMNET.Business.SQLDataService.UpdateObjectsOrdered(ICSSoft.STORMNET.DataObject[]@,System.Boolean)">
            <summary>
            Обновить объекты данных в указанном порядке
            </summary>
            <param name="objects">
            The objects.
            </param>
            <param name="alwaysThrowException">
            Если произошла ошибка в базе данных, не пытаться выполнять других запросов, сразу взводить ошибку и откатывать транзакцию. По умолчанию true;
            </param>
        </member>
        <member name="M:ICSSoft.STORMNET.Business.SQLDataService.UpdateObjectsByExtConn(ICSSoft.STORMNET.DataObject[]@,ICSSoft.STORMNET.DataObjectCache,System.Boolean,System.Data.IDbConnection,System.Data.IDbTransaction)">
            <summary>
            Обновить хранилище по объектам (есть параметр, указывающий, всегда ли необходимо взводить ошибку
            и откатывать транзакцию при неудачном запросе в базу данных). Если
            он true, всегда взводится ошибка. Иначе, выполнение продолжается.
            Однако, при этом есть опасность преждевременного окончания транзакции, с переходом для остальных
            запросов режима транзакционности в autocommit. Проявлением проблемы являются ошибки навроде:
            The COMMIT TRANSACTION request has no corresponding BEGIN TRANSACTION		
            TODO: Объединить код с UpdateObjects.
            </summary>
            <param name="objects">Объекты для обновления.</param>
            <param name="dataObjectCache">Кеш объектов.</param>
            <param name="alwaysThrowException">Если произошла ошибка в базе данных, не пытаться выполнять других запросов, сразу взводить ошибку и откатывать транзакцию.</param>
            <param name="connection">Коннекция (не забудьте закрыть).</param>
            <param name="transaction">Транзакция (не забудьте завершить).</param>
        </member>
        <member name="M:ICSSoft.STORMNET.Business.SQLDataService.LoadObject(ICSSoft.STORMNET.DataObject)">
            <summary>
            Загрузка одного объекта данных
            </summary>
            <param name="dobject">объект данных, который требуется загрузить</param>
        </member>
        <member name="M:ICSSoft.STORMNET.Business.SQLDataService.LoadObject(System.String,ICSSoft.STORMNET.DataObject)">
            <summary>
            Загрузка одного объекта данных
            </summary>
            <param name="dataObjectViewName">имя представления объекта</param>
            <param name="dobject">объект данных, который требуется загрузить</param>
        </member>
        <member name="M:ICSSoft.STORMNET.Business.SQLDataService.LoadObject(ICSSoft.STORMNET.View,ICSSoft.STORMNET.DataObject)">
            <summary>
            Загрузка одного объекта данных
            </summary>
            <param name="dataObjectView">представление объекта</param>
            <param name="dobject">объект данных, который требуется загрузить</param>
        </member>
        <member name="M:ICSSoft.STORMNET.Business.SQLDataService.LoadObject(ICSSoft.STORMNET.DataObject,System.Boolean,System.Boolean)">
            <summary>
            Загрузка одного объекта данных
            </summary>
            <param name="dobject">объект данных, который требуется загрузить</param>
            <param name="ClearDataObject">очищать ли объект</param>
            <param name="CheckExistingObject">проверять ли существование объекта в хранилище</param>
        </member>
        <member name="M:ICSSoft.STORMNET.Business.SQLDataService.LoadObject(System.String,ICSSoft.STORMNET.DataObject,System.Boolean,System.Boolean)">
            <summary>
            Загрузка одного объекта данных
            </summary>
            <param name="dataObjectViewName">наименование представления</param>
            <param name="dobject">бъект данных, который требуется загрузить</param>
            <param name="ClearDataObject">очищать ли объект</param>
            <param name="CheckExistingObject">проверять ли существование объекта в хранилище</param>
        </member>
        <member name="M:ICSSoft.STORMNET.Business.SQLDataService.LoadObject(ICSSoft.STORMNET.View,ICSSoft.STORMNET.DataObject,System.Boolean,System.Boolean)">
            <summary>
            Загрузка одного объекта данных
            </summary>
            <param name="dataObjectView">представление</param>
            <param name="dobject">бъект данных, который требуется загрузить</param>
            <param name="ClearDataObject">очищать ли объект</param>
            <param name="CheckExistingObject">проверять ли существование объекта в хранилище</param>
        </member>
        <member name="M:ICSSoft.STORMNET.Business.SQLDataService.LoadObjects(ICSSoft.STORMNET.DataObject[],ICSSoft.STORMNET.View,System.Boolean)">
            <summary>
            Загрузка объектов данных
            </summary>
            <param name="dataobjects">исходные объекты</param>
            <param name="dataObjectView">представлене</param>
            <param name="ClearDataobject">очищать ли существующие</param>
        </member>
        <member name="M:ICSSoft.STORMNET.Business.SQLDataService.LoadObjects(ICSSoft.STORMNET.Business.LoadingCustomizationStruct)">
            <summary>
            Загрузка объектов данных
            </summary>
            <param name="customizationStruct">настроичная структура для выборки<see cref="T:ICSSoft.STORMNET.Business.LoadingCustomizationStruct"/></param>
            <returns>результат запроса</returns>
        </member>
        <member name="M:ICSSoft.STORMNET.Business.SQLDataService.LoadObjects(ICSSoft.STORMNET.Business.LoadingCustomizationStruct,System.Object@)">
            <summary>
            Загрузка объектов данных
            </summary>
            <param name="customizationStruct">настроичная структура для выборки<see cref="T:ICSSoft.STORMNET.Business.LoadingCustomizationStruct"/></param>
            <param name="State">Состояние вычитки( для последующей дочитки )</param>
            <returns></returns>
        </member>
        <member name="M:ICSSoft.STORMNET.Business.SQLDataService.LoadObjects(System.Object@)">
            <summary>
            Загрузка объектов данных
            </summary>
            <param name="State">Состояние вычитки( для последующей дочитки)</param>
            <returns></returns>
        </member>
        <member name="M:ICSSoft.STORMNET.Business.SQLDataService.UpdateObject(ICSSoft.STORMNET.DataObject@,System.Boolean)">
            <summary>
            Обновление объекта данных
            </summary>
            <param name="dobject">объект данных, который требуется обновить</param>
        </member>
        <member name="M:ICSSoft.STORMNET.Business.SQLDataService.Clone">
            <summary>
            Создание копии экземпляра сервиса данных.
            </summary>
            <returns>Копии экземпляра сервиса данных.</returns>
        </member>
        <member name="M:ICSSoft.STORMNET.Business.SQLDataService.IsExpressionContainAttrubuteCheckOnly(System.String)">
            <summary>
            Выражение DataServiceExpression содержит только метаинформацию для контроля прав на атрибуты.
            </summary>
            <param name="expression">Выражение DataServiceExpression</param>
            <returns>True/False</returns>
        </member>
        <member name="M:ICSSoft.STORMNET.Business.SQLDataService.UpdateObjects(ICSSoft.STORMNET.DataObject[]@,ICSSoft.STORMNET.DataObjectCache,System.Boolean)">
            <summary>
            Обновить хранилище по объектам (есть параметр, указывающий, всегда ли необходимо взводить ошибку
            и откатывать транзакцию при неудачном запросе в базу данных). Если
            он true, всегда взводится ошибка. Иначе, выполнение продолжается.
            Однако, при этом есть опасность преждевременного окончания транзакции, с переходом для остальных
            запросов режима транзакционности в autocommit. Проявлением проблемы являются ошибки навроде:
            The COMMIT TRANSACTION request has no corresponding BEGIN TRANSACTION		
            </summary>		
            <param name="objects">объекты для обновления</param>
            <param name="DataObjectCache">кеш объектов</param>
            <param name="AlwaysThrowException">Если произошла ошибка в базе данных, не пытаться выполнять других запросов, сразу взводить ошибку и откатывать транзакцию</param>
        </member>
        <member name="M:ICSSoft.STORMNET.Business.SQLDataService.UpdateObjects(ICSSoft.STORMNET.DataObject[]@,ICSSoft.STORMNET.DataObjectCache)">
            <summary>
            Обновить хранилище по объектам. При ошибках делается попытка возобновления транзакции с другого запроса, 
            т.к. предполагается, что запросы должны быть выполнены в другом порядке.
            </summary>
            <param name="objects"></param>
            <param name="DataObjectCache"></param>
        </member>
        <member name="M:ICSSoft.STORMNET.Business.SQLDataService.UpdateObjects(ICSSoft.STORMNET.DataObject[]@)">
            <summary>
            
            </summary>
            <param name="objects"></param>
        </member>
        <member name="P:ICSSoft.STORMNET.Business.SQLDataService.StorageType">
            <summary>
            Тип хранилища
            </summary>
        </member>
        <member name="P:ICSSoft.STORMNET.Business.SQLDataService.CustomizationString">
            <summary>
            Настроичная строка (строка соединения)
            </summary>
        </member>
        <member name="P:ICSSoft.STORMNET.Business.SQLDataService.DoNotChangeCustomizationString">
            <summary>
            Не менять строку соединения общим делегатом ChangeCustomizationString
            </summary>
        </member>
        <member name="P:ICSSoft.STORMNET.Business.SQLDataService.Types">
            <summary>
            Gets the types.
            </summary>
        </member>
        <member name="P:ICSSoft.STORMNET.Business.SQLDataService.SecurityManager">
            <summary>
            Сервис подсистемы полномочий, который применяется для проверки прав доступа. Рекомендуется устанавливать его через конструктор, в противном случае используется настройка в Unity.
            </summary>
        </member>
        <member name="P:ICSSoft.STORMNET.Business.SQLDataService.TypeUsage">
            <summary>
            
            </summary>
        </member>
        <member name="E:ICSSoft.STORMNET.Business.SQLDataService.OnGenerateSQLSelect">
            <summary>
            Событие перед генерацией запроса
            </summary>
        </member>
        <member name="E:ICSSoft.STORMNET.Business.SQLDataService.AfterGenerateSQLSelectQuery">
            <summary>
            После генерации, но до вычитки
            </summary>
        </member>
        <member name="E:ICSSoft.STORMNET.Business.SQLDataService.AfterGenerateSQLSelectQueryStatic">
            <summary>
            После генерации, но до вычитки, статический эвент (выполняется после обработки в AfterGenerateSQLSelectQuery)
            </summary>
        </member>
        <member name="E:ICSSoft.STORMNET.Business.SQLDataService.BeforeUpdateObjects">
            <summary>
            Перед выполнением обновления объектов в базе. После отработки бизнес-серверов.
            </summary>
        </member>
        <member name="E:ICSSoft.STORMNET.Business.SQLDataService.AfterUpdateObjects">
            <summary>
            После выполнения обновления объектов в базе.
            </summary>
        </member>
        <member name="P:ICSSoft.STORMNET.Business.SQLDataService.CommandTimeout">
            <summary>
            IDbCommand.CommandTimeout кроме установки этого таймаута не забудьте установить флаг <see cref="P:ICSSoft.STORMNET.Business.SQLDataService.UseCommandTimeout"/>
            </summary>
        </member>
        <member name="P:ICSSoft.STORMNET.Business.SQLDataService.UseCommandTimeout">
            <summary>
             Использовать ли атрибут <see cref="P:ICSSoft.STORMNET.Business.SQLDataService.CommandTimeout"/> (если задан через конфиг, то будет true) по-умолчанию false
            </summary>
        </member>
        <member name="T:ICSSoft.STORMNET.Business.SQLDataService.OperationType">
            <summary>
            The operation type.
            </summary>
        </member>
        <member name="T:ICSSoft.STORMNET.Business.ExecutingQueryException">
            <summary>
            Исключительная ситуация, при выполнении запроса
            </summary>
        </member>
        <member name="F:ICSSoft.STORMNET.Business.ExecutingQueryException.curQuery">
            <summary>
            Запрос при котором возникла ошибка
            </summary>
        </member>
        <member name="F:ICSSoft.STORMNET.Business.ExecutingQueryException.prevQueries">
            <summary>
            Выполненные предыдущие запросы (в этой же транзакции)
            </summary>
        </member>
        <member name="M:ICSSoft.STORMNET.Business.ExecutingQueryException.#ctor(System.String,System.String,System.Exception)">
            <summary>
            
            </summary>
            <param name="cq">Запрос при котором возникла ошибка</param>
            <param name="pq"> Выполненные предыдущие запросы (в этой же транзакции)</param>
            <param name="inner"></param>
        </member>
        <member name="M:ICSSoft.STORMNET.Business.ExecutingQueryException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            
            </summary>
            <param name="info"></param>
            <param name="context"></param>
        </member>
        <member name="M:ICSSoft.STORMNET.Business.ExecutingQueryException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            
            </summary>
            <param name="info"></param>
            <param name="context"></param>
        </member>
        <member name="T:ICSSoft.STORMNET.Business.UpdaterObject">
            <summary>
            Спецкласс, предназначенный для выполнения групповых операций
            Update или Delete в источнике данных
            </summary>
        </member>
        <member name="M:ICSSoft.STORMNET.Business.UpdaterObject.#ctor(ICSSoft.STORMNET.DataObject,ICSSoft.STORMNET.FunctionalLanguage.Function)">
            <summary>
            Конструктор шаблонного "изменятеля"
            </summary>
            <param name="fTemplateObject">Объект-шаблон</param>
            <param name="fFunction">Функция условия, по которому проводить удаление или обновление</param>
        </member>
        <member name="P:ICSSoft.STORMNET.Business.UpdaterObject.TemplateObject">
            <summary>
            Шаблонный объект данных. Если его статус Altered, тогда будет групповое
            обновление объектов, все изменённые атрибуты будут изменены в группе.
            Если статус Deleted, то просто будет групповое удаление по условию.
            </summary>
        </member>
        <member name="P:ICSSoft.STORMNET.Business.UpdaterObject.Function">
            <summary>
            Функция ограничения, в соответствии с которой происходит групповое 
            изменение объектов или удаление
            </summary>
        </member>
        <member name="T:ICSSoft.STORMNET.Business.Utils">
            <summary>
            Набор служебной логики для сервиса данных.
            </summary>
            <summary>
            Набор служебной логики для сервиса данных.
            </summary>
        </member>
        <member name="M:ICSSoft.STORMNET.Business.Utils.IsInternalBaseType(System.Object)">
            <summary>
            проверить - системный ли тип
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:ICSSoft.STORMNET.Business.Utils.CountMasterKeysInSelect(ICSSoft.STORMNET.Business.StorageStructForView)">
            <summary>
            Вычислить количество мастеровых ключей в запросе к хранилищу
            </summary>
            <param name="storStruct"><see cref="T:ICSSoft.STORMNET.Business.StorageStructForView"/></param>
            <returns></returns>
        </member>
        <member name="M:ICSSoft.STORMNET.Business.Utils.ConvertSimpleValueString(System.Object)">
            <summary>
            Привести к строке.
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:ICSSoft.STORMNET.Business.Utils.ProcessingRowSet2StringedView(System.Object[][],System.Boolean,System.Type[],System.Int32,System.Char,ICSSoft.STORMNET.Business.LoadingCustomizationStruct,ICSSoft.STORMNET.Business.StorageStructForView[],ICSSoft.STORMNET.Business.IDataService,System.Collections.SortedList,System.Object[]@,ICSSoft.STORMNET.DataObjectCache,ICSSoft.STORMNET.Security.ISecurityManager)">
            <summary>
            Преобразование RowSet к <see cref="T:ICSSoft.STORMNET.Business.ObjectStringDataView"/>
            </summary>
            <param name="resValue">сами данные</param>
            <param name="forReadValues"></param>
            <param name="dataObjectType">типы объекта данных</param>
            <param name="propCount">количество свойств</param>
            <param name="separator">разделитель</param>
            <param name="customizationStruct">структура настройки выборки</param>
            <param name="storageStruct">структура хранилища</param>
            <param name="dataService">сервис данный, выполнивший запрос</param>
            <param name="typesByKeys"></param>
            <param name="prevState">Предыдущее состояние вычитки для порционного чтения</param>
            <param name="dataObjectCache">кэш объектов данных</param>
            <param name="securityManager">Менеджер полномочий.</param>
            <returns><see cref="T:ICSSoft.STORMNET.Business.ObjectStringDataView"/></returns>
        </member>
        <member name="M:ICSSoft.STORMNET.Business.Utils.GetMasterObjectStructs(System.Object[],System.Int32@,System.Int32,ICSSoft.STORMNET.Business.StorageStructForView.PropSource,System.Collections.ArrayList,System.String)">
            <summary>
            Построить структуру мастеров
            </summary>
            <param name="keysarr">массив ключей</param>
            <param name="keyindex">текущий индекс</param>
            <param name="index">индекс вышестоящего источника</param>
            <param name="source">текущий источник</param>
            <param name="res">дин.массив, куда складываем пезультат</param>
            <param name="nameSpace">текущий NameSpace</param>
        </member>
        <member name="M:ICSSoft.STORMNET.Business.Utils.CreateMastersStruct(ICSSoft.STORMNET.DataObject,System.Object[],System.Int32@,System.Int32,ICSSoft.STORMNET.Business.StorageStructForView.PropSource,System.Collections.SortedList,System.Collections.SortedList,ICSSoft.STORMNET.DataObjectCache)">
            <summary>
            
            </summary>
            <param name="dataObject"></param>
            <param name="keysarr"></param>
            <param name="keyindex"></param>
            <param name="index"></param>
            <param name="source"></param>
            <param name="sourceToDataObjectList"></param>
            <param name="TypesByKeys"></param>
        </member>
        <member name="M:ICSSoft.STORMNET.Business.Utils.ProcessingRowsetDataRef(System.Object[][],System.Type[],ICSSoft.STORMNET.Business.StorageStructForView[],ICSSoft.STORMNET.Business.LoadingCustomizationStruct,ICSSoft.STORMNET.DataObject[]@,ICSSoft.STORMNET.Business.IDataService,System.Collections.SortedList,System.Boolean,ICSSoft.STORMNET.DataObjectCache,ICSSoft.STORMNET.Security.ISecurityManager,System.Data.IDbConnection,System.Data.IDbTransaction)">
            <summary>
            Преобразовать рекордсета в объекты.
            </summary>
            <param name="value">Значения.</param>
            <param name="dataObjectType">Типы объектов.</param>
            <param name="storageStruct">Структуры выборки для типов.</param>
            <param name="customizationStruct">Настройка выборки.</param>
            <param name="res">Результат.</param>
            <param name="dataService">Сервис данных,которым читали.</param>
            <param name="typesByKeys"></param>
            <param name="сlearDataObjects">Очищать ли существующие объекты.</param>
            <param name="dataObjectCache">Кэш объектов данных.</param>
            <param name="securityManager">Менеджер полномочий.</param>
            <param name="connection">Коннекция, через которую желательно выполнять все зачитки объектов.</param>
            <param name="transaction">Транзакция, через которую желательно выполнять все зачитки объектов.</param>
        </member>
        <member name="M:ICSSoft.STORMNET.Business.Utils.LoadObjects(ICSSoft.STORMNET.Business.LoadingCustomizationStruct,ICSSoft.STORMNET.DataObjectCache,ICSSoft.STORMNET.Business.IDataService,System.Data.IDbConnection,System.Data.IDbTransaction)">
            <summary>
            Загрузка объектов с возможностью указания транзакции, в рамках которой необходимо выполнять загрузку.
            </summary>
            <param name="dcs">Структура, определяющая, какие объекта и как загружать.</param>
            <param name="dataObjectCache">Кэш объектов данных.</param>
            <param name="dataService">Сервис данных, через который нужно выполнять загрузку данных.</param>
            <param name="connection">Коннекция, в рамках которой нужно выполнять загрузку данных.</param>
            <param name="transaction">Транзакция, в рамках которой нужно выполнять загрузку данных.</param>
            <returns>Загруженные объекты.</returns>
        </member>
        <member name="M:ICSSoft.STORMNET.Business.Utils.ProcessingRowsetData(System.Object[][],System.Type[],ICSSoft.STORMNET.Business.StorageStructForView[],ICSSoft.STORMNET.Business.LoadingCustomizationStruct,ICSSoft.STORMNET.Business.IDataService,System.Collections.SortedList,ICSSoft.STORMNET.DataObjectCache,ICSSoft.STORMNET.Security.ISecurityManager,System.Data.IDbConnection,System.Data.IDbTransaction)">
            <summary>
            Преобразовать рекордсета в объекты
            </summary>
            <param name="value"></param>
            <param name="dataObjectType"></param>
            <param name="StorageStruct"></param>
            <param name="customizationStruct"></param>
            <param name="dataService"></param>
            <param name="TypesByKeys"></param>
            <param name="securityManager">Менеджер полномочий.</param>
            <param name="connection">Коннекция, через которую желательно выполнять все зачитки объектов.</param>
            <param name="transaction">Транзакция, через которую желательно выполнять все зачитки объектов.</param>
            <returns></returns>
        </member>
        <member name="M:ICSSoft.STORMNET.Business.Utils.getDetailsObjects(ICSSoft.STORMNET.Business.IDataService,ICSSoft.STORMNET.DataObject,ICSSoft.STORMNET.DataObject[]@,ICSSoft.STORMNET.DataObject[]@,ICSSoft.STORMNET.View[]@)">
            <summary>
            Получить детейловые объекты
            </summary>
            <param name="dataService"></param>
            <param name="dobject"></param>
            <param name="readedDetailObjects"></param>
            <param name="unreadedDetailsViewsForDetailPath"></param>
        </member>
        <member name="M:ICSSoft.STORMNET.Business.Utils.UpdateInternalDataInObjects(ICSSoft.STORMNET.DataObject,System.Boolean,ICSSoft.STORMNET.DataObjectCache)">
            <summary>
            Обновить внутренние данные объекта
            </summary>
            <param name="dobj">объект</param>
            <param name="UpLevel">верхнего ли уровня</param>
        </member>
        <member name="M:ICSSoft.STORMNET.Business.Utils.getUnreadedDetailsArrayReadView(ICSSoft.STORMNET.Business.IDataService,System.Type,System.String,ICSSoft.STORMNET.Collections.NameObjectCollection)">
            <summary>
            
            </summary>
            <param name="dataService"></param>
            <param name="dotype"></param>
            <param name="path"></param>
            <param name="MasterTypes"></param>
            <returns></returns>
        </member>
        <member name="M:ICSSoft.STORMNET.Business.Utils.ArraysEqual``1(``0[],``0[])">
            <summary>
            Сравнение двух массивов
            </summary>
            <typeparam name="T">Тип элементов массива</typeparam>
            <param name="a1">Массив 1</param>
            <param name="a2">Массив 2</param>
            <returns>Равны или нет</returns>
        </member>
        <member name="M:ICSSoft.STORMNET.Business.Utils.FillRowSetToDataObject(ICSSoft.STORMNET.DataObject,System.Object[],ICSSoft.STORMNET.Business.StorageStructForView,ICSSoft.STORMNET.Business.LoadingCustomizationStruct,System.Collections.SortedList,ICSSoft.STORMNET.Business.AdvansedColumn[],ICSSoft.STORMNET.DataObjectCache,ICSSoft.STORMNET.Security.ISecurityManager)">
            <summary>
            Заполнить объект данных.
            </summary>
            <param name="dobject">Объект данных.</param>
            <param name="values">Значения для заполнения.</param>
            <param name="storageStruct">Метаданные структуры хранения.</param>
            <param name="customizationStruct">Настройка выборки данных.</param>
            <param name="typesByKeys">Служебная структура, увязывающая типы мастеров и их ключи.</param>
            <param name="advCols">Дополнительные колонки.</param>
            <param name="dataObjectCache">Кэш объектов данных.</param>
            <param name="securityManager">Менеджер полномочий.</param>
        </member>
        <member name="T:ICSSoft.STORMNET.Business.XMLFileDataService">
            <summary>
            Сервис данных для XML.
            </summary>
        </member>
        <member name="F:ICSSoft.STORMNET.Business.XMLFileDataService.StormMainObjectKey">
            <summary>
            Константа для STORMMainObjectKey
            </summary>
        </member>
        <member name="F:ICSSoft.STORMNET.Business.XMLFileDataService._securityManager">
            <summary>
            Приватное поле для <see cref="P:ICSSoft.STORMNET.Business.XMLFileDataService.SecurityManager"/>.
            </summary>
        </member>
        <member name="F:ICSSoft.STORMNET.Business.XMLFileDataService._schemaWorkMode">
            <summary>
            Режим работы со схемой.
            </summary>
        </member>
        <member name="F:ICSSoft.STORMNET.Business.XMLFileDataService._dataWorkMode">
            <summary>
            Режим работы с файлом данных.
            </summary>
        </member>
        <member name="F:ICSSoft.STORMNET.Business.XMLFileDataService._schemaStream">
            <summary>
            Поток со схемой.
            </summary>
        </member>
        <member name="F:ICSSoft.STORMNET.Business.XMLFileDataService._dataStream">
            <summary>
            Поток с данными.
            </summary>
        </member>
        <member name="M:ICSSoft.STORMNET.Business.XMLFileDataService.GetObjectsCount(ICSSoft.STORMNET.Business.LoadingCustomizationStruct)">
            <summary>
            возвращает количество объектов удовлетворяющих запросу
            </summary>
            <param name="customizationStruct">что выбираем</param>
            <returns></returns>
        </member>
        <member name="M:ICSSoft.STORMNET.Business.XMLFileDataService.LoadObject(ICSSoft.STORMNET.DataObject)">
            <summary>
            Загрузка одного объекта данных
            </summary>
            <param name="dobject">объект данных, который требуется загрузить</param>
        </member>
        <member name="M:ICSSoft.STORMNET.Business.XMLFileDataService.LoadObject(System.String,ICSSoft.STORMNET.DataObject)">
            <summary>
            Загрузка одного объекта данных
            </summary>
            <param name="dataObjectViewName">имя представления объекта</param>
            <param name="dobject">объект данных, который требуется загрузить</param>
        </member>
        <member name="M:ICSSoft.STORMNET.Business.XMLFileDataService.LoadObject(ICSSoft.STORMNET.View,ICSSoft.STORMNET.DataObject)">
            <summary>
            Загрузка одного объекта данных
            </summary>
            <param name="dataObjectView">представление объекта</param>
            <param name="dobject">объект данных, который требуется загрузить</param>
        </member>
        <member name="M:ICSSoft.STORMNET.Business.XMLFileDataService.LoadObject(ICSSoft.STORMNET.DataObject,System.Boolean,System.Boolean)">
            <summary>
            Загрузка одного объекта данных
            </summary>
            <param name="dobject">объект данных, который требуется загрузить</param>
            <param name="clearDataObject">очищать ли объект</param>
            <param name="checkExistingObject">проверять ли существование объекта в хранилище</param>
        </member>
        <member name="M:ICSSoft.STORMNET.Business.XMLFileDataService.LoadObject(System.String,ICSSoft.STORMNET.DataObject,System.Boolean,System.Boolean)">
            <summary>
            Загрузка одного объекта данных
            </summary>
            <param name="dataObjectViewName">наименование представления</param>
            <param name="dobject">бъект данных, который требуется загрузить</param>
            <param name="clearDataObject">очищать ли объект</param>
            <param name="checkExistingObject">проверять ли существование объекта в хранилище</param>
        </member>
        <member name="M:ICSSoft.STORMNET.Business.XMLFileDataService.LoadObject(ICSSoft.STORMNET.View,ICSSoft.STORMNET.DataObject,System.Boolean,System.Boolean)">
            <summary>
            Загрузка одного объекта данных
            </summary>
            <param name="dataObjectView">представление</param>
            <param name="dobject">бъект данных, который требуется загрузить</param>
            <param name="clearDataObject">очищать ли объект</param>
            <param name="checkExistingObject">проверять ли существование объекта в хранилище</param>
        </member>
        <member name="M:ICSSoft.STORMNET.Business.XMLFileDataService.UpdateObject(ICSSoft.STORMNET.DataObject@,ICSSoft.STORMNET.DataObjectCache,System.Boolean)">
            <summary>
            Сохранить объект данных в XML-файл
            </summary>
            <param name="dataObject"></param>
            <param name="dataObjectCache"></param>
            <param name="alwaysThrowException"></param>
        </member>
        <member name="M:ICSSoft.STORMNET.Business.XMLFileDataService.UpdateObject(ICSSoft.STORMNET.DataObject@,ICSSoft.STORMNET.DataObjectCache)">
            <summary>
            Сохранить объект данных в XML-файл
            </summary>
            <param name="dataObject"></param>
            <param name="dataObjectCache"></param>
        </member>
        <member name="M:ICSSoft.STORMNET.Business.XMLFileDataService.UpdateObject(ICSSoft.STORMNET.DataObject,ICSSoft.STORMNET.DataObjectCache)">
            <summary>
            Сохранить объект данных в XML-файл
            </summary>
            <param name="dataObject"></param>
            <param name="dataObjectCache"></param>
        </member>
        <member name="M:ICSSoft.STORMNET.Business.XMLFileDataService.UpdateObject(ICSSoft.STORMNET.DataObject,System.Boolean)">
            <summary>
            Сохранить объект данных в XML-файл
            </summary>
            <param name="dataObject"></param>
            <param name="alwaysThrowException"></param>
        </member>
        <member name="M:ICSSoft.STORMNET.Business.XMLFileDataService.UpdateObject(ICSSoft.STORMNET.DataObject@,System.Boolean)">
            <summary>
            Обновление объекта данных
            </summary>
            <param name="dobject">объект данных, который требуется обновить</param>
            <param name="alwaysThrowException"></param>
        </member>
        <member name="M:ICSSoft.STORMNET.Business.XMLFileDataService.UpdateObject(ICSSoft.STORMNET.DataObject@)">
            <summary>
            Обновление объекта данных
            </summary>
            <param name="dobject">объект данных, который требуется обновить</param>
        </member>
        <member name="M:ICSSoft.STORMNET.Business.XMLFileDataService.UpdateObject(ICSSoft.STORMNET.DataObject)">
            <summary>
            Сохранить объект данных в XML-файл
            </summary>
            <param name="dataObject"></param>
        </member>
        <member name="M:ICSSoft.STORMNET.Business.XMLFileDataService.ChangeType(System.String,System.Type)">
            <summary>
             Корректное преобразование строкового значения к указанному типу
            </summary>
            <param name="sValue">Строковое значение для приведения</param>
            <param name="castType">Тип к которому преобразуем</param>
            <returns>Преобразованное значение</returns>
        </member>
        <member name="M:ICSSoft.STORMNET.Business.XMLFileDataService.Clone">
            <summary>
            Создание копии экземпляра сервиса данных.
            </summary>
            <returns>Копии экземпляра сервиса данных.</returns>
        </member>
        <member name="M:ICSSoft.STORMNET.Business.XMLFileDataService.CompleteLoadStringedObjectView(System.Object@)">
            <summary>
            Корректное завершения операции порционного чтения LoadStringedObjectView.
            </summary>
            <param name="state">Параметр состояния загрузки (массив объектов).</param>
        </member>
        <member name="M:ICSSoft.STORMNET.Business.XMLFileDataService.GetDataSet(ICSSoft.STORMNET.Business.LoadingCustomizationStruct,ICSSoft.STORMNET.Business.StorageStructForView[]@,System.Int32@)">
            <summary>
            Возвращает сформированную таблицу данных для указанного запроса в виде lcs
            </summary>
            <param name="customizationStruct">lcs для формирования запроса данных</param>
            <param name="storageStructs">Структуры хранения, которые будут получены из lcs.</param>
            <param name="maxCountKeys">Максимальное колличество ключей для структур хранения.</param>
            <returns></returns>
        </member>
        <member name="M:ICSSoft.STORMNET.Business.XMLFileDataService.FillDataTable(System.Data.DataTable,ICSSoft.STORMNET.Business.StorageStructForView,System.Collections.Generic.List{ICSSoft.STORMNET.Business.XMLFileDataService.ColumnInfo},System.Int32)">
            <summary>
            Добавляет в таблицу новые строки с заполненными данными для указанной структуры
            </summary>
            <param name="dt">Таблица, в которую добавляются строки.</param>
            <param name="storageStruct">Структура хранения на основе которой будут добавлять строки.</param>
            <param name="columnsInfo">Информация о колонках для определения, что и в какие колонки записывать.</param>
            <param name="structIndex">
            Номер структуры. 
            Необходим для того, чтобы достать настройки из информации о колонках.
            Если необходимо заполнить таблицу одним массивом данных и структура была одна, то необходимо передать 0.
            </param>
        </member>
        <member name="M:ICSSoft.STORMNET.Business.XMLFileDataService.SetAllMasterTables(ICSSoft.STORMNET.Business.StorageStructForView.PropSource,System.Data.DataTable,System.Collections.Generic.Dictionary{ICSSoft.STORMNET.Business.StorageStructForView.PropSource,System.Data.DataTable})">
            <summary>
            Возвращает все таблицы мастеров после соединения.
            </summary>
            <param name="propSource">Базовый источник данных в котором будут искаться мастера</param>
            <param name="mainTable">Таблица основного объекта данных.</param>
            <param name="result">Результат выполнения метода. Необходим для выполнения рекурсии.</param>
            <returns>Таблицы мастеров после соединения</returns>
        </member>
        <member name="M:ICSSoft.STORMNET.Business.XMLFileDataService.GetResultJoinTables(System.Data.DataTable,System.Data.DataTable,System.String,System.String)">
            <summary>
            Получить массив всех свойств мастера, после соединения таблиц по указанным полям.
            </summary>
            <param name="dt1">
            Таблица которую будут соединять.
            В этой таблице будет искаться свойство, в котором храниться ключ мастера
            </param>
            <param name="dt2">
            Таблица с которой будут соединять (таблица мастера).
            Значения этой таблицы после соединения и будут результатом.
            </param>
            <param name="propMasterKey">
            Имя свойства мастера из первой таблицы.
            Имя поля по которому соединяют со стороны первой таблицы.
            </param>
            <param name="pkMasterName">
            Имя свойства мастера в котором храниться первичный ключ. 
            Имя поля по которому соединяют со стороны второй таблицы.
            </param>
            <returns>
            Значения свойств мастера. Пара: имя свойства и массив значений.
            Все массивы размернойстью в количество строк основной таблицы (первой).
            Если ссылка на мастера была пустой или мастер не был найден, то весь массив будет заполнен null'ми.
            Возвращает null в случае, если не найдена таблицы или свойство мастера из первой таблицы.
            </returns>
        </member>
        <member name="M:ICSSoft.STORMNET.Business.XMLFileDataService.GetResultJoinTablesByPropNames(System.Data.DataTable,System.Data.DataTable,System.String,System.String,System.Collections.Generic.List{System.String})">
            <summary>
            Получить массив свойств мастера, после соединения таблиц по указанным полям.
            </summary>
            <param name="dt1">
            Таблица которую будут соединять.
            В этой таблице будет искаться свойство, в котором храниться ключ мастера
            </param>
            <param name="dt2">
            Таблица с которой будут соединять (таблица мастера).
            В этой таблице будут искаться свойства массивы значений которых возвращается.
            </param>
            <param name="propMasterKey">
            Имя свойства мастера из первой таблицы.
            Имя поля по которому соединяют со стороны первой таблицы.
            </param>
            <param name="pkMasterName">
            Имя свойства мастера в котором храниться первичный ключ. 
            Имя поля по которому соединяют со стороны второй таблицы.
            </param>
            <param name="propMasterNames">
            Имена свойств мастера, которые необходимо вернуть.
            </param>
            <returns>
            Значения свойств мастера. Пара: имя свойства и массив значений.
            Все массивы размернойстью в количество строк основной таблицы (первой).
            Если ссылка на мастера была пустой или мастер не был найден, то весь массив будет заполнен null'ми.
            Возвращает null в случае, если не найдена таблицы или свойство мастера из первой таблицы.
            </returns>
        </member>
        <member name="M:ICSSoft.STORMNET.Business.XMLFileDataService.GetAllLinkedStoragesFroPropSource(ICSSoft.STORMNET.Business.StorageStructForView.PropSource)">
            <summary>
            Возвращает все источники мастеров по иерархии для указанного источника данных
            </summary>
            <param name="propSource">Источник данных от которого начнется проход по иерархии мастеров</param>        
            <returns>Список всех источников мастеров, полученных по иерархии</returns>
        </member>
        <member name="M:ICSSoft.STORMNET.Business.XMLFileDataService.AddColumnsToDataTable(System.Data.DataTable,ICSSoft.STORMNET.Business.StorageStructForView[])">
            <summary>
            Добавление колонок в таблицу.
            метод необходим при формировании DataSet'а при запросе данных.
            </summary>
            <param name="dt">Таблица в которой будут созданы колонки</param>
            <param name="storageStructs">
            Структуры хранения, по которым будут сформированы колонки в таблице.
            </param>
        </member>
        <member name="P:ICSSoft.STORMNET.Business.XMLFileDataService.SecurityManager">
            <summary>
            Сервис подсистемы полномочий, который применяется для проверки прав доступа. Рекомендуется устанавливать его через конструктор.
            </summary>
        </member>
        <member name="P:ICSSoft.STORMNET.Business.XMLFileDataService.Folder">
            <summary>
            Путь до файлов с базой и схемой.
            </summary>
        </member>
        <member name="P:ICSSoft.STORMNET.Business.XMLFileDataService.DataBaseName">
            <summary>
            Имя файла базы и схемы (без расширения).
            </summary>
        </member>
        <member name="P:ICSSoft.STORMNET.Business.XMLFileDataService.SchemaStream">
            <summary>
            Поток со схемой.
            </summary>
        </member>
        <member name="P:ICSSoft.STORMNET.Business.XMLFileDataService.DataStream">
            <summary>
            Поток с данными.
            </summary>
        </member>
        <member name="T:ICSSoft.STORMNET.Business.XMLFileDataService.WorkMode">
            <summary>
            Режимы работы XMLFileDataService.
            </summary>
        </member>
        <member name="F:ICSSoft.STORMNET.Business.XMLFileDataService.WorkMode.FileSystem">
            <summary>
            Работа с файлом в файловой системе.
            </summary>
        </member>
        <member name="F:ICSSoft.STORMNET.Business.XMLFileDataService.WorkMode.InMemory">
            <summary>
            Работа с памятью.
            </summary>
        </member>
        <member name="M:ICSSoft.STORMNET.Business.XMLFileDataService.ColumnInfo.#ctor(System.String)">
            <summary>
            Конструктор для вспомогательных колонок StormDataObjectType и StormMainObjectKey
            </summary>
        </member>
        <member name="M:ICSSoft.STORMNET.Business.XMLFileDataService.ColumnInfo.#ctor(System.String,ICSSoft.STORMNET.Business.StorageStructForView.PropSource)">
            <summary>
            Конструктор для вспомогательной колонки StormJoinedMasterKey, 
            котороя необходима для проставления ссылок на мастера 
            (не только те мастера, которые указаны в представлении)
            </summary>
        </member>
    </members>
</doc>
